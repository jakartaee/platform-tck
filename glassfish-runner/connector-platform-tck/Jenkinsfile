pipeline {
    agent any
      parameters {
          string(name: 'VERSION', defaultValue: '1.0-SNAPSHOT', description: 'What version to build?')
          string(name: 'BRANCH', defaultValue: 'main', description: 'What branch of the runner to use')
          // Need to know the configured JDKs in Jenkins
          choice(name: 'JDK', choices: ['temurin-17.jdk', 'temurin-21.jdk'], description: 'JDK Version')
      }

    tools {
        jdk "${params.JDK}"
        maven 'maven-3.9.9'
    }
    stages {
        stage('Build connector-tck') {
            steps {
                git branch: "${params.BRANCH}", url: 'https://github.com/jakartaee/platform-tck.git'
                withMaven {
                  sh '''#!/bin/bash -xe
                    PROJECTS=".,bom,tcks/apis/connector,tcks/apis/connector-whitebox"
                    PROJECTS="${PROJECTS},tcks/apis/connector-whitebox/annotated"
                    PROJECTS="${PROJECTS},tcks/apis/connector-whitebox/ibanno"
                    PROJECTS="${PROJECTS},tcks/apis/connector-whitebox/mdcomplete"
                    PROJECTS="${PROJECTS},tcks/apis/connector-whitebox/mixedmode"
                    PROJECTS="${PROJECTS},tcks/apis/connector-whitebox/multianno"
                    PROJECTS="${PROJECTS},tcks/apis/connector-whitebox/whitebox"
                    PROJECTS="${PROJECTS},tcks/apis/connector-whitebox/whitebox-notx"
                    PROJECTS="${PROJECTS},tcks/apis/connector-whitebox/whitebox-notx-param"
                    PROJECTS="${PROJECTS},tcks/apis/connector-whitebox/whitebox-tx"
                    PROJECTS="${PROJECTS},tcks/apis/connector-whitebox/whitebox-tx-param"
                    PROJECTS="${PROJECTS},tcks/apis/connector-whitebox/whitebox-xa"
                    PROJECTS="${PROJECTS},tcks/apis/connector-whitebox/whitebox-xa-param"
                    mvn -Pstaging -pl "${PROJECTS}" install
                    '''
                }
            }
        }
        stage('Run connector-platform-tck javatest') {
            steps {
                dir('glassfish-runner/connector-platform-tck') {
                  sh "mvn -Pfull,staging pre-integration-test failsafe:integration-test@connector-javatest-tests"
                }
            }
        }
        stage('Run connector-platform-tck appclient') {
            steps {
                dir('glassfish-runner/connector-platform-tck') {
                  sh "mvn -Pfull,staging pre-integration-test failsafe:integration-test@connector-appclient-tests"
                }
            }
        }
        stage('Reporting') {
            steps {
                dir('glassfish-runner/connector-platform-tck') {
                  sh "mvn -Pstaging surefire-report:failsafe-report-only"
                  junit 'target/failsafe-reports/*.xml'
                  publishHTML target: [
                    allowMissing: true,
                    alwaysLinkToLastBuild: false,
                    keepAll: true,
                    reportDir: 'target/reports',
                    reportFiles: 'failsafe.html',
                    reportName: 'Connector TCK Report'
                  ]
                }
            }
        }
    }
}