<?xml version="1.0" encoding="UTF-8"?>
<!--

    Copyright (c) 2021, 2024 Contributors to the Eclipse Foundation. All rights reserved.

    This program and the accompanying materials are made available under the
    terms of the Eclipse Public License v. 2.0, which is available at
    http://www.eclipse.org/legal/epl-2.0.

    This Source Code may also be made available under the following Secondary
    Licenses when the conditions for such availability set forth in the
    Eclipse Public License v. 2.0 are satisfied: GNU General Public License,
    version 2 with the GNU Classpath Exception, which is available at
    https://www.gnu.org/software/classpath/license.html.

    SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0

-->
<!--

Usage:

Run full TCK:

mvn clean install


Run all tests in test class

mvn clean install -Drun.test="JAXRSBasicClientIT"


Run single test:

mvn clean install -Drun.test="JAXRSBasicClientIT#basicAuthorizationAdminTest"


Run single test and suspend on port 9009:

mvn clean install -Drun.test="JAXRSBasicClientIT#basicAuthorizationAdminTest" -Dglassfish.suspend


Run a specified group:

mvn clean install -Dgroups=security
-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.glassfish</groupId>
        <artifactId>standalone-tck</artifactId>
        <version>11.0.0-SNAPSHOT</version>
    </parent>

    <artifactId>rest-tck</artifactId>

    <name>Jakarta REST TCK run on glassfish</name>
    <description>This verifies the compliance of Eclipse Glassfish using the Jakarta REST standalone TCK</description>

    <properties>
        <glassfish.home>${glassfish.root}/glassfish8</glassfish.home>
        <glassfish.root>${project.build.directory}</glassfish.root>

        <glassfish.version>8.0.0-M6</glassfish.version>
        <maven.compiler.release>17</maven.compiler.release>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

        <tck.version>4.0.0</tck.version>
    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.junit</groupId>
                <artifactId>junit-bom</artifactId>
                <version>5.10.2</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>jakarta.ws.rs</groupId>
                <artifactId>jakarta.ws.rs-api</artifactId>
                <version>4.0.0</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <dependency>
            <groupId>jakarta.ws.rs</groupId>
            <artifactId>jakarta-restful-ws-tck</artifactId>
            <version>${tck.version}</version>
            <scope>test</scope>
        </dependency>

        <!-- The Arquillian connector that starts GlassFish and deploys archives to it. -->
        <dependency>
            <groupId>org.omnifaces.arquillian</groupId>
            <artifactId>arquillian-glassfish-server-managed</artifactId>
            <version>1.6</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.arquillian.junit5</groupId>
            <artifactId>arquillian-junit5-container</artifactId>
            <scope>test</scope>
        </dependency>

        <!-- Client libs for doing HTTP requests, specifically done via the REST Client -->
        <dependency>
            <groupId>org.omnifaces.arquillian</groupId>
            <artifactId>glassfish-client-ee11</artifactId>
            <version>1.6.1</version>
        </dependency>

        <dependency>
            <groupId>jakarta.tck</groupId>
            <artifactId>sigtest-maven-plugin</artifactId>
        </dependency>

        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter</artifactId>
        </dependency>

        <dependency>
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest</artifactId>
            <version>2.2</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>commons-httpclient</groupId>
            <artifactId>commons-httpclient</artifactId>
            <version>3.1</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <!-- Download and installation of the GlassFish server used for testing  -->
            <plugin>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>
                        <id>unpack</id>
                        <goals>
                            <goal>unpack</goal>
                        </goals>
                        <phase>pre-integration-test</phase>
                        <configuration>
                            <artifactItems>
                                <artifactItem>
                                    <groupId>org.glassfish.main.distributions</groupId>
                                    <artifactId>${glassfish-artifact-id}</artifactId>
                                    <version>${glassfish.version}</version>
                                    <type>zip</type>
                                    <overWrite>false</overWrite>
                                    <outputDirectory>${glassfish.root}</outputDirectory>
                                </artifactItem>
                            </artifactItems>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- Configuring and running the TCK -->
            <plugin>
                <artifactId>maven-failsafe-plugin</artifactId>
                <executions>
                    <execution>
                        <id>gf-tests</id>
                        <goals>
                            <goal>integration-test</goal>
                            <goal>verify</goal>
                        </goals>
                        <configuration>
                            <excludes>
                                <exclude>**/SeBootstrapIT.java</exclude>
                            </excludes>

                            <test>${run.test}</test>

                            <dependenciesToScan>jakarta.ws.rs:jakarta-restful-ws-tck</dependenciesToScan>

                            <systemPropertyVariables>
                                <glassfish.home>${glassfish.root}/glassfish8</glassfish.home>
                                <glassfish.maxHeapSize>2048m</glassfish.maxHeapSize>

                                <glassfish.postBootCommands>create-file-user --groups staff:mgr:DIRECTOR --passwordfile ${project.build.directory}/test-classes/j2ee.pass j2ee
                                    create-file-user --groups guest:OTHERROLE --passwordfile ${project.build.directory}/test-classes/javajoe.pass javajoe
                                    set server-config.network-config.protocols.protocol.http-listener-1.http.trace-enabled=true</glassfish.postBootCommands>

                                <!--
                                    Strangely, this TCK allows (even requires) the expected user names and passwords that are defined above
                                    to be set as variables as well. For some reason the groups however are not set as variables.
                                    This has puzzled developers forever, but nobody seems to know the reason for this.
                                 -->
                                <user>j2ee</user>
                                <password>j2ee</password>
                                <authuser>javajoe</authuser>
                                <authpassword>javajoe</authpassword>

                                <!-- Remnants from ancient TCK -->
                                <webServerHost>localhost</webServerHost>
                                <webServerPort>8080</webServerPort>

                                <servlet_adaptor>org.glassfish.jersey.servlet.ServletContainer</servlet_adaptor>
                                <porting.ts.url.class.1>ee.jakarta.tck.ws.rs.lib.implementation.sun.common.SunRIURL</porting.ts.url.class.1>
                                <jimage.dir>${project.build.directory}/jdk-bundle</jimage.dir>
                                <optional.tech.packages.to.ignore>jakarta.xml.bind</optional.tech.packages.to.ignore>
                                <signature.sigTestClasspath>${glassfish.home}/glassfish/modules/jakarta.ws.rs-api.jar:${glassfish.home}/glassfish/modules/jakarta.xml.bind-api.jar:${project.build.directory}/jdk-bundle/java.base:${project.build.directory}/jdk-bundle/java.rmi:${project.build.directory}/jdk-bundle/java.sql:${project.build.directory}/jdk-bundle/java.naming</signature.sigTestClasspath>
                            </systemPropertyVariables>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>full</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <properties>
                <glassfish-artifact-id>glassfish</glassfish-artifact-id>
            </properties>
        </profile>

        <profile>
            <id>web</id>
            <properties>
                <glassfish-artifact-id>web</glassfish-artifact-id>
            </properties>
        </profile>
    </profiles>
</project>
