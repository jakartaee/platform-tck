<?xml version="1.0" encoding="UTF-8"?>
<!--
    Copyright (c) 2023, 2024 Oracle and/or its affiliates. All rights reserved.
    This program and the accompanying materials are made available under the
    terms of the Eclipse Public License v. 2.0, which is available at
    http://www.eclipse.org/legal/epl-2.0.

    This Source Code may also be made available under the following Secondary
    Licenses when the conditions for such availability set forth in the
    Eclipse Public License v. 2.0 are satisfied: GNU General Public License,
    version 2 with the GNU Classpath Exception, which is available at
    https://www.gnu.org/software/classpath/license.html.

    SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.glassfish</groupId>
        <artifactId>standalone-tck</artifactId>
        <version>11.0.0-SNAPSHOT</version>
    </parent>
    <groupId>jakarta</groupId>
    <artifactId>glassfish.jsp-tck</artifactId>
    <version>11.0.0-SNAPSHOT</version>
    <packaging>jar</packaging>

    <properties>
        <admin.user>admin</admin.user>
        <connectionpoolid>${derby.poolName}</connectionpoolid>
        <datasourceclassname>${derby.dataSource}</datasourceclassname>
        <derby.classes>${derby.home}/lib/derbyclient.jar${pathsep}${derby.home}/lib/derbyshared.jar${pathsep}${derby.home}/lib/derbytools.jar</derby.classes>
        <derby.classpath>../../lib/dbprocedures.jar${pathsep}${derby.home}/lib/derbynet.jar${pathsep}${derby.home}/lib/derbyshared.jar${pathsep}${derby.home}/lib/derbytools.jar</derby.classpath>
        <derby.dataSource>org.apache.derby.jdbc.ClientDataSource</derby.dataSource>
        <derby.dbName>derbyDB</derby.dbName>
        <derby.dml.file>derby/derby.dml.sql</derby.dml.file>
        <derby.driver>org.apache.derby.jdbc.ClientDriver</derby.driver>
        <derby.home>${project.build.directory}/${glassfish.toplevel.dir}/javadb</derby.home>
        <derby.passwd>cts1</derby.passwd>
        <derby.poolName>cts-derby-pool</derby.poolName>
        <derby.port>1527</derby.port>
        <derby.properties>DatabaseName\=\"${derby.dbName}\":user\=${derby.user}:password\=${derby.passwd}:serverName\=${derby.server}:portNumber=${derby.port}</derby.properties>
        <derby.server>localhost</derby.server>
        <derby.startup.delay>5</derby.startup.delay>
        <derby.system.home>${derby.home}/databases</derby.system.home>
        <derby.url>jdbc:derby://${derby.server}:${derby.port}/${derby.dbName};create=true</derby.url>
        <derby.user>cts1</derby.user>
        <exec.asadmin>${project.build.directory}/${glassfish.toplevel.dir}/glassfish/bin/asadmin</exec.asadmin>
        <glassfish.container.version>8.0.0-JDK17-M7</glassfish.container.version>
        <glassfish.toplevel.dir>glassfish8</glassfish.toplevel.dir>
        <jakarta.platform.version>11.0.0-M1</jakarta.platform.version>
        <jdbc.maxpoolsize>30</jdbc.maxpoolsize>
        <jdbc.steadypoolsize>5</jdbc.steadypoolsize>
        <jndiName>jdbc/DB1</jndiName>
        <junit.jupiter.version>5.9.1</junit.jupiter.version>
        <pathsep>:</pathsep>
        <pool.properties>${derby.properties}</pool.properties>
        <poolName>${derby.poolName}</poolName>
        <restype>javax.sql.DataSource</restype>
        <server.host>localhost</server.host>
        <server.port>4848</server.port>
        <tck.artifactId>pages-platform-tck</tck.artifactId>
        <tck.version>11.0.0-SNAPSHOT</tck.version>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.junit.vintage</groupId>
            <artifactId>junit-vintage-engine</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>jakarta.tck</groupId>
            <artifactId>${tck.artifactId}</artifactId>
            <version>${tck.version}</version>
        </dependency>
        <dependency>
            <groupId>org.glassfish.main.common</groupId>
            <artifactId>simple-glassfish-api</artifactId>
            <version>${glassfish.container.version}</version>
        </dependency>
        <dependency>
            <groupId>org.jboss.arquillian.junit5</groupId>
            <artifactId>arquillian-junit5-container</artifactId>
        </dependency>
        <dependency>
            <groupId>jakarta.platform</groupId>
            <artifactId>jakarta.jakartaee-api</artifactId>
            <version>${jakarta.platform.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>commons-httpclient</groupId>
            <artifactId>commons-httpclient</artifactId>
            <version>3.1</version>
        </dependency>
        <dependency>
            <groupId>org.glassfish.hk2</groupId>
            <artifactId>hk2-locator</artifactId>
            <version>3.0.0</version>
        </dependency>
        <dependency>
            <groupId>org.jboss.arquillian.container</groupId>
            <artifactId>arquillian-container-test-spi</artifactId>
        </dependency>
        <dependency>
            <groupId>org.omnifaces.arquillian</groupId>
            <artifactId>arquillian-glassfish-server-managed</artifactId>
            <version>1.2</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>jakarta.servlet.jsp</groupId>
            <artifactId>jakarta.servlet.jsp-api</artifactId>
            <version>4.0.0-M2</version>
        </dependency>

    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>3.2.0</version>
                <executions>
                    <execution>
                        <id>download-gf</id>
                        <goals>
                            <goal>unpack</goal>
                        </goals>
                        <phase>generate-resources</phase>
                        <configuration>
                            <artifactItems>
                                <artifactItem>
                                    <groupId>org.glassfish.main.distributions</groupId>
                                    <artifactId>${glassfish-artifact-id}</artifactId>
                                    <version>${glassfish.container.version}</version>
                                    <type>zip</type>
                                    <overWrite>true</overWrite>
                                    <outputDirectory>${project.build.directory}</outputDirectory>
                                </artifactItem>
                            </artifactItems>
                        </configuration>
                    </execution>
                    <execution>
                        <id>update-jars</id>
                        <goals>
                            <goal>copy</goal>
                        </goals>
                        <phase>generate-resources</phase>
                        <configuration>
                            <artifactItems>
                                <artifactItem>
                                    <groupId>jakarta.el</groupId>
                                    <artifactId>jakarta.el-api</artifactId>
                                    <overWrite>true</overWrite>
                                    <outputDirectory>${project.build.directory}/${glassfish.toplevel.dir}/glassfish/modules</outputDirectory>
                                    <destFileName>jakarta.el-api.jar</destFileName>
                                </artifactItem>
                                <artifactItem>
                                    <groupId>jakarta.servlet.jsp</groupId>
                                    <artifactId>jakarta.servlet.jsp-api</artifactId>
                                    <overWrite>true</overWrite>
                                    <outputDirectory>${project.build.directory}/${glassfish.toplevel.dir}/glassfish/modules</outputDirectory>
                                    <destFileName>jakarta.servlet.jsp-api.jar</destFileName>
                                </artifactItem>
                            </artifactItems>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <artifactId>maven-antrun-plugin</artifactId>
                <version>3.0.0</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <phase>generate-resources</phase>
                        <configuration>
                            <target>
                                <!-- <echo message="unzipping file"></echo> -->
                                <!-- <unzip dest="target/" src="target/glassfish.zip"></unzip> -->
                                <chmod dir="target/glassfish8/glassfish/bin/asadmin" perm="777"></chmod>
                            </target>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <artifactId>maven-failsafe-plugin</artifactId>
                <version>3.0.0-M5</version>
                <executions>
                    <execution>
                        <id>gf-tests</id>
                        <goals>
                            <goal>integration-test</goal>
                            <goal>verify</goal>
                        </goals>
                        <configuration>
                            <additionalClasspathElements>
                                <additionalClasspathElement>${project.build.directory}/${glassfish.toplevel.dir}/glassfish/modules/jakarta.servlet-api.jar</additionalClasspathElement>
                                <additionalClasspathElement>${project.build.directory}/${glassfish.toplevel.dir}/glassfish/modules/jakarta.el-api.jar</additionalClasspathElement>
                                <additionalClasspathElement>${project.build.directory}/${glassfish.toplevel.dir}/glassfish/modules/jakarta.servlet.jsp-api.jar</additionalClasspathElement>
                                <additionalClasspathElement>${project.build.directory}/${glassfish.toplevel.dir}/glassfish/modules/jakarta.servlet.jsp.jstl-api.jar</additionalClasspathElement>
                            </additionalClasspathElements>
                            <dependenciesToScan>jakarta.tck:${tck.artifactId}</dependenciesToScan>
                            <systemPropertyVariables>
                                <glassfish.maxHeapSize>2048m</glassfish.maxHeapSize>
                                <glassfish.postBootCommands>create-file-user --groups staff:mgr:DIRECTOR --passwordfile ${project.build.directory}/../j2ee.pass j2ee
                                create-file-user --groups guest:OTHERROLE --passwordfile ${project.build.directory}/../javajoe.pass javajoe
                                set server-config.network-config.protocols.protocol.http-listener-1.http.trace-enabled=true
                                create-mail-resource --mailuser "user01@james.local" --fromaddress "user01@james.local" --mailhost localhost --debug true mail/Session
                                create-jms-resource --restype jakarta.jms.Queue --property imqDestinationName=myQueue MY_QUEUE
                                create-jms-resource --restype jakarta.jms.Topic --property imqDestinationName=myTopic MY_TOPIC
                                create-jdbc-connection-pool --restype javax.sql.DataSource --datasourceclassname org.apache.derby.jdbc.ClientDataSource --property DatabaseName=derbyDB:serverName=localhost:PortNumber=1527:User=cts1:Password=cts1 --steadypoolsize 32 --maxpoolsize 64 cts-derby-pool
                                create-jdbc-resource --connectionpoolid cts-derby-pool jdbc/DB1
                                create-jms-resource --restype jakarta.jms.QueueConnectionFactory jms/QueueConnectionFactory
                                create-jms-resource --restype jakarta.jms.TopicConnectionFactory jms/TopicConnectionFactory
                                create-jms-resource --restype jakarta.jms.ConnectionFactory --property name=cFactory jms/ConnectionFactory
                                list-jndi-entries</glassfish.postBootCommands>
                                <GLASSFISH_HOME>${project.build.directory}/${glassfish.toplevel.dir}</GLASSFISH_HOME>
                                <webServerHome>${project.build.directory}/${glassfish.toplevel.dir}/glassfish</webServerHome>
                                <webServerHost>localhost</webServerHost>
                                <webServerPort>8080</webServerPort>
                                <glassfish.home>${project.build.directory}/${glassfish.toplevel.dir}</glassfish.home>
                                <impl.vi>glassfish</impl.vi>
                                <impl.vi.deploy.dir>${webServerHome}/domains/domain1/autodeploy</impl.vi.deploy.dir>
                                <impl.deploy.timeout.multiplier>30</impl.deploy.timeout.multiplier>
                                <el.classes>${project.build.directory}/${glassfish.toplevel.dir}/glassfish/modules/jakarta.el-api.jar</el.classes>
                                <jspservlet.classes>${project.build.directory}/${glassfish.toplevel.dir}/glassfish/modules/jakarta.servlet-api.jar:${project.build.directory}/${glassfish.toplevel.dir}/glassfish/modules/jakarta.servlet.jsp-api.jar</jspservlet.classes>
                                <jstl.classes>${project.build.directory}/${glassfish.toplevel.dir}/glassfish/modules/jakarta.servlet.jsp.jstl.jar:${project.build.directory}/${glassfish.toplevel.dir}/glassfish/modules/jakarta.servlet.jsp.jstl-api.jar</jstl.classes>
                                <junit.log.traceflag>true</junit.log.traceflag>
                                <user>j2ee</user>
                                <password>j2ee</password>
                                <authuser>javajoe</authuser>
                                <authpassword>javajoe</authpassword>
                                <harness.log.traceflag>true</harness.log.traceflag>
                                <cts.harness.debug>true</cts.harness.debug>
                                <porting.ts.url.class.1>ee.jakarta.tck.pages.lib.implementation.sun.common.SunRIURL</porting.ts.url.class.1>
                            </systemPropertyVariables>
                            <environmentVariables>
                                <GLASSFISH_HOME>${project.build.directory}/${glassfish.toplevel.dir}</GLASSFISH_HOME>
                            </environmentVariables>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>full</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <properties>
                <glassfish-artifact-id>glassfish</glassfish-artifact-id>
            </properties>
        </profile>
        <profile>
            <id>web</id>
            <properties>
                <glassfish-artifact-id>web</glassfish-artifact-id>
            </properties>
        </profile>
    </profiles>
</project>
