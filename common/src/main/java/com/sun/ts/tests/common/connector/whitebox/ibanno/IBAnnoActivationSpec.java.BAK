/*
 * Copyright (c) 2009, 2020 Oracle and/or its affiliates. All rights reserved.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0, which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the
 * Eclipse Public License v. 2.0 are satisfied: GNU General Public License,
 * version 2 with the GNU Classpath Exception, which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 */

package com.sun.ts.tests.common.connector.whitebox.ibanno;

import java.util.*;
import jakarta.resource.spi.*;
import jakarta.resource.spi.ActivationSpec;
import jakarta.resource.spi.ResourceAdapter;
import com.sun.ts.tests.common.connector.util.*;
import com.sun.ts.tests.common.connector.whitebox.Debug;
import jakarta.validation.constraints.*;
import com.sun.ts.tests.common.connector.util.TSMessageListenerInterface;



@Activation(messageListeners = {com.sun.ts.tests.common.connector.util.TSMessageListenerInterface.class})
public class IBAnnoActivationSpec implements ActivationSpec, java.io.Serializable {

//    @NotNull 
    private String annoDestinationName;

//    @NotNull 
    private String annoDestinationType;

    @ConfigProperty()
    private String propName="IBAnnoConfigPropVal";

    private ResourceAdapter resourceadapter;
    private int counter = 0;

   /**
     * Default constructor.
     */
    public IBAnnoActivationSpec ()
    {
        Debug.trace("IBAnnoActivationSpec.constructor");
    }

    public String getAnnoDestinationName() 
    {
        Debug.trace("IBAnnoActivationSpec.getAnnoDestinationName :"+this.annoDestinationName);
        return this.annoDestinationName;
    }

    public void setAnnoDestinationName(String name)
    {
        this.annoDestinationName = name;
        Debug.trace("IBAnnoActivationSpec.setAnnoDestinationName :"+name);
    }

    public String getAnnoDestinationType()
    {
        Debug.trace("IBAnnoActivationSpec.getDestinationType :"+this.annoDestinationType);
        return this.annoDestinationType;
    }

    public void setAnnoDestinationType(String type)
    {
        Debug.trace("IBAnnoActivationSpec.setAnnoDestinationType :"+type);
        this.annoDestinationType = type;
    }

    public ResourceAdapter getResourceAdapter () {
        return this.resourceadapter;
    }

    public void setResourceAdapter (ResourceAdapter ra) {
        counter++;
        ConnectorStatus.getConnectorStatus().logState("IBAnnoActivationSpec setResourceAdapter "+counter);
        Debug.trace("IBAnnoActivationSpec.setResourceAdatper called");
        this.resourceadapter = ra;
    }

    public void validate() throws InvalidPropertyException {
        Debug.trace("IBAnnoActivationSpec.validate called");
    } 


    public void setPropName(String name)
    {
        ConnectorStatus.getConnectorStatus().logState("AnnoManagedConnectionFactory.setPropName");
        propName = name;
    }


    public String getPropName()
    {
      ConnectorStatus.getConnectorStatus().logState("AnnoManagedConnectionFactory.getPropName");
      return propName;
    }

}
