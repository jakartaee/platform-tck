<?xml version="1.0"?>
<!--

    Copyright (c) 2018, 2020 Oracle and/or its affiliates. All rights reserved.

    This program and the accompanying materials are made available under the
    terms of the Eclipse Public License v. 2.0, which is available at
    http://www.eclipse.org/legal/epl-2.0.

    This Source Code may also be made available under the following Secondary
    Licenses when the conditions for such availability set forth in the
    Eclipse Public License v. 2.0 are satisfied: GNU General Public License,
    version 2 with the GNU Classpath Exception, which is available at
    https://www.gnu.org/software/classpath/license.html.

    SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0

-->

<project name="JPA TCK Database Initialization" basedir="." default="init.database">

   <!-- IMPORTS -->
    <import file="xml/ts.common.props.xml" optional="true"/>
    <import file="../../../bin/xml/ts.common.props.xml" optional="true"/>

    <!-- Determine if we should create tables for Persistence tests or not
	-  When set to false, the persistence provider
 	   is responsible for creating tables

 	-  When set to true, init.datbaseName will
 	   create the tables used by the persistence provider
    -->
    <property name="cmpNeeded" value="true"/>


   <target name="usage">
   <echo message="To initialize the databases needed by this TCK,"/>
   <echo message=" Execute the following:"/>
   <echo message=" ant -f initdb.xml"/>
    </target>

    <!--
        Configure the database
    -->
    <target name="init.database" >
      <antcall target="init.${jdbc.db}"/>
      <antcall target="create.tssql.stmt.file"/>
    </target>

    <target name="configure.backend" >
        <antcall target="configure.cmp" />
    </target>

    <target name="configure.cmp">
        <if>
            <istrue value="${cmpNeeded}"/>
        <then>
            <sql driver="${jakarta.persistence.jdbc.driver}"
                 url="${jakarta.persistence.jdbc.url}"
                 userid="${jakarta.persistence.jdbc.user}"
                 password="${jakarta.persistence.jdbc.password}"
                 classpath="${jdbc.driver.classes}"
                 delimiter="${db.delimiter}"
                 autocommit="true"
                 onerror="continue" >
                <transaction src="${ts.home}/sql/${jdbc.db}/${jdbc.db}.ddl.persistence.sql"/>
                <transaction src="${ts.home}/sql/${jdbc.db}/${jdbc.db}.ddl.persistence.sprocs.sql"/>
            </sql>
        </then>
        </if>
    </target>

    <target name="init.javadb" >
      <antcall target="init.derby"/>
    </target>

    <target name="init.derby">
        <antcall target="configure.backend">
            <param name="db.delimiter" value=";"/>
        </antcall>
        <antcall target="install_java_procedures"/>
    </target>


    <target name="init.db2">
        <antcall target="configure.backend">
            <param name="db.delimiter" value="!"/>
        </antcall>
    </target>

    <target name="init.mssqlserver">
        <antcall target="configure.backend">
            <param name="db.delimiter" value="!"/>
        </antcall>
    </target>

    <target name="init.mysql">
        <antcall target="configure.backend">
            <param name="db.delimiter" value="!"/>
        </antcall>
    </target>

    <target name="init.oracle">
        <antcall target="configure.backend">
            <param name="db.delimiter" value="!"/>
        </antcall>
    </target>

    <target name="init.sybase">
        <antcall target="configure.backend">
            <param name="db.delimiter" value="!"/>
        </antcall>
    </target>

    <target name="init.postgresql">
        <antcall target="configure.backend">
            <param name="db.delimiter" value=";"/>
        </antcall>
    </target>

     <target name="create.tssql.stmt.file" >
         <delete file="${bin.dir}/tssql.stmt" failonerror="false"/>
         <copy file="${ts.home}/sql/${jdbc.db}/${jdbc.db}.dml.jpa.sql" tofile="${bin.dir}/tssql.stmt"/>
     </target>

    <target name="install_java_procedures">
        <if>
            <equals arg1="${jdbc.db}" arg2="derby"/>
        <then>
            <sql driver="${jakarta.persistence.jdbc.driver}"
                 url="${jakarta.persistence.jdbc.url}"
                 userid="${jakarta.persistence.jdbc.user}"
                 password="${jakarta.persistence.jdbc.password}"
                 classpath="${jdbc.driver.classes}"
                 autocommit="true"
                 onerror="continue" >
                 CALL sqlj.remove_jar('APP.dbprocedures', 0);
                 CALL sqlj.install_jar('${ts.home}/lib/dbprocedures.jar', 'APP.dbprocedures', 0);
                 CALL SYSCS_UTIL.SYSCS_SET_DATABASE_PROPERTY('derby.database.classpath', 'APP.dbprocedures');
            </sql>
        </then>
        </if>
    </target>
</project>
