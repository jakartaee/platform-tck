#
# Copyright (c) 2018 Oracle and/or its affiliates. All rights reserved.
#
# This program and the accompanying materials are made available under the
# terms of the Eclipse Public License v. 2.0, which is available at
# http://www.eclipse.org/legal/epl-2.0.
#
# This Source Code may also be made available under the following Secondary
# Licenses when the conditions for such availability set forth in the
# Eclipse Public License v. 2.0 are satisfied: GNU General Public License,
# version 2 with the GNU Classpath Exception, which is available at
# https://www.gnu.org/software/classpath/license.html.
#
# SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
#

##########################################################################
#The following properties must be set prior to running the JAXRPC TCK tests.
#
# webserver.home
# webserver.host
# webserver.port
# local.classes
# j2ee.home.ri		(NEEDED ONLY IF BUILDING TESTS)
# jaxrpc.home
# jaxrpc.tool		(The jaxrpc mapping tool)
#
##########################################################################
webserver.home=/scratch/CTS/spider/glassfish5/glassfish/
webserver.host=
webserver.port=
webapp.dir=${webserver.home}/webapps

# Set your local timezone. For valid values, consult your Operating System
# documentation.
tz=US/Eastern

# The jars/classes needed for building/packaging. The settings are for
# the Sun J2EE Reference Implementation. (NEEDED ONLY IF BUILDING TESTS)
j2ee.home.ri=/scratch/CTS/spider/glassfish5/glassfish/
j2ee.classes.ri=${j2ee.home.ri}/lib/j2ee.jar
java.endorsed.dirs=${j2ee.home.ri}/lib/endorsed

# The jars/classes for the TS harness/javatest and the test classes
harness.classes=${ts.home}/lib/tsharness.jar:${ts.home}/lib/apiCheck.jar:${ts.home}/lib/javatest.jar:${ts.home}/lib/jaxrpctck.jar:${ts.home}/classes:${ant.home}/lib/ant.jar:${ts.home}/lib/ant-contrib-1.0b3.jar

# The classpath should include the J2EE server jar, the TS harness/javatest
# jars tsharness.jar, and javatest.jar, the test classes and any
# additional RI specific jars/classes defined in (local.classes).
local.classes=${webserver.home}/modules/webservices-osgi.jar:${webserver.home}/modules/javax.xml.rpc-api.jar:${webserver.home}/modules/javax.servlet-api.jar:${webserver.home}/modules/jakarta.mail.jar:${webserver.home}/modules/jaxb-osgi.jar:${webserver.home}/modules/javax.ejb-api.jar:${webserver.home}/modules/glassfish-naming.jar:${webserver.home}/modules/bean-validator.jar
ts.classpath=${harness.classes}:${local.classes}

# The jaxrpc mapping tool with arguments for WSDL2Java or Java2WSDL mapping
jaxrpc.home==${webserver.home}
jaxrpc.tool=${jaxrpc.home}/bin/wscompile.sh
client.only.args=-classpath ${class.dir} -keep -gen:client -Xprintstacktrace
server.only.args=-classpath ${class.dir} -keep -gen:server -Xprintstacktrace
client.server.args=-classpath ${class.dir} -keep -gen:both -Xprintstacktrace
jaxrpc.default.features=strict

# The jaxrpc deploy tool for generating a deployable war
jaxrpc.deploy.tool=${jaxrpc.home}/bin/wsdeploy.sh

#build level
#1: compile only
#2: compile and build component archives (e.g., jar's, war's)
build.level=2

deliverable.class=com.sun.ts.lib.deliverable.jaxrpc.JAXRPCDeliverable
