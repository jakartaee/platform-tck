<?xml version="1.0" encoding="UTF-8"?>
<!--

    Copyright (c) 2018 Oracle and/or its affiliates. All rights reserved.

    This program and the accompanying materials are made available under the
    terms of the Eclipse Public License v. 2.0, which is available at
    http://www.eclipse.org/legal/epl-2.0.

    This Source Code may also be made available under the following Secondary
    Licenses when the conditions for such availability set forth in the
    Eclipse Public License v. 2.0 are satisfied: GNU General Public License,
    version 2 with the GNU Classpath Exception, which is available at
    https://www.gnu.org/software/classpath/license.html.

    SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0

-->

<project name="TS top level" default="usage">
    
    <!-- IMPORTS -->
    <import file="xml/ts.top.import.xml" optional="true"/>
    <import file="../../../bin/xml/ts.top.import.xml" optional="true"/>

   <property name="provider.dir" value = "com/sun/ts/tests/jacc/provider"/>
   <property name="provider.jar.name" value = "tsprovider.jar"/>
   <property name="provider.jar" value = "${lib.dir}/${provider.jar.name}"/>

    
    <target name="translatepath">
        <translatepath propname="ts.classpath" />
    </target>
    
    <target name="build.all.tests">
        <property name="all.test.dirs" 
              value="com/sun/ts/tests/jacc/**/*.java,
                     com/sun/ts/tests/signaturetests/**/*.java,
                     com/sun/ts/tests/signaturetest/jacc/*.java,
                     com/sun/ts/tests/common/vehicle/*.java,
                     com/sun/ts/tests/common/vehicle/standalone/*.java,
                     com/sun/ts/tests/common/vehicle/ejb3share/*.java,
                     com/sun/ts/tests/common/vehicle/ejblitesecuredjsp/*.java,
                     com/sun/ts/tests/common/vehicle/ejbliteshare/*.java" />

        <property name="dont.compile.dirs" value="
                     com/sun/ts/tests/jacc/old/**/*.java,
                     com/sun/ts/tests/jacc/ejb/methodperm/**/*.java,
                     com/sun/ts/tests/common/vehicle/ejblitejsf/**/*.java,
                     com/sun/ts/tests/common/vehicle/ejblitejsp/**/*.java,
                     com/sun/ts/tests/common/vehicle/ejbliteservlet/**/*.java,
                     com/sun/ts/tests/common/vehicle/ejbliteservlet2/**/*.java,
                     com/sun/ts/tests/common/vehicle/jsp/**/*.java,
                     com/sun/ts/tests/common/vehicle/servlet/**/*.java,
                     com/sun/ts/tests/common/vehicle/web/**/*.java,
                     com/sun/ts/tests/common/vehicle/wsappclient/**/*.java,
                     com/sun/ts/tests/common/vehicle/wsejb/**/*.java,
                     com/sun/ts/tests/common/vehicle/wsservlet/**/*.java,
                     com/sun/ts/tests/signaturetests/caj/**/*.java,
                     com/sun/ts/tests/signaturetests/connector/**/*.java,
                     com/sun/ts/tests/signaturetests/el/**/*.java,
                     com/sun/ts/tests/signaturetests/jaspic/**/*.java,
                     com/sun/ts/tests/signaturetests/javaee/**/*.java,
                     com/sun/ts/tests/signaturetests/javaeemgmt/**/*.java,
                     com/sun/ts/tests/signaturetests/jaxm/**/*.java,
                     com/sun/ts/tests/signaturetests/jaxrpc/**/*.java,
                     com/sun/ts/tests/signaturetests/jaxr/**/*.java,
                     com/sun/ts/tests/signaturetests/jaxrpc/**/*.java,
                     com/sun/ts/tests/signaturetests/jaxws/**/*.java,
                     com/sun/ts/tests/signaturetests/jms/**/*.java,
                     com/sun/ts/tests/signaturetests/jsf/**/*.java,
                     com/sun/ts/tests/signaturetests/jsp/**/*.java,
                     com/sun/ts/tests/signaturetests/jstl/**/*.java,
                     com/sun/ts/tests/signaturetests/saaj/**/*.java,
                     com/sun/ts/tests/signaturetests/signature-repostitory/**/*.java,
                     com/sun/ts/tests/signaturetests/wsmd/**/*.java" />

        <ts.javac
               includes="${all.test.dirs}"
               excludes="${dont.compile.dirs}"
               memoryInitialSize="100m"
               deprecation="off"
               failonerror="false">
        </ts.javac> 

        <dosubdirs srcdir="${src.dir}" includes="com/sun/ts/tests/jacc/web,
                                            com/sun/ts/tests/jacc/ejb" 
                   todo="build"/>

        <dosubdirs srcdir="${src.dir}" includes="com/sun/ts/tests/jacc/web,
                                            com/sun/ts/tests/jacc/ejb" 
                   todo="package"/>
        
    </target>
    
    <!-- Tasks for managing ts specific library classes.  These automatically call
  the pkg target in the src/com/sun/ts/lib/build.xml file  -->
    <target name="tslib.clean">
        <delete failonerror="false">
            <fileset dir="${class.dir}">
                <include name="${lib.pkg.dir}/deliverable/jacc/**" />
                <include name="${lib.pkg.dir}/deliverable/tck/*.class"/>
                <include name="${lib.pkg.dir}/implementation/sun/common/**" />
                <include name="${lib.pkg.dir}/implementation/sun/javaee/**" />
                <include name="${provider.dir}/"/>
            </fileset>
        </delete>
        <delete failonerror="false" file="${lib.dir}/${tslib.name}.jar"/>
    </target>
           
    <target name="tslib.compile" depends="tslib.clean">
        <ts.javac includes="${lib.pkg.dir}/deliverable/tck/*.java,
                            ${lib.pkg.dir}/deliverable/jacc/**,
                            ${provider.dir}/**,
                            ${lib.pkg.dir}/implementation/sun/javaee/SunRIHttpsURLConnection.java,
                            ${lib.pkg.dir}/implementation/sun/javaee/SunRILoginContext.java,
                            ${lib.pkg.dir}/implementation/sun/common/SunRIURL.java">
            <classpath>
                <pathelement path="${ts.lib.classpath}" />
            </classpath>
        </ts.javac>
    </target>
    
    <target name="tslib" depends="tslib.compile">
        <tstamp/>
        <delete failonerror="true" file="${lib.dir}/${tslib.name}.jar"/>
        <ts.lib.jar>
            <include name="${lib.pkg.dir}/deliverable/tck/*.class"/>
            <include name="${lib.pkg.dir}/deliverable/jacc/*"/>
            <include name="${lib.pkg.dir}/implementation/sun/javaee/SunRIHttpsURLConnection.class"/>
            <include name="${lib.pkg.dir}/implementation/sun/javaee/SunRILoginContext.class"/>
            <include name="${lib.pkg.dir}/implementation/sun/common/SunRIURL.class"/>
        </ts.lib.jar>
        <echo message="The TCK specific library jar, 'jacctck.jar', has been built."/>

        <jar jarfile = "${provider.jar}" basedir = "${class.dir}"> 
                <include name=
                     "${provider.dir}/TSPolicyConfigurationFactoryImpl.class"/>
                <include name=
                      "${provider.dir}/TSPolicyConfigurationImpl.class"/>
                <include name="${provider.dir}/TSLogger.class"/>
                <include name="${provider.dir}/TSLogRecord.class"/>
                <include name="${provider.dir}/TSXMLFormatter.class"/>
                <include name="${provider.dir}/TSPolicy.class"/>
           <manifest>
               <attribute name="Extension-Name"         value="tsprovider"/>
               <attribute name="Specification-Title"    value="TS Provider"/>
               <attribute name="Specification-Version"  value="1.4"/>
               <attribute name="Implementation-Version" value="1.4"/>
               <attribute name="Specification-Vendor"   value="Sun Microsystems"/>
            </manifest>
          </jar>

        <echo message="The JACC TCK specific library jar, 'tsprovider.jar', has been built."/>
 
    </target>

    <!-- Configuration related targets -->
    <target name="config.vi" >
        <ant antfile="vi.xml" dir="xml" target="config.vi"/>
    </target>

    <target name="clean.vi" >
        <ant antfile="vi.xml" dir="xml" target="clean.vi"/>
    </target>


    <!-- Enable the use of jacc for the app server under test -->
    <target name="enable.jacc" >

        <ant antfile="vi.xml" dir="xml" target="enable.jacc"/>
        <antcall target="restart.server" />
  
    </target>

    <target name="deploy.all" >
        <ant antfile="glassfish.xml" dir="deploy" target="deploy.all"/>
    </target>

    <target name="disable.jacc" >
        <ant antfile="vi.xml" dir="xml" target="disable.jacc"/>

    </target>

    <target name="restart.server" >
        <ant antfile="vi.xml" dir="xml" target="restart.server"/>
    </target>

</project>
