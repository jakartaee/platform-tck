<!--

    Copyright (c) 2018, 2020 Oracle and/or its affiliates. All rights reserved.

    This program and the accompanying materials are made available under the
    terms of the Eclipse Public License v. 2.0, which is available at
    http://www.eclipse.org/legal/epl-2.0.

    This Source Code may also be made available under the following Secondary
    Licenses when the conditions for such availability set forth in the
    Eclipse Public License v. 2.0 are satisfied: GNU General Public License,
    version 2 with the GNU Classpath Exception, which is available at
    https://www.gnu.org/software/classpath/license.html.

    SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0

-->

<definitions
  name="CustomizationEmbeddedTestService"
  targetNamespace="http://customizationembeddedtest.org/wsdl"
  xmlns="http://schemas.xmlsoap.org/wsdl/"
  xmlns:jxb="https://jakarta.ee/xml/ns/jaxb"
  xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/"
  xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/"
  xmlns:xsd="http://www.w3.org/2001/XMLSchema"
  xmlns:types="http://customizationembeddedtest.org/types"
  xmlns:tns="http://customizationembeddedtest.org/wsdl">


<jaxws:bindings xmlns:jaxws="https://jakarta.ee/xml/ns/jaxws">
    <jaxws:package name="com.sun.ts.tests.jaxws.ee.w2j.document.literal.customization.embedded"/>
    <jaxws:enableWrapperStyle>false</jaxws:enableWrapperStyle>
    <jaxws:enableAsyncMapping>true</jaxws:enableAsyncMapping>
</jaxws:bindings>

  <types>
    <xsd:schema
        targetNamespace="http://customizationembeddedtest.org/types"
        attributeFormDefault="qualified"
        elementFormDefault="qualified">

      <xsd:element name="HelloRequest">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="request" type="xsd:string"/>
            </xsd:sequence>
        </xsd:complexType>
      </xsd:element>

      <xsd:element name="HelloResponse">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="response" type="xsd:string"/>
            </xsd:sequence>
        </xsd:complexType>
      </xsd:element>

      <xsd:element name="Hello2">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="argument" type="xsd:string"/>
            </xsd:sequence>
        </xsd:complexType>
      </xsd:element>

      <xsd:element name="HelloRequest3">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="helloRequest1" type="xsd:string"/>
            <xsd:element name="helloRequest2" type="xsd:string"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>

      <xsd:element name="HelloResponse3">
        <xsd:complexType>
            <xsd:sequence>
              <xsd:element name="response" type="xsd:string"/>
            </xsd:sequence>
        </xsd:complexType>
      </xsd:element>

      <xsd:element name="HelloFaultMessage">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="fault1" type="xsd:string"/>
            <xsd:element name="fault2" type="xsd:string"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>

      <xsd:element name="info" type="xsd:string"/>
      <xsd:element name="infoFaultDetail" type="xsd:string"/>

    <xsd:complexType name="name">
        <xsd:sequence>
            <xsd:element name="first" type="xsd:string"/>
            <xsd:element name="last" type="xsd:string"/>
        </xsd:sequence>
    </xsd:complexType>

    <xsd:element name="echoRequest">
        <xsd:complexType >
            <xsd:sequence>
                <xsd:element name="name" type="types:name" minOccurs="0" maxOccurs="unbounded">
                    <xsd:annotation>
                        <xsd:appinfo>
                            <jxb:property collectionType = "indexed"/>
                        </xsd:appinfo>
                    </xsd:annotation>
                </xsd:element>
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>

    <xsd:element name="echoResponse">
        <xsd:complexType >
            <xsd:sequence>
                <xsd:element name="return" type="xsd:string" >
                </xsd:element>
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>

    </xsd:schema>
  </types>

  <message name="HelloRequest">
    <part name="parameters" element="types:HelloRequest"/>
  </message>

  <message name="HelloResponse">
    <part name="parameters" element="types:HelloResponse"/>
  </message>

  <message name="Hello2">
    <part name="parameters" element="types:Hello2"/>
  </message>

  <message name="HelloRequest3">
    <part name="in" element="types:HelloRequest3"/>
  </message>

  <message name="HelloResponse3">
    <part name="out" element="types:HelloResponse3"/>
  </message>

  <message name="HelloFaultMessage">
    <part name="helloFault" element="types:HelloFaultMessage"/>
  </message>

  <message name="echoRequest">
    <part name="parameters" element="types:echoRequest"/>
  </message>

  <message name="echoResponse">
    <part name="parameters" element="types:echoResponse"/>
  </message>

  <portType name="HelloWorld">
    
    <jaxws:bindings xmlns:jaxws="https://jakarta.ee/xml/ns/jaxws">

        <!-- rename the generated SEI from HelloWorld.java to Hello.java -->
        <jaxws:class name="Hello"/>
        <!-- disable async operation -->
        <jaxws:enableAsyncMapping>false</jaxws:enableAsyncMapping>
    </jaxws:bindings>

    <operation name="HelloRequest"> 

      <jaxws:bindings wsdlLocation="WSW2JDLCustomizationEmbeddedTestService.wsdl" xmlns:jaxws="https://jakarta.ee/xml/ns/jaxws">
           <!-- rename the generated java method name-->
           <jaxws:method name="hello1"/>        
           <jaxws:enableWrapperStyle>true</jaxws:enableWrapperStyle>
           <jaxws:parameter part="wsdl:definitions/wsdl:message[@name='HelloRequest']/wsdl:part[@name='parameters']" childElementName="types:request" name="helloArgument"/>
      </jaxws:bindings>
      <input message="tns:HelloRequest"/>
      <output message="tns:HelloResponse"/>
    </operation>

    <operation name="Hello2"> 

      <jaxws:bindings wsdlLocation="WSW2JDLCustomizationEmbeddedTestService.wsdl" xmlns:jaxws="https://jakarta.ee/xml/ns/jaxws">
           <jaxws:enableWrapperStyle>false</jaxws:enableWrapperStyle>
           <jaxws:parameter part="wsdl:definitions/wsdl:message[@name='Hello2']/wsdl:part[@name='parameters']" childElementName="types:argument" name="helloArgument"/>
      </jaxws:bindings>
      <input message="tns:Hello2"/>
      <output message="tns:HelloResponse"/>
    </operation>

    <operation name="Hello3">
      <jaxws:bindings xmlns:jaxws="https://jakarta.ee/xml/ns/jaxws">
        <!-- rename the generated java method name-->
        <jaxws:method name="hello3"/>
        <jaxws:enableAsyncMapping>false</jaxws:enableAsyncMapping>
        <jaxws:enableWrapperStyle>false</jaxws:enableWrapperStyle>
        <jaxws:parameter part="wsdl:definitions/wsdl:message[@name='HelloRequest3']/wsdl:part[@name='in']"
                         name="helloRequest3"/>
        </jaxws:bindings>
        <input message="tns:HelloRequest3"/>
        <output message="tns:HelloResponse3"/>
        <fault name="HelloFault" message="tns:HelloFaultMessage">
          <jaxws:bindings xmlns:jaxws="https://jakarta.ee/xml/ns/jaxws">
            <jaxws:class name="com.sun.ts.tests.jaxws.ee.w2j.document.literal.customization.embedded.custom.pkg.HelloException"/>
          </jaxws:bindings>
      </fault>
    </operation>

    <operation name="echo">
      <input message="tns:echoRequest"/>
      <output message="tns:echoResponse"/>
    </operation>

  </portType>

  <binding name="HelloBinding" type="tns:HelloWorld">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>

    <operation name="HelloRequest">
      <soap:operation soapAction=""/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="Hello2">
      <soap:operation soapAction=""/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="Hello3">
      <soap:operation soapAction=""/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
      <fault name="HelloFault">
        <soap:fault name="HelloFault" use="literal"/>
      </fault>
    </operation>
    <operation name="echo">
      <soap:operation soapAction=""/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>

  </binding>

  <service name="myService">
    <jaxws:bindings xmlns:jaxws="https://jakarta.ee/xml/ns/jaxws">
        <jaxws:class name="com.sun.ts.tests.jaxws.ee.w2j.document.literal.customization.embedded.custom.pkg.CustomizationEmbeddedTestService"/>        
    </jaxws:bindings>

    <port name="HelloPort" binding="tns:HelloBinding">
    <jaxws:bindings xmlns:jaxws="https://jakarta.ee/xml/ns/jaxws">
        <jaxws:method name="getMyHelloPort"/>
        <jaxws:provider>false</jaxws:provider>
    </jaxws:bindings>
    <soap:address location="http://foo:9999/bar"/>

    </port>

  </service>

</definitions>
