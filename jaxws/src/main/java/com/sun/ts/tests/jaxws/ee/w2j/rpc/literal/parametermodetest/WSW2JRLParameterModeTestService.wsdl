<?xml version="1.0" encoding="UTF-8"?>
<!--

    Copyright (c) 2018 Oracle and/or its affiliates. All rights reserved.

    This program and the accompanying materials are made available under the
    terms of the Eclipse Public License v. 2.0, which is available at
    http://www.eclipse.org/legal/epl-2.0.

    This Source Code may also be made available under the following Secondary
    Licenses when the conditions for such availability set forth in the
    Eclipse Public License v. 2.0 are satisfied: GNU General Public License,
    version 2 with the GNU Classpath Exception, which is available at
    https://www.gnu.org/software/classpath/license.html.

    SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0

-->

<definitions xmlns="http://schemas.xmlsoap.org/wsdl/" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://ParameterModeTest.org/" xmlns:s="http://ParameterModeTest.org/xsd" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" name="ParameterModeTest" targetNamespace="http://ParameterModeTest.org/">
  <types>
    <schema xmlns="http://www.w3.org/2001/XMLSchema" targetNamespace="http://ParameterModeTest.org/xsd">
      <complexType name="ArrayOfstring">
        <sequence>
          <element name="ArrayOfstring" type="string" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        </sequence>
      </complexType>
      <complexType name="ArrayOfinteger">
        <sequence>
          <element name="ArrayOfinteger" type="integer" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        </sequence>
      </complexType>
      <complexType name="ArrayOfint">
        <sequence>
          <element name="ArrayOfint" type="int" minOccurs="0" maxOccurs="unbounded" />
        </sequence>
      </complexType>
      <complexType name="ArrayOflong">
        <sequence>
          <element name="ArrayOflong" type="long" minOccurs="0" maxOccurs="unbounded" />
        </sequence>
      </complexType>
      <complexType name="ArrayOfshort">
        <sequence>
          <element name="ArrayOfshort" type="short" minOccurs="0" maxOccurs="unbounded" />
        </sequence>
      </complexType>
      <complexType name="ArrayOfdecimal">
        <sequence>
          <element name="ArrayOfdecimal" type="decimal" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        </sequence>
      </complexType>
      <complexType name="ArrayOffloat">
        <sequence>
          <element name="ArrayOffloat" type="float" minOccurs="0" maxOccurs="unbounded" />
        </sequence>
      </complexType>
      <complexType name="ArrayOfdouble">
        <sequence>
          <element name="ArrayOfdouble" type="double" minOccurs="0" maxOccurs="unbounded" />
        </sequence>
      </complexType>
      <complexType name="ArrayOfboolean">
        <sequence>
          <element name="ArrayOfboolean" type="boolean" minOccurs="0" maxOccurs="unbounded" />
        </sequence>
      </complexType>
      <complexType name="ArrayOfbyte">
        <sequence>
          <element name="ArrayOfbyte" type="byte" minOccurs="0" maxOccurs="unbounded" />
        </sequence>
      </complexType>
      <complexType name="ArrayOfQName">
        <sequence>
          <element name="ArrayOfQName" type="QName" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        </sequence>
      </complexType>
      <complexType name="ArrayOfdateTime">
        <sequence>
          <element name="ArrayOfdateTime" type="dateTime" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        </sequence>
      </complexType>
      <!-- ########################################## -->
      <!-- Enumeration types                          -->
      <!-- ########################################## -->
      <simpleType name="enumString">
        <restriction base="xsd:string">
          <enumeration value="String1" />
          <enumeration value="String2" />
        </restriction>
      </simpleType>
      <simpleType name="enumInteger">
        <restriction base="xsd:integer">
          <enumeration value="3512359" />
          <enumeration value="3512360" />
        </restriction>
      </simpleType>
      <simpleType name="enumInt">
        <restriction base="xsd:int">
          <enumeration value="-2147483648" />
          <enumeration value="2147483647" />
        </restriction>
      </simpleType>
      <simpleType name="enumLong">
        <restriction base="xsd:long">
          <enumeration value="-9223372036854775808" />
          <enumeration value="9223372036854775807" />
        </restriction>
      </simpleType>
      <simpleType name="enumShort">
        <restriction base="xsd:short">
          <enumeration value="-32768" />
          <enumeration value="32767" />
        </restriction>
      </simpleType>
      <simpleType name="enumDecimal">
        <restriction base="xsd:decimal">
          <enumeration value="3512359.1456" />
          <enumeration value="3512360.1456" />
        </restriction>
      </simpleType>
      <simpleType name="enumFloat">
        <restriction base="xsd:float">
          <enumeration value="-1.00000000" />
          <enumeration value="3.00000000" />
        </restriction>
      </simpleType>
      <simpleType name="enumDouble">
        <restriction base="xsd:double">
          <enumeration value="-1.0000000000000" />
          <enumeration value="3.0000000000000" />
        </restriction>
      </simpleType>
      <simpleType name="enumByte">
        <restriction base="xsd:byte">
          <enumeration value="-128" />
          <enumeration value="127" />
        </restriction>
      </simpleType>
      <!-- ########################################## -->
      <!-- Struct types			  			   -->
      <!-- ########################################## -->
      <complexType name="AllStruct">
        <all>
          <element name="varString" type="xsd:string" />
          <element name="varInteger" type="xsd:integer" />
          <element name="varInt" type="xsd:int" />
          <element name="varLong" type="xsd:long" />
          <element name="varShort" type="xsd:short" />
          <element name="varDecimal" type="xsd:decimal" />
          <element name="varFloat" type="xsd:float" />
          <element name="varDouble" type="xsd:double" />
          <element name="varBoolean" type="xsd:boolean" />
          <element name="varByte" type="xsd:byte" />
          <element name="varQName" type="xsd:QName" />
          <element name="varDateTime" type="xsd:dateTime" />
          <element name="varBase64Binary" type="xsd:base64Binary" />
          <element name="varHexBinary" type="xsd:hexBinary" />
        </all>
      </complexType>
      <!-- ########################################## -->
      <!-- User Defined type		  			   -->
      <!-- ########################################## -->
      <complexType name="Book">
        <sequence>
          <element name="author" type="xsd:string" />
          <element name="title" type="xsd:string" />
          <element name="isbn" type="xsd:int" />
        </sequence>
      </complexType>
      <complexType name="ArrayOfBook">
        <sequence>
          <element name="ArrayOfBook" type="s:Book" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        </sequence>
      </complexType>
    </schema>
  </types>
  <!-- ############################################################################### -->
  <!-- These are used in conjuction with the Holder tests               			-->
  <!-- ############################################################################### -->
  <!-- IN parameter -->
  <message name="inRequest">
    <part name="varString" type="xsd:string" />
  </message>
  <message name="inResponse" />
  <message name="inSimpleTypesRequest">
    <part name="varString" type="xsd:string" />
    <part name="varInteger" type="xsd:integer" />
    <part name="varInt" type="xsd:int" />
    <part name="varLong" type="xsd:long" />
    <part name="varShort" type="xsd:short" />
    <part name="varDecimal" type="xsd:decimal" />
    <part name="varFloat" type="xsd:float" />
    <part name="varDouble" type="xsd:double" />
    <part name="varBoolean" type="xsd:boolean" />
    <part name="varByte" type="xsd:byte" />
    <part name="varQName" type="xsd:QName" />
    <part name="varDateTime" type="xsd:dateTime" />
    <part name="varBase64Binary" type="xsd:base64Binary" />
    <part name="varHexBinary" type="xsd:hexBinary" />
  </message>
  <message name="inSimpleTypesResponse" />
  <message name="inEnumRequest">
    <part name="varEnumString" type="s:enumString" />
    <part name="varEnumInteger" type="s:enumInteger" />
    <part name="varEnumInt" type="s:enumInt" />
    <part name="varEnumLong" type="s:enumLong" />
    <part name="varEnumShort" type="s:enumShort" />
    <part name="varEnumDecimal" type="s:enumDecimal" />
    <part name="varEnumFloat" type="s:enumFloat" />
    <part name="varEnumDouble" type="s:enumDouble" />
    <part name="varEnumByte" type="s:enumByte" />
  </message>
  <message name="inEnumResponse" />
  <message name="inStructRequest">
    <part name="varStruct" type="s:AllStruct" />
  </message>
  <message name="inStructResponse" />
  <!-- OUT parameter -->
  <message name="outRequest" />
  <message name="outResponse">
    <part name="varString" type="xsd:string" />
  </message>
  <message name="outSimpleTypesRequest" />
  <message name="outSimpleTypesResponse">
    <part name="varString" type="xsd:string" />
    <part name="varInteger" type="xsd:integer" />
    <part name="varInt" type="xsd:int" />
    <part name="varLong" type="xsd:long" />
    <part name="varShort" type="xsd:short" />
    <part name="varDecimal" type="xsd:decimal" />
    <part name="varFloat" type="xsd:float" />
    <part name="varDouble" type="xsd:double" />
    <part name="varBoolean" type="xsd:boolean" />
    <part name="varByte" type="xsd:byte" />
    <part name="varQName" type="xsd:QName" />
    <part name="varDateTime" type="xsd:dateTime" />
    <part name="varBase64Binary" type="xsd:base64Binary" />
    <part name="varHexBinary" type="xsd:hexBinary" />
  </message>
  <message name="outEnumRequest" />
  <message name="outEnumResponse">
    <part name="varEnumString" type="s:enumString" />
    <part name="varEnumInteger" type="s:enumInteger" />
    <part name="varEnumInt" type="s:enumInt" />
    <part name="varEnumLong" type="s:enumLong" />
    <part name="varEnumShort" type="s:enumShort" />
    <part name="varEnumDecimal" type="s:enumDecimal" />
    <part name="varEnumFloat" type="s:enumFloat" />
    <part name="varEnumDouble" type="s:enumDouble" />
    <part name="varEnumByte" type="s:enumByte" />
  </message>
  <!-- IN/OUT parameter -->
  <message name="inoutRequest">
    <part name="varString" type="xsd:string" />
  </message>
  <message name="inoutResponse">
    <part name="varString" type="xsd:string" />
  </message>
  <message name="inoutRequest2">
    <part name="param" type="xsd:string" />
  </message>
  <message name="inoutSimpleTypesRequest">
    <part name="varString" type="xsd:string" />
    <part name="varInteger" type="xsd:integer" />
    <part name="varInt" type="xsd:int" />
    <part name="varLong" type="xsd:long" />
    <part name="varShort" type="xsd:short" />
    <part name="varDecimal" type="xsd:decimal" />
    <part name="varFloat" type="xsd:float" />
    <part name="varDouble" type="xsd:double" />
    <part name="varBoolean" type="xsd:boolean" />
    <part name="varByte" type="xsd:byte" />
    <part name="varQName" type="xsd:QName" />
    <part name="varDateTime" type="xsd:dateTime" />
    <part name="varBase64Binary" type="xsd:base64Binary" />
    <part name="varHexBinary" type="xsd:hexBinary" />
  </message>
  <message name="inoutSimpleTypesResponse">
    <part name="varString" type="xsd:string" />
    <part name="varInteger" type="xsd:integer" />
    <part name="varInt" type="xsd:int" />
    <part name="varLong" type="xsd:long" />
    <part name="varShort" type="xsd:short" />
    <part name="varDecimal" type="xsd:decimal" />
    <part name="varFloat" type="xsd:float" />
    <part name="varDouble" type="xsd:double" />
    <part name="varBoolean" type="xsd:boolean" />
    <part name="varByte" type="xsd:byte" />
    <part name="varQName" type="xsd:QName" />
    <part name="varDateTime" type="xsd:dateTime" />
    <part name="varBase64Binary" type="xsd:base64Binary" />
    <part name="varHexBinary" type="xsd:hexBinary" />
  </message>
  <message name="inoutEnumRequest">
    <part name="varEnumString" type="s:enumString" />
    <part name="varEnumInteger" type="s:enumInteger" />
    <part name="varEnumInt" type="s:enumInt" />
    <part name="varEnumLong" type="s:enumLong" />
    <part name="varEnumShort" type="s:enumShort" />
    <part name="varEnumDecimal" type="s:enumDecimal" />
    <part name="varEnumFloat" type="s:enumFloat" />
    <part name="varEnumDouble" type="s:enumDouble" />
    <part name="varEnumByte" type="s:enumByte" />
  </message>
  <message name="inoutEnumResponse">
    <part name="varEnumString" type="s:enumString" />
    <part name="varEnumInteger" type="s:enumInteger" />
    <part name="varEnumInt" type="s:enumInt" />
    <part name="varEnumLong" type="s:enumLong" />
    <part name="varEnumShort" type="s:enumShort" />
    <part name="varEnumDecimal" type="s:enumDecimal" />
    <part name="varEnumFloat" type="s:enumFloat" />
    <part name="varEnumDouble" type="s:enumDouble" />
    <part name="varEnumByte" type="s:enumByte" />
  </message>
  <!-- IN/OUT/INOUT parameter -->
  <message name="mixRequest">
    <part name="varInString" type="xsd:string" />
    <part name="varInOutString" type="xsd:string" />
  </message>
  <message name="mixResponse">
    <part name="varOutString" type="xsd:string" />
    <part name="varInOutString" type="xsd:string" />
  </message>
  <message name="inoutSimpleTypesArrayRequest">
    <part name="varString" type="s:ArrayOfstring" />
    <part name="varInteger" type="s:ArrayOfinteger" />
    <part name="varInt" type="s:ArrayOfint" />
    <part name="varLong" type="s:ArrayOflong" />
    <part name="varShort" type="s:ArrayOfshort" />
    <part name="varDecimal" type="s:ArrayOfdecimal" />
    <part name="varFloat" type="s:ArrayOffloat" />
    <part name="varDouble" type="s:ArrayOfdouble" />
    <part name="varBoolean" type="s:ArrayOfboolean" />
    <part name="varByte" type="s:ArrayOfbyte" />
    <part name="varQName" type="s:ArrayOfQName" />
    <part name="varDateTime" type="s:ArrayOfdateTime" />
  </message>
  <message name="inoutSimpleTypesArrayResponse">
    <part name="varString" type="s:ArrayOfstring" />
    <part name="varInteger" type="s:ArrayOfinteger" />
    <part name="varInt" type="s:ArrayOfint" />
    <part name="varLong" type="s:ArrayOflong" />
    <part name="varShort" type="s:ArrayOfshort" />
    <part name="varDecimal" type="s:ArrayOfdecimal" />
    <part name="varFloat" type="s:ArrayOffloat" />
    <part name="varDouble" type="s:ArrayOfdouble" />
    <part name="varBoolean" type="s:ArrayOfboolean" />
    <part name="varByte" type="s:ArrayOfbyte" />
    <part name="varQName" type="s:ArrayOfQName" />
    <part name="varDateTime" type="s:ArrayOfdateTime" />
  </message>
  <message name="inoutBookRequest">
    <part name="varBook" type="s:Book" />
  </message>
  <message name="inoutBookResponse">
    <part name="varBook" type="s:Book" />
  </message>
  <message name="inoutBookArrayRequest">
    <part name="varBook" type="s:ArrayOfBook" />
  </message>
  <message name="inoutBookArrayResponse">
    <part name="varBook" type="s:ArrayOfBook" />
  </message>
  <portType name="ParameterModeTest">
    <operation name="echoIn" parameterOrder="varString">
      <input message="tns:inRequest" />
      <output message="tns:inResponse" />
    </operation>
    <operation name="echoOut" parameterOrder="varString">
      <input message="tns:outRequest" />
      <output message="tns:outResponse" />
    </operation>
    <operation name="echoInOut" parameterOrder="varString">
      <input message="tns:inoutRequest" />
      <output message="tns:inoutResponse" />
    </operation>
    <operation name="echoInOut2">
      <input message="tns:inoutRequest" />
      <output message="tns:inoutResponse" />
    </operation>
    <operation name="echoInOut3" parameterOrder="param">
      <input message="tns:inoutRequest2" />
      <output message="tns:inoutResponse" />
    </operation>
    <operation name="echoInOut4">
      <input message="tns:inoutRequest2" />
      <output message="tns:inoutResponse" />
    </operation>
    <operation name="echoMix" parameterOrder="varInString varInOutString varOutString">
      <input message="tns:mixRequest" />
      <output message="tns:mixResponse" />
    </operation>
    <operation name="echoInSimpleTypes" parameterOrder="varString varInteger varInt varLong varShort varDecimal varFloat varDouble varBoolean varByte varQName varDateTime varBase64Binary varHexBinary">
      <input message="tns:inSimpleTypesRequest" />
      <output message="tns:inSimpleTypesResponse" />
    </operation>
    <operation name="echoOutSimpleTypes" parameterOrder="varString varInteger varInt varLong varShort varDecimal varFloat varDouble varBoolean varByte varQName varDateTime varBase64Binary varHexBinary ">
      <input message="tns:outSimpleTypesRequest" />
      <output message="tns:outSimpleTypesResponse" />
    </operation>
    <operation name="echoInOutSimpleTypes" parameterOrder="varString varInteger varInt varLong varShort varDecimal varFloat varDouble varBoolean varByte varQName varDateTime varBase64Binary varHexBinary ">
      <input message="tns:inoutSimpleTypesRequest" />
      <output message="tns:inoutSimpleTypesResponse" />
    </operation>
    <operation name="echoInEnum" parameterOrder="varEnumString varEnumInteger varEnumInt varEnumLong varEnumShort varEnumDecimal varEnumFloat varEnumDouble varEnumByte">
      <input message="tns:inEnumRequest" />
      <output message="tns:inEnumResponse" />
    </operation>
    <operation name="echoOutEnum" parameterOrder="varEnumString varEnumInteger varEnumInt varEnumLong varEnumShort varEnumDecimal varEnumFloat varEnumDouble varEnumByte">
      <input message="tns:outEnumRequest" />
      <output message="tns:outEnumResponse" />
    </operation>
    <operation name="echoInOutEnum" parameterOrder="varEnumString varEnumInteger varEnumInt varEnumLong varEnumShort varEnumDecimal varEnumFloat varEnumDouble varEnumByte">
      <input message="tns:inoutEnumRequest" />
      <output message="tns:inoutEnumResponse" />
    </operation>
    <operation name="echoInStruct" parameterOrder="varStruct">
      <input message="tns:inStructRequest" />
      <output message="tns:inStructResponse" />
    </operation>
    <operation name="echoInOutSimpleTypesArray" parameterOrder="varString varInteger varInt varLong varShort varDecimal varFloat varDouble varBoolean varByte varQName varDateTime">
      <input message="tns:inoutSimpleTypesArrayRequest" />
      <output message="tns:inoutSimpleTypesArrayResponse" />
    </operation>
    <operation name="echoInOutBook" parameterOrder="varBook">
      <input message="tns:inoutBookRequest" />
      <output message="tns:inoutBookResponse" />
    </operation>
    <operation name="echoInOutBookArray" parameterOrder="varBook">
      <input message="tns:inoutBookArrayRequest" />
      <output message="tns:inoutBookArrayResponse" />
    </operation>
  </portType>
  <binding name="ParameterModeTestBinding" type="tns:ParameterModeTest">
    <soap:binding style="rpc" transport="http://schemas.xmlsoap.org/soap/http" />
    <operation name="echoIn">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" namespace="http://ParameterModeTest.org/" />
      </input>
      <output>
        <soap:body use="literal" namespace="http://ParameterModeTest.org/" />
      </output>
    </operation>
    <operation name="echoOut">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" namespace="http://ParameterModeTest.org/" />
      </input>
      <output>
        <soap:body use="literal" namespace="http://ParameterModeTest.org/" />
      </output>
    </operation>
    <operation name="echoInOut">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" namespace="http://ParameterModeTest.org/" />
      </input>
      <output>
        <soap:body use="literal" namespace="http://ParameterModeTest.org/" />
      </output>
    </operation>
    <operation name="echoInOut2">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" namespace="http://ParameterModeTest.org/" />
      </input>
      <output>
        <soap:body use="literal" namespace="http://ParameterModeTest.org/" />
      </output>
    </operation>
    <operation name="echoInOut3">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" namespace="http://ParameterModeTest.org/" />
      </input>
      <output>
        <soap:body use="literal" namespace="http://ParameterModeTest.org/" />
      </output>
    </operation>
    <operation name="echoInOut4">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" namespace="http://ParameterModeTest.org/" />
      </input>
      <output>
        <soap:body use="literal" namespace="http://ParameterModeTest.org/" />
      </output>
    </operation>
    <operation name="echoMix">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" namespace="http://ParameterModeTest.org/" />
      </input>
      <output>
        <soap:body use="literal" namespace="http://ParameterModeTest.org/" />
      </output>
    </operation>
    <operation name="echoInSimpleTypes">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" namespace="http://ParameterModeTest.org/" />
      </input>
      <output>
        <soap:body use="literal" namespace="http://ParameterModeTest.org/" />
      </output>
    </operation>
    <operation name="echoOutSimpleTypes">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" namespace="http://ParameterModeTest.org/" />
      </input>
      <output>
        <soap:body use="literal" namespace="http://ParameterModeTest.org/" />
      </output>
    </operation>
    <operation name="echoInOutSimpleTypes">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" namespace="http://ParameterModeTest.org/" />
      </input>
      <output>
        <soap:body use="literal" namespace="http://ParameterModeTest.org/" />
      </output>
    </operation>
    <operation name="echoInEnum">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" namespace="http://ParameterModeTest.org/" />
      </input>
      <output>
        <soap:body use="literal" namespace="http://ParameterModeTest.org/" />
      </output>
    </operation>
    <operation name="echoOutEnum">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" namespace="http://ParameterModeTest.org/" />
      </input>
      <output>
        <soap:body use="literal" namespace="http://ParameterModeTest.org/" />
      </output>
    </operation>
    <operation name="echoInOutEnum">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" namespace="http://ParameterModeTest.org/" />
      </input>
      <output>
        <soap:body use="literal" namespace="http://ParameterModeTest.org/" />
      </output>
    </operation>
    <operation name="echoInStruct">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" namespace="http://ParameterModeTest.org/" />
      </input>
      <output>
        <soap:body use="literal" namespace="http://ParameterModeTest.org/" />
      </output>
    </operation>
    <operation name="echoInOutSimpleTypesArray">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" namespace="http://ParameterModeTest.org/" />
      </input>
      <output>
        <soap:body use="literal" namespace="http://ParameterModeTest.org/" />
      </output>
    </operation>
    <operation name="echoInOutBook">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" namespace="http://ParameterModeTest.org/" />
      </input>
      <output>
        <soap:body use="literal" namespace="http://ParameterModeTest.org/" />
      </output>
    </operation>
    <operation name="echoInOutBookArray">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" namespace="http://ParameterModeTest.org/" />
      </input>
      <output>
        <soap:body use="literal" namespace="http://ParameterModeTest.org/" />
      </output>
    </operation>
  </binding>
  <service name="ParameterModeTestService">
    <port name="ParameterModeTestPort" binding="tns:ParameterModeTestBinding">
      <soap:address location="http://foo:9999/bar" />
    </port>
  </service>
</definitions>

