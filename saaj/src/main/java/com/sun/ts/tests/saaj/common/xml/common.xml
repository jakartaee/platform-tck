<?xml version="1.0"?>
<!--

    Copyright (c) 2018 Oracle and/or its affiliates. All rights reserved.

    This program and the accompanying materials are made available under the
    terms of the Eclipse Public License v. 2.0, which is available at
    http://www.eclipse.org/legal/epl-2.0.

    This Source Code may also be made available under the following Secondary
    Licenses when the conditions for such availability set forth in the
    Eclipse Public License v. 2.0 are satisfied: GNU General Public License,
    version 2 with the GNU Classpath Exception, which is available at
    https://www.gnu.org/software/classpath/license.html.

    SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0

-->

<project name="common" >

    <import file="../../../../../../../../bin/xml/ts.import.xml"/>

    <property name="saaj.common.util.classes" value="
	com/sun/ts/tests/saaj/common/SOAP_Util.class"/>

    <property name="saaj.common.servlet.classes"  value="
	com/sun/ts/tests/saaj/common/ReceivingSOAP11Servlet.class,
	com/sun/ts/tests/saaj/common/ReceivingSOAP12Servlet.class"/>

    <property name="saaj.common.other.classes"  value="
	com/sun/ts/tests/saaj/common/XMLUtils*.class,
	com/sun/ts/tests/saaj/common/BASE64DecoderStream.class,
	com/sun/ts/tests/saaj/common/BASE64EncoderStream.class"/>

    <property name="saaj.common.client.util.classes" value="
	com/sun/ts/tests/saaj/common/SOAP_Util_Client.class"/>

    <target name="saaj.dependency.checks">
       <condition property="ok.copy.dd.files">
           <and>
               <not>
                   <contains substring="true" string="${standalone.mode}"/>
               </not>
               <not>
                   <contains substring="true" string="${dd.files.already.exist}"/>
               </not>
           </and>

       </condition>
    </target>

    <!-- copies the platform specific webxml file to web.xml -->
    <target name="copy_webxml_file">
        <copy file="${ts.home}/src/${pkg.dir}/${platform.mode}.web.xml" tofile="${ts.home}/src/${pkg.dir}/web.xml"/>
    </target>

    <!-- removes the copied web.xml file -->
    <target name="remove_webxml_file">
        <delete failonerror="false">
            <fileset dir="${ts.home}/src/${pkg.dir}" includes="web.xml" />
        </delete>
    </target>

    <target name="copy_dd_files" depends="saaj.dependency.checks" if="ok.copy.dd.files">
        <filterset id="appname.replacement">
            <filter token="appname" value="${app.name}"/>
        </filterset>
        <property name="common.xml.templates.dir" value="${ts.home}/src/com/sun/ts/tests/saaj/common/xml/templates"/>
        <!-- copy all template files that begin with appname to their appropriate name-->
        <copy failonerror="false" todir="${ts.home}/src/${pkg.dir}">
          <fileset dir="${common.xml.templates.dir}" >
            <include name="appname*xml"/>
          </fileset>
          <regexpmapper from="^appname([\.|_])(.*)(xml)$$" to="${app.name}\1\2\3"/>
          <filterset refid="appname.replacement"/>
        </copy>
    </target>

    <target name="remove_dd_files" depends="saaj.dependency.checks" if="ok.copy.dd.files">
        <delete failonerror="no" >
          <fileset dir="${ts.home}/src/${pkg.dir}" includes="${app.name}*sun*.xml"/>
        </delete>
    </target>

    <target name="do_war_package_with_contentroot">
	<antcall target="copy_dd_files"/>
        <antcall target="copy_webxml_file"/>
	<ts.war archivename="${app.name}" descriptor="web.xml">
	    <zipfileset dir="${class.dir}" includes="${impl.classes}, ${other.classes}" prefix="WEB-INF/classes"/>
	    <zipfileset dir="${src.dir}/${pkg.dir}/contentRoot" includes="**/*"/>
	</ts.war>
	<ts.ear archivename="${app.name}" descriptor="application.xml" includedefaultfiles="false">
            <zipfileset dir="${dist.dir}/${pkg.dir}" includes="${app.name}_web.war"/>
        </ts.ear>
        <antcall target="remove_webxml_file"/>
        <antcall target="remove_dd_files"/>
    </target>

    <target name="do_war_package_without_contentroot">
	<antcall target="copy_dd_files"/>
        <antcall target="copy_webxml_file"/>
	<ts.war archivename="${app.name}" descriptor="web.xml">
	    <zipfileset dir="${class.dir}" includes="${impl.classes}, ${other.classes}" prefix="WEB-INF/classes"/>
	</ts.war>
	<ts.ear archivename="${app.name}" descriptor="application.xml" includedefaultfiles="false">
            <zipfileset dir="${dist.dir}/${pkg.dir}" includes="${app.name}_web.war"/>
        </ts.ear>
        <antcall target="remove_webxml_file"/>
        <antcall target="remove_dd_files"/>
    </target>

    <target name="do_vehicles_package">
        <ts.vehicles name="${app.name}">
	    <client-elements>
		<zipfileset dir="${class.dir}" includes="${saaj.common.client.util.classes}"/>
	    </client-elements>
	    <ejb-elements>
		<zipfileset dir="${class.dir}" includes="${saaj.common.client.util.classes}"/>
	    </ejb-elements>
	    <jsp-elements>
		<zipfileset dir="${class.dir}" includes="${saaj.common.client.util.classes}" prefix="WEB-INF/classes"/>
	    </jsp-elements>
	    <servlet-elements>
		<zipfileset dir="${class.dir}" includes="${saaj.common.client.util.classes}" prefix="WEB-INF/classes"/>
	    </servlet-elements>
	</ts.vehicles>
    </target>
    <target name="-precompile">
           <echo message="Building common files"/>
           <ant dir="${src.dir}/com/sun/ts/tests/saaj/common" target="build" inheritAll="false"/>
    </target>


       

</project>
