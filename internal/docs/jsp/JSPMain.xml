<?xml version = "1.0" encoding = "UTF-8"?>
<!DOCTYPE spec SYSTEM "https://raw.githubusercontent.com/eclipse-ee4j/jakartaee-tck/master/internal/docs/dtd/spec_assertions.dtd">
<!--
  Copyright (c) 2018 Oracle and/or its affiliates. All rights reserved.

  This program and the accompanying materials are made available under the
  terms of the Eclipse Public License v. 2.0, which is available at
  http://www.eclipse.org/legal/epl-2.0.

  This Source Code may also be made available under the following Secondary
  Licenses when the conditions for such availability set forth in the
  Eclipse Public License v. 2.0 are satisfied: GNU General Public License,
  version 2 with the GNU Classpath Exception, which is available at
  https://www.gnu.org/software/classpath/license.html.

  SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0

-->
<?xml-stylesheet href = 'file:///files/workspaces/tools/docs/xsl/assertions/spec_assertions_comments.xsl' type = 'text/xsl'?>
<spec>    
	<!-- $URL$ $LastChangedDate$ -->
	<next-available-id>2</next-available-id>
	<previous-id>1</previous-id>
	<technology>JSP</technology>
	<id>2.0</id>
	<name>Java Server(TM) Pages</name>
	<version>Proposed Final Draft</version>
	<location-names>
		<chapters>
			<chapter id = "1" name = "Core Syntax and Semantics">
				<sections>
					<section id = "1" name = "What is a JSP Page"/>
					<section id = "1.1" name = "Web Containers and Web Components"/>
					<section id = "1.2" name = "JSP and HTML"/>
					<section id = "1.3" name = "JSP and XML"/>
					<section id = "1.4" name = "Translation and Execution Phases"/>
					<section id = "1.5" name = "Events in JSP Pages"/>
					<section id = "1.6" name = "JSP Configuration Information"/>
					<section id = "1.7" name = "Naming Conventions for JSP Files"/>
					<section id = "1.8" name = "Compiling JSP Pages"/>
					<section id = "1.8.1" name = "JSP Page Packaging"/>
					<section id = "1.9" name = "Debugging JSP Pages"/>
					<section id = "2" name = "Web Applications"/>
					<section id = "2.1" name = "Relative URL Specifications"/>
					<section id = "3" name = "Syntactic Elements of a JSP Page"/>
					<section id = "3.1" name = "Elements and Template Data"/>
					<section id = "3.2" name = "Element Syntax"/>
					<section id = "3.3" name = "Start and End Tags"/>
					<section id = "3.4" name = "Empty Elements"/>
					<section id = "3.5" name = "Attribute Values"/>
					<section id = "3.6" name = "The jsp:attribute, jsp:body, and jsp:element Elements."/>
					<section id = "3.7" name = "Valid Names for Actions and Attributes"/>
					<section id = "3.8" name = "White Space"/>
					<section id = "3.9" name = "JSP Documents"/>
					<section id = "3.10" name = "JSP Syntax Grammar"/>
					<section id = "3.10.1" name = "EBNF Grammar for JSP Syntax"/>
					<section id = "3.10.2" name = "Validity Constraints"/>
					<section id = "3.10.3" name = "Standard Action Attributes"/>
					<section id = "4" name = "Error Handling"/>
					<section id = "4.1" name = "Translation Time Processing Errors"/>
					<section id = "4.2" name = "Request Time Processing Errors"/>
					<section id = "4.3" name = "Using JSPs as Error Pages"/>
					<section id = "5" name = "Comments"/>
					<section id = "5.1" name = "Generating Comments in Output to Client"/>
					<section id = "5.2" name = "JSP Comments"/>
					<section id = "6" name = "Quoting and Escape Conventions"/>
					<section id = "7" name = "Overall Semantics of a JSP Page"/>
					<section id = "8" name = "Objects"/>
					<section id = "8.1" name = "Objects and Variables"/>
					<section id = "8.2" name = "Objects and Scopes"/>
					<section id = "8.3" name = "Implicit Objects"/>
					<section id = "8.4" name = "the 'pageContext' Object"/>
					<section id = "9" name = "Template Text Semantics"/>
					<section id = "10" name = "Directives"/>
					<section id = "10.1" name = "The 'page' Directive"/>
					<section id = "10.2" name = "The 'taglib' directive"/>
					<section id = "10.3" name = "The 'include' directive"/>
					<section id = "10.4" name = "Implicit Includes"/>
					<section id = "10.5" name = "Including Data in JSP Pages"/>
					<section id = "10.6" name = "Additional Directives for Tag Files"/>
					<section id = "11" name = "EL Elements"/>
					<section id = "12" name = "Scripting Elements"/>
					<section id = "12.1" name = "Declarations"/>
					<section id = "12.2" name = "Scriptlets"/>
					<section id = "12.3" name = "Expressions"/>
					<section id = "13" name = "Actions"/>
					<section id = "14" name = "Tag Attribute Interpretation Semantics"/>
					<section id = "14.1" name = "Request Time Attribute Values"/>
					<section id = "14.2" name = "Type Conversions"/>
					<section id = "14.2.1" name = "Conversions from String values"/>
					<section id = "14.2.2" name = "Conversions from request-time expressions"/>
				</sections>
			</chapter>
			<chapter id = "2" name = "Expression Language">
				<sections>
					<section id = "1" name = "Overview"/>
					<section id = "2" name = "The Expression Language in JSP 2.0"/>
					<section id = "2.1" name = "Expressions and Attribute Values"/>
					<section id = "2.1.1" name = "Examples"/>
					<section id = "2.2" name = "Expressions and Template Text"/>
					<section id = "2.2.1" name = "Examples"/>
					<section id = "2.3" name = "Implicit Objects"/>
					<section id = "2.4" name = "Deactivating EL Evaluation"/>
					<section id = "2.5" name = "Disabling Scripting Elements"/>
					<section id = "3" name = "General Syntax ofthe Expression Language"/>
					<section id = "3.1" name = "Overview"/>
					<section id = "3.2" name = "Literals"/>
					<section id = "3.3" name = "Errors, Warnings, Default Values"/>
					<section id = "3.4" name = "Operators '[]' and '.'"/>
					<section id = "3.5" name = "Arithmetic Operators"/>
					<section id = "3.5.1" name = "Binary Operators - {+, -, *} B"/>
					<section id = "3.5.2" name = "Binary Operator - A {/} B"/>
					<section id = "3.5.3" name = "Binary Operator - A {%} B"/>
					<section id = "3.5.4" name = "Unary minus operator - -A"/>
					<section id = "3.5.5" name = "Relational Operators"/>
					<section id = "3.5.6" name = "A { &lt;, >, &lt;=, >=, lt, gt, le, ge} B"/>
					<section id = "3.5.7" name = "A {==, !=, eq, ne} B"/>
					<section id = "3.6" name = "Logical Operators"/>
					<section id = "3.6.1" name = "Binary Operator - A { &amp;&amp;, ||, and, or} B"/>
					<section id = "3.6.2" name = "Unary not operator - { !, not } A"/>
					<section id = "3.7" name = "Empty Operator - empty A"/>
					<section id = "3.8" name = "Parentheses"/>
					<section id = "3.9" name = "Operator Precendence"/>
					<section id = "4" name = "Reserved Words"/>
					<section id = "5" name = "Named Variables"/>
					<section id = "6" name = "Functions"/>
					<section id = "6.1" name = "Invocation Syntax"/>
					<section id = "6.2" name = "Tag Library Descriptor Information"/>
					<section id = "6.3" name = "Example"/>
					<section id = "6.4" name = "Semantics"/>
					<section id = "7" name = "Implicit Objects"/>
					<section id = "8" name = "Type Conversion"/>
					<section id = "8.1" name = "To coerce a value X to type Y"/>
					<section id = "8.2" name = "Coerce A to String"/>
					<section id = "8.3" name = "Coerce A to Number type N"/>
					<section id = "8.4" name = "Coerce A to Character"/>
					<section id = "8.5" name = "Coerce A to Boolean"/>
					<section id = "8.6" name = "Coerce A to any other type T"/>
					<section id = "9" name = "Collected Syntax"/>
				</sections>
			</chapter>
			<chapter id = "3" name = "JSP Configuration">
				<sections>
					<section id = "1" name = "JSP configuration information in web.xml"/>
					<section id = "2" name = "Taglib map"/>
					<section id = "3" name = "JSP Property Groups"/>
					<section id = "3.1" name = "JSP Property Groups"/>
					<section id = "3.2" name = "Enabling EL Evaluation"/>
					<section id = "3.3" name = "Enabling Scripting"/>
					<section id = "3.4" name = "Declaring Page Encodings"/>
					<section id = "3.5" name = "Defining Implicit Includes"/>
					<section id = "3.6" name = "Denoting XML Documents"/>
				</sections>
			</chapter>
			<chapter id = "4" name = "Localization Issues">
				<sections>
					<section id = "1" name = "Page Character Encoding"/>
					<section id = "2" name = "Static Content Type"/>
					<section id = "3" name = "Dynamic Content Type and Character Encoding"/>
					<section id = "4" name = "Delivering Localized Content"/>
				</sections>
			</chapter>
			<chapter id = "5" name = "Standard Actions">
				<sections>
					<section id = "1" name = "&lt;jsp:useBean>"/>
					<section id = "2" name = "&lt;jsp:setProperty>"/>
					<section id = "3" name = "&lt;jsp:getProperty>"/>
					<section id = "4" name = "&lt;jsp:include>"/>
					<section id = "5" name = "&lt;jsp:forward>"/>
					<section id = "6" name = "&lt;jsp:param>"/>
					<section id = "6.1" name = "Syntax"/>
					<section id = "7" name = "&lt;jsp:plugin>"/>
					<section id = "8" name = "&lt;jsp:params>"/>
					<section id = "9" name = "&lt;jsp:fallback>"/>
					<section id = "10" name = "&lt;jsp:attribute>"/>
					<section id = "11" name = "&lt;jsp:body>"/>
					<section id = "12" name = "&lt;jsp:invoke>"/>
					<section id = "12.1" name = "Basic Usage"/>
					<section id = "12.2" name = "Storing Fragment Output"/>
					<section id = "12.3" name = "Passing Parameters"/>
					<section id = "13" name = "&lt;jsp:doBody>"/>
					<section id = "14" name = "Other Standard Actions"/>
				</sections>
			</chapter>
			<chapter id = "6" name = "JSP and XML">
				<sections>
					<section id = "1" name = "JSP Documents"/>
					<section id = "1.1" name = "Semantic Model"/>
					<section id = "1.2" name = "Namespaces, Standard Actions and Tag Libraries"/>
					<section id = "2.3" name = "The 'jsp:root' element"/>
					<section id = "2.4" name = "The 'jsp:directive.page' element"/>
					<section id = "2.5" name = "The 'jsp:directive:include' element"/>
					<section id = "2.6" name = "The 'jsp:declaration' element"/>
					<section id = "2.7" name = "The 'jsp:scriptlet' element"/>
					<section id = "2.8" name = "The 'jsp:expression' element"/>
					<section id = "2.9" name = "The jsp:element element"/>
					<section id = "2.10" name = "The 'jsp:text' element"/>
					<section id = "2.11" name = "Other XML elements"/>
					<section id = "3" name = "XML View of a JSP Page"/>
					<section id = "3.1" name = "JSP Documents"/>
					<section id = "3.2" name = "JSP Pages in JSP Syntax"/>
					<section id = "3.3" name = "JSP Comments"/>
					<section id = "3.4" name = "The 'page' directive"/>
					<section id = "3.5" name = "The 'taglib' directive'"/>
					<section id = "3.6" name = "The 'include' directive"/>
					<section id = "3.7" name = "Declarations"/>
					<section id = "3.8" name = "Scriptlets"/>
					<section id = "3.9" name = "Expressions"/>
					<section id = "3.10" name = "Standard and Custom Actions"/>
					<section id = "3.11" name = "Request-Time Attribute Expressions"/>
					<section id = "3.12" name = "Template Text and XML Elements"/>
					<section id = "3.13" name = "The 'jsp:id' Attribute"/>
					<section id = "4" name = "Validating an XML View of a JSP page"/>
					<section id = "5" name = "Examples"/>
					<section id = "5.1" name = "A JSP Document"/>
					<section id = "5.2" name = "A JSP page and its corresponding JSP document"/>
				</sections>
			</chapter>
			<chapter id = "7" name = "Tag Extensions">
				<sections>
					<section id = "1" name = "Introduction"/>
					<section id = "1.1" name = "Goals"/>
					<section id = "1.2" name = "Overview"/>
					<section id = "1.3" name = "Classic Tag Handlers"/>
					<section id = "1.4" name = "Simple Examples of Classic Tag Handlers"/>
					<section id = "1.4.1" name = "Simple Actions"/>
					<section id = "1.4.2" name = "Actions with a Body"/>
					<section id = "1.4.3" name = "Conditionals"/>
					<section id = "1.4.4" name = "Iterations"/>
					<section id = "1.4.5" name = "Actions that Process their Body"/>
					<section id = "1.4.6" name = "Cooperating Actions"/>
					<section id = "1.4.7" name = "Actions Defining Scripting Variables"/>
					<section id = "1.5" name = "Simple Tag Handlers"/>
					<section id = "1.6" name = "JSP Fragments"/>
					<section id = "1.7" name = "Simple Examples of Simple Tag Handlers"/>
					<section id = "1.7.1" name = "Simple Actions"/>
					<section id = "1.7.2" name = "Actions with a Body"/>
					<section id = "1.7.3" name = "Conditionals"/>
					<section id = "1.7.4" name = "Iterations"/>
					<section id = "1.7.5" name = "Actions that Process their Body"/>
					<section id = "1.7.6" name = "Cooperating Actions"/>
					<section id = "1.8" name = "Attributes with Dynamic Values"/>
					<section id = "1.9" name = "Event Listeners"/>
					<section id = "2" name = "Tag Libraries"/>
					<section id = "2.1" name = "Packaged Tag Libraries"/>
					<section id = "2.2" name = "Location of Java Classes"/>
					<section id = "2.3" name = "Tag Library Directive"/>
					<section id = "3" name = "The Tag Library Descriptor"/>
					<section id = "3.1" name = "Identifying Tag Library Descriptors"/>
					<section id = "3.2" name = "TLD resource path"/>
					<section id = "3.3" name = "Taglib map in web.xml"/>
					<section id = "3.4" name = "Implicit Map entries from TLDs"/>
					<section id = "3.5" name = "Implicit Map entries from the Container"/>
					<section id = "3.6" name = "Determining the TLD Resource Path"/>
					<section id = "3.6.1" name = "Computing the TLD Locations"/>
					<section id = "3.6.2" name = "Computing the TLD Resource Path"/>
					<section id = "3.6.3" name = "Usage Considerations"/>
					<section id = "3.7" name = "Translation-Time Class Loader"/>
					<section id = "3.8" name = "Assembling a Web Application"/>
					<section id = "3.9" name = "Well-Known URIs"/>
					<section id = "3.10" name = "Tag and Tag Library Extension Elements"/>
					<section id = "3.10.1" name = "Example"/>
					<section id = "4" name = "Validation"/>
					<section id = "4.1" name = "Translation-Time Mechanism"/>
					<section id = "4.1.1" name = "Attribute Information"/>
					<section id = "4.1.2" name = "Validator Classes"/>
					<section id = "4.1.3" name = "TagExtraInfo Class Validation"/>
					<section id = "4.1.4" name = "Request-Time Errors"/>
					<section id = "5" name = "Conventions and Other Issues"/>
					<section id = "5.1" name = "How to Define New Implicit Objects"/>
					<section id = "5.2" name = "Access to Vendor-Specific Information"/>
					<section id = "5.3" name = "Customizing a Tag Library"/>
				</sections>
			</chapter>
			<chapter id = "8" name = "Tag Files">
				<sections>
					<section id = "1" name = "Overview"/>
					<section id = "2" name = "Syntax of Tag Files"/>
					<section id = "3" name = "Sematics of Tag Files"/>
					<section id = "4" name = "Packaging Tag Files"/>
					<section id = "4.1" name = "Location of Tag Files"/>
					<section id = "4.2" name = "Packaging in a JAR"/>
					<section id = "4.3" name = "Packaging Directly in a Web Application"/>
					<section id = "4.4" name = "Packaging as Precompiled Tag Handlers"/>
					<section id = "5" name = "Tag File Directives"/>
					<section id = "5.1" name = "The 'tag' directive"/>
					<section id = "5.2" name = "The 'attribute' directive"/>
					<section id = "5.3" name = "The 'variable' directive"/>
					<section id = "6" name = "XML View of a Tag File"/>
				</sections>
			</chapter>
			<chapter id = "9" name = "Scripting">
				<sections>
					<section id = "1" name = "Overall Structure"/>
					<section id = "1.1" name = "Valid JSP Page"/>
					<section id = "1.2" name = "Reserved Names"/>
					<section id = "1.3" name = "Implementation Flexibility"/>
					<section id = "2" name = "Declarations Section"/>
					<section id = "3" name = "Initialization Section"/>
					<section id = "4" name = "Main Section"/>
					<section id = "4.1" name = "Template Data"/>
					<section id = "4.2" name = "Scriptlets"/>
					<section id = "4.3" name = "Expressions"/>
					<section id = "4.4" name = "Actions"/>
				</sections>
			</chapter>
			<chapter id = "10" name = "JSP Container">
				<sections>
					<section id = "1" name = "JSP Page Model"/>
					<section id = "1.1" name = "Protocol Seen by the Web Server"/>
					<section id = "1.1.1" name = "Protocol Seen by the JSP Page Author"/>
					<section id = "1.1.2" name = "The HttpJspPage Interface"/>
					<section id = "2" name = "JSP Page Implementation Class"/>
					<section id = "2.1" name = "API Contracts"/>
					<section id = "2.2" name = "Request and Response Parameters"/>
					<section id = "2.3" name = "Omitting the 'extends' Attribute"/>
					<section id = "2.4" name = "Using the 'extends' Attribute"/>
					<section id = "3" name = "Buffering"/>
					<section id = "4" name = "Precompilation"/>
					<section id = "4.1" name = "Request Parameter Names"/>
					<section id = "4.2" name = "Precompilation Protocol"/>
					<section id = "5" name = "Debugging Requirements"/>
				</sections>
			</chapter>
			<chapter id = "11" name = "Core API">
				<sections>
					<section id = "1" name = "JSP Page Implementation Object Contract"/>
					<section id = "1.1" name = "JspPage"/>
					<section id = "1.1.1" name = "Methods"/>
					<section id = "1.2" name = "HttpJspPage"/>
					<section id = "1.2.1" name = "Methods"/>
					<section id = "1.3" name = "JspFactory"/>
					<section id = "1.3.1" name = "Constructors"/>
					<section id = "1.3.2" name = "Methods"/>
					<section id = "1.4" name = "JspEngineInfo"/>
					<section id = "1.4.1" name = "Constructors"/>
					<section id = "1.4.2" name = "Methods"/>
					<section id = "2" name = "Implicit Objects"/>
					<section id = "2.1" name = "JspContext"/>
					<section id = "2.1.1" name = "Fields"/>
					<section id = "2.1.2" name = "Constructors"/>
					<section id = "2.1.3" name = "Methods"/>
					<section id = "2.2" name = "PageContext"/>
					<section id = "2.2.1" name = "Fields"/>
					<section id = "2.2.2" name = "Constructors"/>
					<section id = "2.2.3" name = "Methods"/>
					<section id = "2.3" name = "JspWriter"/>
					<section id = "2.3.1" name = "Fields"/>
					<section id = "2.3.2" name = "Constructors"/>
					<section id = "2.3.3" name = "Methods"/>
					<section id = "2.4" name = "ErrorData"/>
					<section id = "2.4.1" name = "Constructors"/>
					<section id = "2.4.2" name = "Methods"/>
					<section id = "3" name = "An Implementation Example"/>
					<section id = "4" name = "Exceptions"/>
					<section id = "4.1" name = "JspException"/>
					<section id = "4.1.1" name = "Constructors"/>
					<section id = "4.1.2" name = "Methods"/>
					<section id = "4.2" name = "JspTagException"/>
					<section id = "4.2.1" name = "Constructors"/>
					<section id = "4.3" name = "SkipPageException"/>
					<section id = "4.3.1" name = "Constructors"/>
				</sections>
			</chapter>
			<chapter id = "12" name = "Tag Extension API">
				<sections>
					<section id = "1" name = "Classic Tag Handlers"/>
					<section id = "1.1" name = "Tag"/>
					<section id = "1.1.1" name = "Fields"/>
					<section id = "1.1.2" name = "Methods"/>
					<section id = "1.2" name = "IterationTag"/>
					<section id = "1.2.1" name = "Fields"/>
					<section id = "1.2.2" name = "Methods"/>
					<section id = "1.3" name = "TryCatchFinally"/>
					<section id = "1.3.1" name = "Methods"/>
					<section id = "1.4" name = "TagSupport"/>
					<section id = "1.4.1" name = "Fields"/>
					<section id = "1.4.2" name = "Constructors"/>
					<section id = "1.4.3" name = "Methods"/>
					<section id = "2" name = "Tag Handlers that want Access to their Body Content"/>
					<section id = "2.1" name = "BodyContent"/>
					<section id = "2.1.1" name = "Constructors"/>
					<section id = "2.1.2" name = "Methods"/>
					<section id = "2.2" name = "BodyTag"/>
					<section id = "2.2.1" name = "Fields"/>
					<section id = "2.2.2" name = "Methods"/>
					<section id = "2.3" name = "BodyTagSupport"/>
					<section id = "2.3.1" name = "Fields"/>
					<section id = "2.3.2" name = "Constructors"/>
					<section id = "2.3.3" name = "Methods"/>
					<section id = "3" name = "Dynamic Attributes"/>
					<section id = "3.1" name = "DynamicAttributes"/>
					<section id = "3.1.1" name = "Methods"/>
					<section id = "4" name = "Annotated Tag Handler Management Example"/>
					<section id = "5" name = "Cooperating Actions"/>
					<section id = "6" name = "Simple Tag Handlers"/>
					<section id = "6.1" name = "SimpleTag"/>
					<section id = "6.1.1" name = "Methods"/>
					<section id = "6.2" name = "JspFragment"/>
					<section id = "6.2.1" name = "Methods"/>
					<section id = "6.3" name = "TagAdapter"/>
					<section id = "6.3.1" name = "Constructors"/>
					<section id = "6.3.2" name = "Methods"/>
					<section id = "7" name = "JSP Fragments"/>
					<section id = "7.1" name = "JspFragment"/>
					<section id = "7.1.1" name = "Methods"/>
					<section id = "8" name = "Example Simple Tag Handler Secnario"/>
					<section id = "9" name = "Translation-time Classes"/>
					<section id = "9.1" name = "TagLibraryInfo"/>
					<section id = "9.1.1" name = "Fields"/>
					<section id = "9.1.2" name = "Constructors"/>
					<section id = "9.1.3" name = "Methods"/>
					<section id = "9.2" name = "TagInfo"/>
					<section id = "9.2.1" name = "Fields"/>
					<section id = "9.2.2" name = "Constructors"/>
					<section id = "9.2.3" name = "Methods"/>
					<section id = "9.3" name = "TagAttributeInfo"/>
					<section id = "9.3.1" name = "Fields"/>
					<section id = "9.3.2" name = "Constructors"/>
					<section id = "9.3.3" name = "Methods"/>
					<section id = "9.4" name = "PageData"/>
					<section id = "9.4.1" name = "Constructors"/>
					<section id = "9.4.2" name = "Methods"/>
					<section id = "9.5" name = "TagLibraryValidator"/>
					<section id = "9.5.1" name = "Constructors"/>
					<section id = "9.5.2" name = "Methods"/>
					<section id = "9.6" name = "ValidationMessage"/>
					<section id = "9.6.1" name = "Constructors"/>
					<section id = "9.6.2" name = "Methods"/>
					<section id = "9.7" name = "TagExtraInfo"/>
					<section id = "9.7.1" name = "Constructors"/>
					<section id = "9.7.2" name = "Methods"/>
					<section id = "9.8" name = "TagData"/>
					<section id = "9.8.1" name = "Fields"/>
					<section id = "9.8.2" name = "Constructors"/>
					<section id = "9.8.3" name = "Methods"/>
					<section id = "9.9" name = "VariableInfo"/>
					<section id = "9.9.1" name = "Fields"/>
					<section id = "9.9.2" name = "Constructors"/>
					<section id = "9.9.3" name = "Methods"/>
					<section id = "9.10" name = "TagVariableInfo"/>
					<section id = "9.10.1" name = "Constructors"/>
					<section id = "9.10.2" name = "Methods"/>
				</sections>
			</chapter>
			<chapter id = "13" name = "Expression Language API">
				<sections>
					<section id = "1" name = "Expression Evaluator"/>
					<section id = "1.1" name = "ExpressionEvaluator"/>
					<section id = "1.1.1" name = "Methods"/>
					<section id = "1.2" name = "Expression"/>
					<section id = "1.2.1" name = "Methods"/>
					<section id = "1.3" name = "VariableResolver"/>
					<section id = "1.3.1" name = "Methods"/>
					<section id = "1.4" name = "FunctionMapper"/>
					<section id = "1.4.1" name = "Methods"/>
					<section id = "2" name = "Exceptions"/>
					<section id = "2.1" name = "ELException"/>
					<section id = "2.1.1" name = "Constructors"/>
					<section id = "2.1.2" name = "Methods"/>
				</sections>
			</chapter>
		</chapters>
	</location-names>
	<assertions>
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>_NUMBER_</id>
			<description>It is illegal JSP syntax, which must result in a translation error, to use both an XML element attribute and a &lt;jsp:attribute> standard action to pass the value of the same attribute.</description>
			<location chapter = "1" section = "3.6"/>
		</assertion>
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>_NUMBER_</id>
			<description>A translation error will result if the custom action invocation has &lt;jsp:attribute> elements but does not define the body using a &lt;jsp:body> element.</description>
			<location chapter = "1" section = "3.6"/>
		</assertion>
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>_NUMBER_</id>
			<description>White space within the body text of a document is not significant, but is preserved.</description>
			<location chapter = "1" section = "3.8"/>
		</assertion>
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "false">
			<id>_NUMBER_</id>
			<description>Fatal translation failures shall result in the failure of subsequent client requests for the translation target with the appropriate error specification: For HTTP protocols the error status code 500 (Server Error) is returned.</description>
			<location chapter = "1" section = "4.1"/>
			<comment>While this could be deemed as testable, there are several areas in the spec that state a fatal translation error will occur in a specific case.  That is where this assertion will be exercised.</comment>
		</assertion>
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>_NUMBER_</id>
			<description>HTML comments present within a particular translation unit are treated as uninterpreted template text by the JSP container.</description>
			<location chapter = "1" section = "5.1"/>
		</assertion>
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>_NUMBER_</id>
			<description>The body content of a JSP comment is ignored completely.</description>
			<location chapter = "1" section = "5.1"/>
		</assertion>
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>_NUMBER_</id>
			<description>For JSP's in standard syntax, a literal %> is quoted by %\>, a literal &lt;% is quoted by &lt;\%, a single quote (') is quotes as \', a double quite (") is quoted as \", a backslash (\) is quoted as \\, additionally, the entities \' and \" are available to describe single and double quotes.</description>
			<location chapter = "1" section = "6"/>
			<comment>Use the examples in JSP.1.6 to create a test.</comment>
		</assertion>
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>_NUMBER_</id>
			<description>Objects with page scope are accessible only within the target page they are created.  All references to such an object shall be released after the response is sent back to the client from the JSP page or the request is forwareded somwhere else.  References to objects with page scope are stored in the 'pageContext' object.</description>
			<location chapter = "1" section = "8.2"/>
		</assertion>
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>_NUMBER_</id>
			<description>Objects with request scope are accessible from pages processing the same request where they were created.  References to the object shall be released after the request is processed.  In particular, if the request is forwarded to a resource in the same runtime, the object is still reachable.  References to objects with request scope are stored in the 'request' object.</description>
			<location chapter = "1" section = "8.2"/>
		</assertion>
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>_NUMBER_</id>
			<description>Objects with session scope are accessible from pages processing requests that in the same session as the one in which they were created.  It is not legal to define an object with session scope from within a page that is not session-aware.  All references to the object shall be released after the associated session ends.  References to objects with session scope are stored in the 'session' object associated with the page activation.</description>
			<location chapter = "1" section = "8.2"/>
		</assertion>
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>_NUMBER_</id>
			<description>Objects with application scope are accessible from pages processing requests that are in the same application as the one in which they were created.  Objects with application scope can be defined (and reached) from pages that are not session-aware.  References to objects with application scope are stored in the 'application' object associated with a page activation.  The 'application' object is the servlet context obtained from the servlet configuration object.  All references to the object shall be released when the runtime environment reclaims the ServletContext.</description>
			<location chapter = "1" section = "8.2"/>
		</assertion>
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>_NUMBER_</id>
			<description>The 'request' implicit object is an instance of javax.servlet.ServletRequest; if the protocol used is HTTP, then the request object is an instance of javax.servlet.http.HttpServletRequest (request scope).</description>
			<location chapter = "1" section = "8.3"/>
		</assertion>
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>_NUMBER_</id>
			<description>The 'response' implicit object is an instance of javax.servlet.ServletResponse; if the protocol used is HTTP, then the response object is an instance of javax.servlet.http.HttpServletResponse (page scope)</description>
			<location chapter = "1" section = "8.3"/>
		</assertion>
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>_NUMBER_</id>
			<description>The 'pageContext' implicit object is an instance of javax.servlet.jsp.PageContext (page scope).</description>
			<location chapter = "1" section = "8.3"/>
		</assertion>
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>_NUMBER_</id>
			<description>The 'session' implicit object is an instance of javax.servlet.http.HttpSession and is only valid for HTTP protocols (session scope).</description>
			<location chapter = "1" section = "8.3"/>
		</assertion>
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>_NUMBER_</id>
			<description>The 'application' implicit object is an instance of javax.servlet.ServletContext (same object as that returned from getServletConfig().getContext(); application scope).</description>
			<location chapter = "1" section = "8.3"/>
		</assertion>
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>_NUMBER_</id>
			<description>The 'exception' implicit object is an instance of java.lang.Throwable (page scope) and is only available in errro pages.</description>
			<location chapter = "1" section = "8.3"/>
		</assertion>
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>_NUMBER_</id>
			<description>White space may or may not be present after '&lt;@%' and before '%>' within JSP directives.</description>
			<location chapter = "1" section = "10"/>
		</assertion>
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>_NUMBER_</id>
			<description>Directives do not produce any output into the current 'out' stream.</description>
			<location chapter = "1" section = "10"/>
		</assertion>
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>_NUMBER_</id>
			<description>The page directive can appear multiple times, and is position independent within a given translation unit.</description>
			<location chapter = "1" section = "10.1"/>
		</assertion>
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>_NUMBER_</id>
			<description>A translation error will occur if the page directive defines duplicate attribute/values within a give translation unit, with the exception of the import attribute.</description>
			<location chapter = "1" section = "10.1"/>
			<comment>NOTE:  This may change.  Reference PageDirectiveUniqueAttr validity constraint.</comment>
		</assertion>
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>_NUMBER_</id>
			<description>The 'isScriptingEnabled' attribute of the page directive, if true, allows the presence of scripting elements (scriptlets, expressions, declarations) within a given translation unit.</description>
			<location chapter = "1" section = "10.1"/>
		</assertion>
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>_NUBMER_</id>
			<description>The 'isScriptingEnabled' attribute of the page directive, if false, disallows the presence of scripting elements (scriptlets, expressions, declarations) within a given translation unit and will generate a translation error if they are present.</description>
			<location chapter = "1" section = "10.1"/>
		</assertion>
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>_NUMBER_</id>
			<description>The default value for 'isScriptingEnabled' of the page directive, if not specified, is true.</description>
			<location chapter = "1" section = "10.1"/>
		</assertion>
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>_NUMBER_</id>
			<description>The 'isELEnabled' attribute of the page directive, if true, directs the container to evaluate EL expressions.</description>
			<location chapter = "1" section = "10.1"/>
		</assertion>
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>_NUMBER_</id>
			<description>The 'isELEnabled' attribute of the page directive , if false, will result in EL expressions not being evaluated by the container.</description>
			<location chapter = "1" section = "10.1"/>
		</assertion>
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>_NUMBER_</id>
			<description>If the JSP is part of a Web application that is using a Servlet 2.3 deployment descriptor, the default value for the 'isELEnabled' attribute of the page directive is false.</description>
			<location chapter = "1" section = "10.1"/>
			<comment>Reference section JSP.2.2.4 Deactivating EL Evaluation</comment>
		</assertion>
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>_NUMBER_</id>
			<description>If the JSP is part of a Web application that is using a Servlet 2.4 deployment descriptor, the default value for the 'isELEnabled' attribute of the page directive is true.</description>
			<location chapter = "1" section = "10.1"/>
			<comment>Reference section JSP.2.2.4 Deactivating EL Evaluation</comment>
		</assertion>
		<assertion required = "true" impl-spec = "true" defined-by = "technology" status = "active" testable = "false">
			<id>_NUMBER_</id>
			<description>All scripting languages, specifiable by the page directive's 'language' attribute, must provide some implicit objects that a JSP page author can use in declarations, scriptlets, and expressions (see Section JSP.1.3.8 for list of available implicit objects)</description>
			<location chapter = "1" section = "10.1"/>
		</assertion>
		<assertion required = "true" impl-spec = "true" defined-by = "technology" status = "active" testable = "false">
			<id>_NUMBER_</id>
			<description>All scripting languages, specifiable by the page directive's 'language' attribute, must expose the Java technology object model to the script environment, especially implicit variables, JavaBeans components properties, and public methods.</description>
			<location chapter = "1" section = "10.1"/>
		</assertion>
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>_NUMBER_</id>
			<description>It is a fatal translation error for a page directive with a non-"java" language attribute to appear after the first scripting has been encountered.</description>
			<location chapter = "1" section = "10.1"/>
		</assertion>
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>_NUMBER_</id>
			<description>The only required scripting language value for the 'language' attribute is "java".</description>
			<location chapter = "1" section = "10.1"/>
		</assertion>
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>_NUMBER_</id>
			<description>The 'extends' attribute of the page directive specifies a fully qualified Java programming language class name, that names the superclass of the class to which this JSP page is transformed</description>
			<location chapter = "1" section = "10.1"/>
		</assertion>
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>_NUMBER_</id>
			<description>The 'import' attribute of the page directive specifies the fully qualified Java programming language type name denoting a particular type, or of a package name following by the ".*" string, denoting all the public types declared in that package, that shall be imorted by the translated JSP page implementation and is thus available to the scripting language.</description>
			<location chapter = "1" section = "10.1"/>
		</assertion>
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>_NUMBER_</id>
			<description>The default import list for a JSP page is java.lang.*, javax.servlet.*, javax.servlet.jsp.*, javax.servlet.http.*</description>
			<location chapter = "1" section = "10.1"/>
		</assertion>
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>_NUMBER_</id>
			<description>The 'session' attribute of the page directive, when true, indicates that the JSP page requires participation in an HTTP session.</description>
			<location chapter = "1" section = "10.1"/>
		</assertion>
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>_NUMBER_</id>
			<description>The 'session' attribute of the page directive, when false, indicates that the JSP page does not participate in an HTTP session; the 'session' implicit object is not available to the page, and any reference to it within the translation unit will result in a translation error.</description>
			<location chapter = "1" section = "10.1"/>
		</assertion>
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>_NUMBER_</id>
			<description>If the 'session' attribute of the page directive is not specified by a page directive, then the page will, by default, participate in an HTTP session (default value of true).</description>
			<location chapter = "1" section = "10.1"/>
		</assertion>
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>_NUMBER_</id>
			<description>If the 'buffer' attribute of the page directive is not specified, no buffering will be performed and all output will be written directly through to the ServletResponse PrintWriter.</description>
			<location chapter = "1" section = "10.1"/>
		</assertion>
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>_NUMBER_</id>
			<description>The size value specified by the 'buffer' attribute of the page directive must be in kilobytes, and the suffix "kb" is mandatory.</description>
			<location chapter = "1" section = "10.1"/>
			<comment>NOTE:  Spec is unclear as to what happens if a different suffix is used, or is not present.  Most likely a translation error.</comment>
		</assertion>
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>_NUMBER_</id>
			<description>The container must allocate a buffer at least as large as that specified by the 'buffer' attribute of the page directive.</description>
			<location chapter = "1" section = "10.1"/>
		</assertion>
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>_NUMBER_</id>
			<description>The default buffer size of 8kb will be used if the 'buffer' attribute of the page directive is not specified.</description>
			<location chapter = "1" section = "10.1"/>
		</assertion>
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>_NUMBER_</id>
			<description>If the 'autoFlush' attribute of the page directive is true, the output will be automatically flushed when the buffer is filled.</description>
			<location chapter = "1" section = "10.1"/>
		</assertion>
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>_NUMBER_</id>
			<description>If the 'autoFlush' attribute of the page directive is false, an exception will be raised to indicate a buffer overflow.</description>
			<location chapter = "1" section = "10.1"/>
		</assertion>
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>_NUMBER_</id>
			<description>It is illegal to set the 'autoFlush' attribute of the page directive to false, if the 'buffer' attribute is set to none.</description>
			<location chapter = "1" section = "10.1"/>
			<comment>NOTE:  This section needs to be clarified in the spec.  Illegal most likely, in this case, means a translation error, but this should be clearly spelled out.</comment>
		</assertion>
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>_NUMBER_</id>
			<description>If the 'isThreadSafe' attribute of the page directive is false, the container must serialize requests to the JSP (it should behave like an STM servlet).</description>
			<location chapter = "1" section = "10.1"/>
			<comment>Cannot test isThreadSafe="true" as the keyword 'may' is present.  An implementation could potentially serialize requests in this case as well....thought I don't know why they would.</comment>
		</assertion>
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>_NUMBER_</id>
			<description>The 'info' attribute of the page directive specifies an arbitrary string that is incorporated into the translated page, that can subsequently be obtained from the page's implementation of Servlet.getServletInfo().</description>
			<location chapter = "1" section = "10.1"/>
		</assertion>
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>_NUMBER_</id>
			<description>The 'isErrorPage' attribute of the page directive. when true, will cause the implicit script language variable "exception" to be defined and its value is a reference to the offending Throwable from the source JSP page in error.</description>
			<location chapter = "1" section = "10.1"/>
		</assertion>
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>_NUMBER_</id>
			<description>If the 'isErrorPage' attribute of the page directive is defined as false, then the implicit script language variable "exception" will not be available, and any such reference to this variable will result in a translation error.</description>
			<location chapter = "1" section = "10.1"/>
		</assertion>
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>_NUMBER_</id>
			<description>The 'errorPage' attribute of the page directive, specifies the URL, either page-relative or context-relative, of a resource to which any Java programming language Throwable object(s) thrown but not caught by the page implementation are forwarded for error processing.  The following request attributes will be made available within the error page:</description>
			<location chapter = "1" section = "10.1"/>
			<sub-assertions>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>javax.servlet.jsp.jspException - throw Throwable object of the offending exception (for backwards compatibility with JSP 1.2)</description>
					<location chapter = "1" section = "4.3"/>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>javax.servlet.err.exception - as per the Servlet specification.</description>
					<location chapter = "1" section = "4.3"/>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>javax.servlet.error.status_code - as per the Servlet specification</description>
					<location chapter = "1" section = "4.3"/>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>javax.servlet.error.exception_type - as per the Servlet specification.</description>
					<location chapter = "1" section = "4.3"/>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>javax.servlet.err.message - as per the Servlet specification.</description>
					<location chapter = "1" section = "4.3"/>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>javax.servlet.error.request_uri - as per the Servlet specification.</description>
					<location chapter = "1" section = "4.3"/>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>javax.servlet.error.servlet_name - as per the Servlet specification.</description>
					<location chapter = "1" section = "4.3"/>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>An instance of javax.servlet.jsp.ErrorData must be provided to the error page.</description>
					<location chapter = "1" section = "4.3"/>
				</assertion>
			</sub-assertions>
		</assertion>
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>_NUMBER_</id>
			<description>If the 'errorPage' attribute of the page directive is defined, it will take presendence over any error pages defined in the web application's deployment descriptor.</description>
			<location chapter = "1" section = "10.1"/>
		</assertion>
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>_NUMBER_</id>
			<description>The character encoding (Content-Type response header) can be in the form of TYPE, or TYPE; Charset=CHARSET, with an optional white space after the ';'.  Charset, if present, must be the IANA value for a character encoding.  Similarly, if TYPE is a MIME type, see the IANA registry for values.</description>
			<location chapter = "1" section = "10.1"/>
		</assertion>
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>_NUMBER_</id>
			<description>The default Content-Type for JSP Pages in classic syntax is "text/html".</description>
			<location chapter = "1" section = "10.1"/>
		</assertion>
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>_NUMBER_</id>
			<description>If a charset portion of the value provided to the 'contentType' attribute is not specified, but the page encoding for the JSP page is specified, then the charset used will be that of the specified page encoding.</description>
			<location chapter = "1" section = "10.1"/>
		</assertion>
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>_NUMBER_</id>
			<description>If a charset is not provided as part of the 'contentType' attribute value, and the page encoding does not specifiy a type, then the default charset is ISO-8859-1 for JSP pages in classic syntax.</description>
			<location chapter = "1" section = "10.1"/>
		</assertion>
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>_NUMBER_</id>
			<description>If a charset is not provided as part of the 'contentType' attribute value, and the page encoding does not specifiy a type, then the default charset is UTF-8 for JSP pages in XML syntax.</description>
			<location chapter = "1" section = "10.1"/>
			<comment>Would UTF-16 be valid as well?</comment>
		</assertion>
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>_NUMBER_</id>
			<description>The 'pageEncoding' attribute of the page directive specifies the character encoding of the page.  The value is in the form of CHARSET which my be the IANA value for a character encoding.  If no 'pageEncoding' attribute is specified, the default of ISO-8859-1 will be used.</description>
			<location chapter = "1" section = "10.1"/>
			<comment>What about the default encoding for JSP pages in XML syntax?</comment>
		</assertion>
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>_NUMBER_</id>
			<description>It is a translation error for the taglib directive to appear after actions that use the prefix specified by the directive.</description>
			<location chapter = "1" section = "10.4"/>
		</assertion>
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>_NUMBER_</id>
			<description>The 'uri' attribute of the taglib directive specifies either an absolute or relative URI that uniquely identifies the tag library descriptor associated with this prefix.</description>
			<location chapter = "1" section = "10.4"/>
			<comment>URI and taglibrary determination is defined in Chapter 7</comment>
		</assertion>
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>_NUMBER_</id>
			<description>The 'tagdir' attribute of the taglib directive indicates that the specified prefix is to be used to identify tag extensions installed in the /WEB-INF/tags directory or a subdirectory.</description>
			<location chapter = "1" section = "10.4"/>
			<comment>Refer to JSP8.4.3 for more details.</comment>
		</assertion>
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>_NUMBER_</id>
			<description>A translation error must occur if the value provided to the 'tagdir' attribute of the taglib directive doesn't start with '/WEB-INF/tags' and point to a directory that exists within the web application.</description>
			<location chapter = "1" section = "10.4"/>
		</assertion>
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>_NUMBER_</id>
			<description>A translation error must occur if the 'prefix' attribute of the taglib directive is not present.</description>
			<location chapter = "1" section = "10.4"/>
		</assertion>
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>_NUMBER_</id>
			<description>A translation error must occur if both the 'tagdir' and 'uri' attributes are present in the same taglib directive.</description>
			<location chapter = "1" section = "10.4"/>
			<comment>Refer to EBNF</comment>
		</assertion>
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>_NUMBER_</id>
			<description>The 'prefix' attribute of the taglib directive is used to distinguish a custom action, e.g &lt;myPrefix:myTag>.</description>
			<location chapter = "1" section = "10.4"/>
		</assertion>
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "false">
			<id>_NUMBER_</id>
			<description>The value provided to the 'prefix' attribute of the taglib directive must follow the naming convention specified in the XML namespaces specification.</description>
			<location chapter = "1" section = "10.4"/>
			<comment>Marked as not testable as there it could be container specific as to what happens in this case (most likely a translation error if they did check).</comment>
		</assertion>
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "false">
			<id>_NUMBER_</id>
			<description>It is illegal to provide an empty prefix to the taglib directive.</description>
			<location chapter = "1" section = "10.4"/>
			<comment>Marked as not testable.  What exactly does illegal mean?  Again, most likely a translation time issue, but would be good to have clarity.</comment>
		</assertion>
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>_NUMBER_</id>
			<description>A translation error will occur if the tag name provided in the custom action isn't found in the taglibrary designated by the prefix.</description>
			<location chapter = "1" section = "10.4"/>
		</assertion>
		<assertion required = "false" impl-spec = "true" defined-by = "technology" status = "active" testable = "false">
			<id>_NUMBER_</id>
			<description>A JSP container can include a mechanism for being notified if an included file changes, so the container can recompile the JSP page.  However, the JSP 2.0 specification does not have a way of directing the JSP container that included files have changed.</description>
			<location chapter = "1" section = "10.5"/>
		</assertion>
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>_NUMBER_</id>
			<description>The 'file' attribute of the include directive specifies the resource to be imported either relative to web appliation context path, or relative to the page performing the include.</description>
			<location chapter = "1" section = "10.5"/>
		</assertion>
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>_NUMBER_</id>
			<description>The include directive includes content at translation time meaning the bytes of the included resource are directly inserted into the page.  </description>
			<location chapter = "1" section = "10.5"/>
			<comment>Could test this by having a resource that checks for an attribute in the request, since it's included in place without including the result, the attribute would be null..</comment>
		</assertion>
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "false">
			<id>_NUMBER_</id>
			<description>All JSP containers must support scripting elements based on the Java programming language.</description>
			<location chapter = "1" section = "12"/>
			<comment>Marked as untestable as this is a blanket assertion that covers who the spec is currently written.</comment>
		</assertion>
		<assertion required = "true" impl-spec = "true" defined-by = "technology" status = "active" testable = "false">
			<id>_NUMBER_</id>
			<description>Any other scripting languages that may be supported by a JSP container must support: The manipulation of Java objects; Invocation of methods on Java objects; Catching of Java language excepitons.</description>
			<location chapter = "1" section = "12"/>
		</assertion>
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>_NUMBER_</id>
			<description>A declaration (&lt;% DECL_BODY %>) must be a complete declarative statment, or sequence thereof, according to the syntax of the scripting language specified, otherwise a translation error will occur.</description>
			<location chapter = "1" section = "12.1"/>
		</assertion>
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>_NUMBER_</id>
			<description>Declartaions do not produce any output into the current out stream.</description>
			<location chapter = "1" section = "12.1"/>
		</assertion>
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>_NUMBER_</id>
			<description>Declarations are initialized when the JSP page is initialized and are made available to other delcarations, scriptlets, and expressions.</description>
			<location chapter = "1" section = "12.1"/>
		</assertion>
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>_NUMBER_</id>
			<description>Scriptlets (&lt;% SCRIPTLET_BODY %>) can contain any code framents that are valid for the scripting language specified by the 'language' attribute of the page directive, and are executed at request time in the order that they appear on the JSP page.</description>
			<location chapter = "1" section = "12.2"/>
		</assertion>
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>_NUMBER_</id>
			<description>An expression element in a JSP page is a scripting language expression that is evaluated and the result is coerced to a String and emitted into the current JspWriter (out) object.</description>
			<location chapter = "1" section = "12.3"/>
		</assertion>
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "false">
			<id>_NUMBER_</id>
			<description>If the result of the expression cannot be coerced to a String, the following must happen: If the problem is detected at translation time, a translation time error shall occur.  If the coercion cannot be detected during translation, a ClassCaseException shall be raised at request time.</description>
			<location chapter = "1" section = "12.3"/>
			<comment>This detection mechanism will be container dependant.  Cannot test.</comment>
		</assertion>
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>_NUMBER_</id>
			<description>Expressions are evaluated left to right in the JSP page.  </description>
			<location chapter = "1" section = "12.3"/>
		</assertion>
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>_NUMBER_</id>
			<description>If an expression appears in more than one run-time attribute, they are evaluated left-to-right in the element.</description>
			<location chapter = "1" section = "12.3"/>
		</assertion>
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>_NUMBER_</id>
			<description>A translation error will occur if the expression is not a complete expression in the scripting language in which it is written.</description>
			<location chapter = "1" section = "12.3"/>
		</assertion>
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>_NUMBER_</id>
			<description>Request-time attribute values in the form of '&lt;%= scriptlet_expr %>' are only usable by actions, and cannot be used in directives.</description>
			<location chapter = "1" section = "14.1"/>
			<comment>Mark, you wanted to revisit this....</comment>
		</assertion>
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>_NUMBER_</id>
			<description>A translation error will occur if a request-time attribute exception does not appear by itself (multiple expressions, and mixing of expressions and string constands are not permitted).</description>
			<location chapter = "1" section = "14.1"/>
			<comment>I assume this will be a translation error.  Correct if necessary.</comment>
		</assertion>
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>_NUMBER_</id>
			<description>Any attempt to provide an attribute value via a request-time expression that doesn't accept request-time expressions, will result in a translation error.</description>
			<location chapter = "1" section = "14.1"/>
		</assertion>
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "false">
			<id>_NUMBER_</id>
			<description>A type conversion failure for a static attribute can lead to a failure at either request or translation time.</description>
			<location chapter = "1" section = "14.2.1"/>
		</assertion>
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>_NUMBER_</id>
			<description>Conversion of string values to a JavaBean property is done via setAtText(string-literal).</description>
			<location chapter = "1" section = "14.2.1"/>
		</assertion>
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>_NUMBER_</id>
			<description>Conversion of string values to boolean or Boolean is performed as indicated in java.lang.Boolean.valueOf(String).</description>
			<location chapter = "1" section = "14.2.1"/>
		</assertion>
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>_NUMBER_</id>
			<description>Conversion of string values to byte or Byte is performed as indiciated in java.lang.Byte.valueOf(String).</description>
			<location chapter = "1" section = "14.2.1"/>
		</assertion>
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>_NUMBER_</id>
			<description>Conversion of string values to char or Character is performed as indicated in String.charAt(0).</description>
			<location chapter = "1" section = "14.2.1"/>
		</assertion>
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>_NUMBER_</id>
			<description>Conversion of string values to double or Double is performed as indiciated in java.lang.Double.valueOf(String).</description>
			<location chapter = "1" section = "14.2.1"/>
		</assertion>
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>_NUMBER_</id>
			<description>Conversion of string values to int or Integer is performed as indiciated in java.lang.Integer.valueOf(String).</description>
			<location chapter = "1" section = "14.2.1"/>
		</assertion>
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>_NUMBER_</id>
			<description>Conversion of string values to float or Float is performed as indicated in java.lang.Float.valueOf(String).</description>
			<location chapter = "1" section = "14.2.1"/>
		</assertion>
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>_NUMBER_</id>
			<description>Conversion of string values to long or Long is perfomed as indicated in java.lang.Long.valueOf(String).</description>
			<location chapter = "1" section = "14.2.1"/>
		</assertion>
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>_NUMBER_</id>
			<description>Conversion of string values to short or Short is performed as indicated in java.lang.Short.valueOf(String).</description>
			<location chapter = "1" section = "14.2.1"/>
		</assertion>
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>_NUMBER_</id>
			<description>Conversion of string values to Object is performed as if new String(string).</description>
			<location chapter = "1" section = "14.2.1"/>
		</assertion>
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>_NUMBER_</id>
			<description>No type conversion is perfomed against requst-time expressions, they are provided to the element as is.</description>
			<location chapter = "1" section = "14.2.2"/>
			<comment>This seems to indicate that if the underlying attribute being set by this request-time expression doesn't match the type provided by the expression, a runtime exception will be thrown.  Good negative test case.</comment>
		</assertion>
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>_NUMBER_</id>
			<description>EL is invoked via the construct ${expr}.</description>
			<location chapter = "2" section = "1"/>
		</assertion>
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>_NUMBER_</id>
			<description>If EL is being evaluated by the container, a translation error will occur if an EL expression is provided as a value to an attribute that does not accept request-time expressions.</description>
			<location chapter = "2" section = "2.1"/>
		</assertion>
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>_NUMBER</id>
			<description>EL expressions will not be evaluated if the tag body is 'tagdependent'.</description>
			<location chapter = "2" section = "2.2"/>
		</assertion>
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>_NUMBER_</id>
			<description>A container must support EL expressions provided in template text be it inside the body of a custom or standard action, or in template text outside of any action.</description>
			<location chapter = "2" section = "2.2"/>
		</assertion>
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>_NUMBER_</id>
			<description>The boolean literals in the EL are 'true' and 'false'</description>
			<location chapter = "2" section = "3.2"/>
		</assertion>
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>_NUMBER_</id>
			<description>EL integer literals are equivelant to Java integer literals.</description>
			<location chapter = "2" section = "3.2"/>
			<comment>See IntergerLiteral production in JSP.2.13</comment>
		</assertion>
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>_NUMBER_</id>
			<description>EL floating point literals are equivelant to Java floating point literals.</description>
			<location chapter = "2" section = "3.2"/>
			<comment>See FloatingPointLiteral production in JSP.2.13</comment>
		</assertion>
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>_NUMBER_</id>
			<description>String literals are encapsulated by either double or single quotes (''' or '"' respectively).  Quotes need to be escape in the String if the string value enclosed is the same type of quote.  Escaping definitions are the same as those defined in JSP.1.6.</description>
			<location chapter = "2" section = "3.2"/>
		</assertion>
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>_NUMBER_</id>
			<description>The EL null literal is defined as 'null'.</description>
			<location chapter = "2" section = "3.2"/>
		</assertion>
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>_NUMBER_</id>
			<description>The EL follows ECMAScript in unifying the treatment of the "." and "[]" operators.  To evaluate expr-a[expr-b]:</description>
			<location chapter = "2" section = "3.4"/>
			<sub-assertions>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>Evaluate expr-a into value-a, if value-a is null, return null.</description>
					<location chapter = "2" section = "3.4"/>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>Evaluate expr-b into value-b, if value-b is null, return null.</description>
					<location chapter = "2" section = "3.4"/>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>If value-a is a Map, and if !value-a.containsKey(value-b) then return null, otherwise, return the value of value-a.get(value-b).</description>
					<location chapter = "2" section = "3.4"/>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>If value-a is a List or array:</description>
					<location chapter = "2" section = "3.4"/>
					<sub-assertions>
						<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
							<id>_NUMBER_</id>
							<description>If value-b cannot be coerced into an int (using coercion rules) an error occurs.</description>
							<location chapter = "2" section = "3.4"/>
						</assertion>
						<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
							<id>_NUMBER_</id>
							<description>If value-a.get(value-b) or Array.get(value-a, value-b) throws an ArrayIndexOutofBoundException or IndexOutOfBoundsException, return null.</description>
							<location chapter = "2" section = "3.4"/>
						</assertion>
						<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
							<id>_NUMBER_</id>
							<description>If value-a.get(value-b) or Array.get(value-a, value-b) throws other exception, error.</description>
							<location chapter = "2" section = "3.4"/>
						</assertion>
						<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
							<id>_NUMBER_</id>
							<description>Otherwise, return value-a.get(value-b) or Array.get(value-a, value-b) as appropriate.</description>
							<location chapter = "2" section = "3.4"/>
						</assertion>
					</sub-assertions>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>Otherwise (a JavaBeans object, coerce value-b to String</description>
					<location chapter = "2" section = "3.4"/>
					<sub-assertions>
						<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
							<id>_NUMBER_</id>
							<description>If value-b is a readable property of value-a, return the result of the getter call.</description>
							<location chapter = "2" section = "3.4"/>
						</assertion>
						<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
							<id>_NUMBER_</id>
							<description>If value-b is not a readable property of value-a, return error.</description>
							<location chapter = "2" section = "3.4"/>
						</assertion>
						<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
							<id>_NUMBER</id>
							<description>If the getter call throws an Exception: error.</description>
							<location chapter = "2" section = "3.4"/>
						</assertion>
					</sub-assertions>
				</assertion>
			</sub-assertions>
		</assertion>
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>_NUMBER_</id>
			<description>Binary operators - A { +,-,* } B</description>
			<location chapter = "2" section = "3.5.1"/>
			<sub-assertions>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>If A or B is null, return 0</description>
					<location chapter = "2" section = "3.5.1"/>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>If A or B is Float, Double, or a String containing ".", "e", or "E", coerce both A and B to Double and apply operator.</description>
					<location chapter = "2" section = "3.5.1"/>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>Otherwise coerce both A and B to Long and apply operator.</description>
					<location chapter = "2" section = "3.5.1"/>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>If application of operator against A and B results in an exception, error.</description>
					<location chapter = "2" section = "3.5.1"/>
				</assertion>
			</sub-assertions>
		</assertion>
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>_NUMBER_</id>
			<description>Binary operator - A { / or div } B</description>
			<location chapter = "2" section = "3.5.2"/>
			<sub-assertions>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>If A or B is null, return 0</description>
					<location chapter = "2" section = "3.5.2"/>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>Coerce both A and B to Double and apply operator.</description>
					<location chapter = "2" section = "3.5.2"/>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>If application of operator against A and B results in an exception, error.</description>
					<location chapter = "2" section = "3.5.2"/>
				</assertion>
			</sub-assertions>
		</assertion>
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>_NUMBER_</id>
			<description>Binary Operator - A { % or mod } B</description>
			<location chapter = "2" section = "3.5.3"/>
			<sub-assertions>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>If application of operator against A and B results in an exception, error.</description>
					<location chapter = "2" section = "3.5.3"/>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>Otherwise coerce both A and B to Long and apply operator.</description>
					<location chapter = "2" section = "3.5.3"/>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>If A or B is Float, Double, or a String containing ".", "e", or "E", coerce both A and B to Double and apply operator.</description>
					<location chapter = "2" section = "3.5.3"/>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>If A or B is null, return 0</description>
					<location chapter = "2" section = "3.5.3"/>
				</assertion>
			</sub-assertions>
		</assertion>
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>_NUMBER_</id>
			<description>Unary minus operator -  -A</description>
			<location chapter = "2" section = "3.5.4"/>
			<sub-assertions>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>If A is null, return 0</description>
					<location chapter = "2" section = "3.5.4"/>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>If A is a String:</description>
					<location chapter = "2" section = "3.5.4"/>
					<sub-assertions>
						<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
							<id>_NUMBER_</id>
							<description>If A or B is Float, Double, or a String containing ".", "e", or "E", coerce both A and B to Double and apply operator.</description>
							<location chapter = "2" section = "3.5.4"/>
						</assertion>
						<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
							<id>_NUMBER_</id>
							<description>Otherwise coerce both A and B to Long and apply operator.</description>
							<location chapter = "2" section = "3.5.4"/>
						</assertion>
						<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
							<id>_NUMBER_</id>
							<description>If application of operator against A and B results in an exception, error.</description>
							<location chapter = "2" section = "3.5.4"/>
						</assertion>
					</sub-assertions>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>If A is Byte, Short, Integer, Long, Float, Double:</description>
					<location chapter = "2" section = "3.5.4"/>
					<sub-assertions>
						<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
							<id>_NUMBER_</id>
							<description>retain the type and apply the operator.</description>
							<location chapter = "2" section = "3.5.4"/>
						</assertion>
						<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
							<id>_NUMBER_</id>
							<description>If application of operator results in exception, error.</description>
							<location chapter = "2" section = "3.5.4"/>
						</assertion>
					</sub-assertions>
				</assertion>
			</sub-assertions>
		</assertion>
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>_NUMBER_</id>
			<description>Relational operators - A { &lt;,>,&lt;=,=>,lt,gt,le,ge } B</description>
			<location chapter = "2" section = "3.5.6"/>
			<sub-assertions>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>If A and B are equals, and operator is &lt;=, le, >=, or ge, return true, otherwise return false.</description>
					<location chapter = "2" section = "3.5.6"/>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>If A or B is null, return false.</description>
					<location chapter = "2" section = "3.5.6"/>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>If A or B is Float or Double coerce both A and B to Double and apply operator.</description>
					<location chapter = "2" section = "3.5.6"/>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>If A or B is Byte, Short, Character, Integer, or Long, coerce both A and B to Long and apply operator.</description>
					<location chapter = "2" section = "3.5.6"/>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>If A is Comparable, and A.compareTo(B) throws an exception, error; otherwise return the result of A.compareTo(B)</description>
					<location chapter = "2" section = "3.5.6"/>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>If B is Comparable, and B.compareTo(A) throws an exception, error; otherwise return the result of B.compareTo(A)</description>
					<location chapter = "2" section = "3.5.6"/>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>Otherwise return error.</description>
					<location chapter = "2" section = "3.5.6"/>
				</assertion>
			</sub-assertions>
		</assertion>
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>_NUMBER_</id>
			<description>Relation Operatos - A { ==, !=, eq, ne } B</description>
			<location chapter = "2" section = "3.5.7"/>
			<sub-assertions>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>If A == B, apply operator.</description>
					<location chapter = "2" section = "3.5.7"/>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>If A or B is null, return false for == (eq), true for != (ne)</description>
					<location chapter = "2" section = "3.5.7"/>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>If A or B is Float or Double coerce both A and B to Double and apply operator.</description>
					<location chapter = "2" section = "3.5.7"/>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>If A or B is Byte, Short, Character, Integer, or Long, coerce both A and B to Long and apply operator.</description>
					<location chapter = "2" section = "3.5.7"/>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>If A or B is Boolean coerce both A and B to Boolean apply operator.</description>
					<location chapter = "2" section = "3.5.7"/>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>If A or B is String coerce both A and B to String, if error occurs calling A.equals(B), error; otherwise apply operator to result of A.equals(B).</description>
					<location chapter = "2" section = "3.5.7"/>
				</assertion>
			</sub-assertions>
		</assertion>
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>_NUMBER_</id>
			<description>Binary Operator - A { &amp;&amp;, ||, and, or } B</description>
			<location chapter = "2" section = "3.6.1"/>
			<sub-assertions>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>Coerce both A and B to Boolean and apply operator.</description>
					<location chapter = "2" section = "3.6.1"/>
				</assertion>
			</sub-assertions>
		</assertion>
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>_NUMBER_</id>
			<description>Unary operator - { !, not } A</description>
			<location chapter = "2" section = "3.6.2"/>
			<sub-assertions>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>Coerce A to Boolean and apply operator.</description>
					<location chapter = "2" section = "3.6.2"/>
				</assertion>
			</sub-assertions>
		</assertion>
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>_NUMBER_</id>
			<description>Empty operator - empty A</description>
			<location chapter = "2" section = "3.7"/>
			<sub-assertions>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>If A is null, return true, otherwise false.</description>
					<location chapter = "2" section = "3.7"/>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>If A is an emtpy String, return true, otherwise false.</description>
					<location chapter = "2" section = "3.7"/>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>If A is an empty array, then return true, otherwise false.</description>
					<location chapter = "2" section = "3.7"/>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>If A is an emtpy Map, then return true, otherwise false.</description>
					<location chapter = "2" section = "3.7"/>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>If A is an empty List, then return true, otherwise false.</description>
					<location chapter = "2" section = "3.7"/>
				</assertion>
			</sub-assertions>
		</assertion>
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>_NUMBER_</id>
			<description>Operator precedence (highest to lowest) - [] . then (), then -(unary) not ! emtpy, then * / div % mod, then + - (binary), then &lt; > &lt;= >= lt gt le ge, then == != eq ne, then &amp;&amp; and, then || or.</description>
			<location chapter = "2" section = "3.9"/>
		</assertion>
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "false">
			<id>_NUMBER_</id>
			<description>The following words are reserved by the EL, and, or, not, eq, ne, lt, gt, le, ge, true, false, null, instanceof, empty, div, mod and should not be used as identifiers without being quoted.</description>
			<location chapter = "2" section = "4"/>
			<comment>Some confusion as to how one would quote this.  see EL-24.</comment>
		</assertion>
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>_NUMBER_</id>
			<description>If no scope qualifier is added to provided EL expression, the EL will lookup the attribute based on the behavior of PageContext.findAttribute(String), i.e, it will search the PageContext for the attribute first in the page, then request, then session, followed by application scopes and will return the value, otherwise null will be returned.</description>
			<location chapter = "2" section = "5"/>
		</assertion>
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>_NUMBER_</id>
			<description>If the function class, as described in the TLD, is not a public non-abstract class, a translation error will occur.</description>
			<location chapter = "2" section = "6.2"/>
		</assertion>
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>_NUMBER_</id>
			<description>If the method, as described in the TLD, is not a public static method, a translation error will occur.</description>
			<location chapter = "2" section = "6.2"/>
		</assertion>
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>_NUMBER_</id>
			<description>If two functions within the same tag library have the same name, a translation error will occur.</description>
			<location chapter = "2" section = "6.2"/>
		</assertion>
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>_NUMBER_</id>
			<description>EL function invocation semantics:</description>
			<location chapter = "2" section = "6.4"/>
			<sub-assertions>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>If the function has no namespace associated, then, if the function is used in an attribute value, assume the namespace as that of the custom action; if the function is used elsewhere, this shall be a translation error.</description>
					<location chapter = "2" section = "6.4"/>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>Locate the TLD associated with the namespace.  If none can be found, a translation error shall occur.</description>
					<location chapter = "2" section = "6.4"/>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>Locate the function element with a name subelement with the provided function name.  If none can be found, a translation error shall occur.</description>
					<location chapter = "2" section = "6.4"/>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>Locate the public class with name equal to the value of the funcion-class element.  Locate the public static method with name and signature equal to the value of the function-signature element.  If any of these don't exist, a translation error shall occur.</description>
					<location chapter = "2" section = "6.4"/>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>Evaluate each argument to the corresponding type indicated in the signature.</description>
					<location chapter = "2" section = "6.4"/>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>Evaluate the public static Java method.  The resulting type is that of the return value in the function-signature element.</description>
					<location chapter = "2" section = "6.4"/>
				</assertion>
			</sub-assertions>
		</assertion>
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>_NUMBER_</id>
			<description>The 'pageContext' implicit object corresponse to the PageContext object.</description>
			<location chapter = "2" section = "2.3"/>
		</assertion>
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>_NUMBER_</id>
			<description>The 'pageScope' implicit object allows access to page scoped attribute values.</description>
			<location chapter = "2" section = "2.3"/>
		</assertion>
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>_NUMBER_</id>
			<description>The 'requestScope' implicit object allows access to request scoped attribute values.</description>
			<location chapter = "2" section = "2.3"/>
		</assertion>
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>_NUMBER_</id>
			<description>The 'sessionScope' implicit object allows access to session scoped attribute values.</description>
			<location chapter = "2" section = "2.3"/>
		</assertion>
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>_NUMBER_</id>
			<description>The 'applicationScope' implicit object allows access to application scoped attribute values.</description>
			<location chapter = "2" section = "2.3"/>
		</assertion>
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>_NUMBER_</id>
			<description>The 'param' implicit object allows access to a single parameter value (obtained via ServletRequest.getParameter(String name)).</description>
			<location chapter = "2" section = "2.3"/>
		</assertion>
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>_NUMBER_</id>
			<description>The 'paramValues' implicit allows access to a String[] of all values for the specified parameter (obtained via ServletRequest.getParameterValues(String name)).</description>
			<location chapter = "2" section = "2.3"/>
		</assertion>
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>_NUMBER_</id>
			<description>The 'header' implicit object allows access to a single request-header value (obtained by calling HttpServletRequest.getHeader(String name)).</description>
			<location chapter = "2" section = "2.3"/>
		</assertion>
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>_NUMBER_</id>
			<description>The 'headerValues' implicit object returns the a String[] of all values for the specified header (obtained via HttpServletRequest.getHeaders(String name)).</description>
			<location chapter = "2" section = "2.3"/>
		</assertion>
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>_NUMBER_</id>
			<description>The 'cookie' implicit object provides access the the named cookie.</description>
			<location chapter = "2" section = "2.3"/>
			<sub-assertions>
				<assertion required = "true" impl-spec = "true" defined-by = "technology" status = "active" testable = "false">
					<id>_NUMBER_</id>
					<description>If there are multiple cookies identified by the same name, the implementation must return the first cookie in the array, but the cookie order provided to the implementation is currently not specified.</description>
					<location chapter = "2" section = "2.3"/>
				</assertion>
			</sub-assertions>
		</assertion>
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>_NUMBER_</id>
			<description>The 'initParam' implicit object provides access to context initialization parameters (obtained via ServletContext.getInitParameter(String name)).</description>
			<location chapter = "2" section = "2.3"/>
		</assertion>
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>_NUMBER_</id>
			<description>To coerce a value X to type Y</description>
			<location chapter = "2" section = "8.1"/>
			<sub-assertions>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>If X is of a primitive type, Let X be the equivalent 'boxed form' of X, otherwise, Let X be the same as X.</description>
					<location chapter = "2" section = "8.1"/>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>If Y is of a primitive type, Let Y be the equivalent 'boxed form' of Y.  Otherwise, let Y be the same as Y.</description>
					<location chapter = "2" section = "8.1"/>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>Apply conversion rules.</description>
					<location chapter = "2" section = "8.1"/>
					<comment>ADD DEPENDENCIES</comment>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>If Y is a primitive type, then the result is found by 'unboxing' the result of the coercion.  If the result of the coercion is null, then error.</description>
					<location chapter = "2" section = "8.1"/>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>If Y is not a primitive type, the the result is the result of the coercion.</description>
					<location chapter = "2" section = "8.1"/>
				</assertion>
			</sub-assertions>
		</assertion>
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>_NUMBER_</id>
			<description>Coerce A to String</description>
			<location chapter = "2" section = "8.2"/>
			<sub-assertions>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>If A is a String: return A</description>
					<location chapter = "2" section = "8.2"/>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>If A is null, return and empty String ("").</description>
					<location chapter = "2" section = "8.2"/>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>If A.toString() throws exception, error.</description>
					<location chapter = "2" section = "8.2"/>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>Otherwise return A.toString()</description>
					<location chapter = "2" section = "8.2"/>
				</assertion>
			</sub-assertions>
		</assertion>
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>_NUMBER_</id>
			<description>Coerce A to Number type N</description>
			<location chapter = "2" section = "8.3"/>
			<sub-assertions>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>If A is null or "", return 0</description>
					<location chapter = "2" section = "8.3"/>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>If A is Character, convert to short, apply numeric rules below.</description>
					<location chapter = "2" section = "8.3"/>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>If A is a Boolean, then error.</description>
					<location chapter = "2" section = "8.3"/>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>If A is Number type N, return A</description>
					<location chapter = "2" section = "8.3"/>
				</assertion>
				<assertion required = "true" impl-spec = "true" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>If A is a Number, coerce quietly to type N</description>
					<location chapter = "2" section = "8.3"/>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>If A is String, and N.valueOf(A) throws exception, then error.</description>
					<location chapter = "2" section = "8.3"/>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>If A is String, and N.valueOf(A) does not throw an exception, return the value.</description>
					<location chapter = "2" section = "8.3"/>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>All other types will result in an error.</description>
					<location chapter = "2" section = "8.3"/>
				</assertion>
			</sub-assertions>
		</assertion>
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>_NUMBER_</id>
			<description>Coerce A to Character</description>
			<location chapter = "2" section = "8.4"/>
			<sub-assertions>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>If A is null or "". return (char) 0</description>
					<location chapter = "2" section = "8.4"/>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>If A is Character, then return A</description>
					<location chapter = "2" section = "8.4"/>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>If A is Boolean, error.</description>
					<location chapter = "2" section = "8.4"/>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>If A is Number, coerce quietly to type Short, then return a Character whose numeric value is equivalent to that Short.</description>
					<location chapter = "2" section = "8.4"/>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>If A is String, return A.charAt(0)</description>
					<location chapter = "2" section = "8.4"/>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>All other types will result in an error.</description>
					<location chapter = "2" section = "8.4"/>
				</assertion>
			</sub-assertions>
		</assertion>
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>_NUMBER_</id>
			<description>Coerce A to Boolean</description>
			<location chapter = "2" section = "8.5"/>
			<sub-assertions>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>If A is null or "", return false</description>
					<location chapter = "2" section = "8.5"/>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>Otherwise if A is Boolean, return A</description>
					<location chapter = "2" section = "8.5"/>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>Otherwise if A is String, and Boolean.valueOf(A) throws exception, error.</description>
					<location chapter = "2" section = "8.5"/>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>Otherwise if A is String , and Bollean.valueOf(A) does not throw exception, return it.</description>
					<location chapter = "2" section = "8.5"/>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>Any other type, return error.</description>
					<location chapter = "2" section = "8.5"/>
				</assertion>
			</sub-assertions>
		</assertion>
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>_NUMBER_</id>
			<description>Coerce A to any other type T</description>
			<location chapter = "2" section = "8.6"/>
			<sub-assertions>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>If A is null, return null.</description>
					<location chapter = "2" section = "8.6"/>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>If A is assignable to T, coerce quietly.</description>
					<location chapter = "2" section = "8.6"/>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>If A is String, and T has no Property Editor, then if A is "" return null, otherwise error.</description>
					<location chapter = "2" section = "8.6"/>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>If A is String, and T's PropertyEditor throws exception, then if A is "" return null, otherwise error.</description>
					<location chapter = "2" section = "8.6"/>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>Otherwise, apply T's PropertyEditor</description>
					<location chapter = "2" section = "8.6"/>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>Otherwise, error</description>
					<location chapter = "2" section = "8.6"/>
				</assertion>
			</sub-assertions>
		</assertion>
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>_NUMBER_</id>
			<description>A jsp-property-group will apply a set of properties to a specific group of resources identified via a URL pattern.  If a resource matches URL patterns in more than one group, the pattern that is the most specific applies (follows the rules for URL pattern matching as defined in the Servlet Specification).</description>
			<location chapter = "3" section = "3"/>
		</assertion>
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>_NUMBER_</id>
			<description>EL expression evaluation can be activated for a group of JSP resources as specified by the URL pattern using the &lt;el-enabled> subelement of the &lt;jsp-property-group> element.  If the value provided is true, EL expressions will be evaluated.</description>
			<location chapter = "3" section = "3.2"/>
		</assertion>
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>_NUMBER_</id>
			<description>EL expression evaluation can be deactivated for a group of JSP resources as specified by the URL pattern using the &lt;el-enabled> subelement of the &lt;jsp-property-group> element.  If the value provided is false, EL expressions will be treated as template text (or uninterpreted attribute values).</description>
			<location chapter = "3" section = "3.2"/>
		</assertion>
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>_NUMBER_</id>
			<description>Scripting elements can be allowed for a group of JSP resources as specified by the URL pattern using the &lt;scripting-enabled> subelement of the &lt;jsp-property-group> element.  If the value is true, scripting elements such as scriptlets, classic expressions, and declarations will be allowed.</description>
			<location chapter = "3" section = "3.3"/>
		</assertion>
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>_NUMBER_</id>
			<description>Scripting elements can be disallowed for a group of JSP resources as specified by the URL pattern using the &lt;scripting-enabled> subelement of the &lt;jsp-property-group> element.  If the value is false, scripting elements such as scriptlets, classic expressions, and declarations present within this group will result in translation errors for any page containing such elements.</description>
			<location chapter = "3" section = "3.3"/>
		</assertion>
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>_NUMBER_</id>
			<description>A translation error will occur if the target translation unit specifies a different page encoding than that specified in the &lt;page-encoding> subelement of the &lt;jsp-property-group> element.</description>
			<location chapter = "3" section = "3.4"/>
		</assertion>
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>_NUMBER_</id>
			<description>A translation error will not occur if the target translation unit specifies the same page encoding as that specified in the &lt;page-encoding> subelement of the &lt;jsp-property-group> element.</description>
			<location chapter = "3" section = "3.4"/>
		</assertion>
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>_NUMBER_</id>
			<description>The &lt;include-prelude> subelement of the &lt;jsp-property-group> element defines a context-relative path to a resource within the web application that will be automatically included into the beginning of all JSP resources of the particular group.</description>
			<location chapter = "3" section = "3.5"/>
		</assertion>
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>_NUMBER_</id>
			<description>The &lt;include-coda> subelement of the &lt;jsp-property-group> element defines a context-relative path to a resource within the web application that will be automatically included into the end of all JSP resources of the particular group.</description>
			<location chapter = "3" section = "3.5"/>
		</assertion>
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>_NUMBER_</id>
			<description>In both cases, &lt;include-prelude> and &lt;include-coda>, if there are multiple entries of these elements they will be included into the JSP page in the order they appear within the &lt;jsp-property-group> element.</description>
			<location chapter = "3" section = "3.5"/>
		</assertion>
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>_NUMBER_</id>
			<description>The &lt;is-xml> subelement of the &lt;jsp-property-group> element is used to denote that a group of files are JSP doucments, and thus must be interpreted as XML documents.</description>
			<location chapter = "3" section = "3.6"/>
			<sub-assertions>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>If 'true', the files denoted must be interpreted as XML documents.</description>
					<location chapter = "3" section = "3.6"/>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>If 'false', the files in the associated property group are assumed not to be JSP documents.</description>
					<location chapter = "3" section = "3.6"/>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>If the &lt;is-xml> subelement is false within one property-group, but another property-group identifying the same set of files sets &lt;is-xml> to true, then the files will be processed as XML documents.</description>
					<location chapter = "3" section = "3.6"/>
				</assertion>
			</sub-assertions>
		</assertion>
		<!--REVISIT JSP.4 - Localization issues after these have been worked out.-->
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>_NUMBER_</id>
			<description>If the &lt;jsp:useBean> action is used within a scriptless context, then the variable exported will be available via EL expressions.</description>
			<location chapter = "5" section = "1"/>
		</assertion>
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>_NUMBER_</id>
			<description>If both 'type' and 'class' attributes of the &lt;jsp:useBean> standard action are present, and 'class' is not assignable to 'type', a translation error will occur.</description>
			<location chapter = "5" section = "1"/>
		</assertion>
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>_NUBMER_</id>
			<description>A translation error will occur of both the 'beanName' and 'class' attributes are specified within the same useBean action.</description>
			<location chapter = "5" section = "1"/>
			<comment>Reference StdActionAttributesValid VC</comment>
		</assertion>
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>_NUMBER_</id>
			<description>The 'beanName' attribute can accept dynamic attribute values (RT or EL).</description>
			<location chapter = "5" section = "1"/>
		</assertion>
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>_NUMBER_</id>
			<description>The 'beanName' attribute of the &lt;jsp:useBean> action must be of the form "a.b.c",  which can resolve to:</description>
			<location chapter = "5" section = "1"/>
			<sub-assertions>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>A java class that will be resolved in the current ClassLoader</description>
					<location chapter = "5" section = "1"/>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>A serialized bean instance in the form similar to a/b/c.ser that will be resolved in the current ClassLoader.</description>
					<location chapter = "5" section = "1"/>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>If the resource identified by 'beanName' attribute of the &lt;jsp:useBean> action cannot be resolved, a request-time exception, as indicated in the semantics of the instantiate() method of the java.beans.Beans class, will be raised.</description>
					<location chapter = "5" section = "1"/>
				</assertion>
			</sub-assertions>
		</assertion>
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>_NUMBER_</id>
			<description>The 'id' attribute of the &lt;jsp:useBean> actions provides the name used to identify the object instance in the specified scopes namespace, and also the scripting variable name declared and initialized with that reference.</description>
			<location chapter = "5" section = "1"/>
			<sub-assertions>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>The name specified is case sensitive.</description>
					<location chapter = "5" section = "1"/>
				</assertion>
			</sub-assertions>
		</assertion>
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>_NUMBER_</id>
			<description>The value's provided to the 'id' attribute of the &lt;jsp:useBean> action must be unique within the given translation unit.  Any duplicate id's found, will result in a translation error.</description>
			<location chapter = "5" section = "1"/>
		</assertion>
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>_NUMBER_</id>
			<description>The 'scope' attribute of the &lt;jsp:useBean> action specifies the scope or namespace within which the object reference is available.</description>
			<location chapter = "5" section = "1"/>
			<comment>See section JSP.1.8.2 for lifecycle sematics of the scopes described below.</comment>
			<sub-assertions>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>If the 'scope' attribute is not specified, the default scope will be 'page'.</description>
					<location chapter = "5" section = "1"/>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>If a value of 'page' is provided to the 'scope' attribute, the object will be exported to the page scope.</description>
					<location chapter = "5" section = "1"/>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>If a value of 'request' is provided to the 'scope' attribute, the object will be exported to the request scope.</description>
					<location chapter = "5" section = "1"/>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>If a value of 'session' is provided to the 'scope' attribute, the object will be exported to the session scope.</description>
					<location chapter = "5" section = "1"/>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>If a value of 'application' is provided to the 'scope' attribute, the object will be exported to the application scope.</description>
					<location chapter = "5" section = "1"/>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>If the value provided to the 'scope' attribute is not one of 'page', 'request', 'session', or 'application', a translation error will occur.</description>
					<location chapter = "5" section = "1"/>
					<comment>CLR-2</comment>
				</assertion>
			</sub-assertions>
		</assertion>
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>_NUMBER_</id>
			<description>A translation error will occur if the &lt;jsp:useBean> action attempts to export an object to the session scope and sessions have been disabled for the target page.</description>
			<location chapter = "5" section = "1"/>
		</assertion>
		<assertion required = "true" impl-spec = "true" defined-by = "technology" status = "active" testable = "false">
			<id>_NUMBER_</id>
			<description>For all scopes, it is illegal to change the value of an instance object associated with a particular scope, such that its new runtime type is a subset of the type(s) of the object previously so associated.</description>
			<location chapter = "5" section = "1"/>
		</assertion>
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "false">
			<id>_NUMBER_</id>
			<description>Sematics:  The actions performed in jsp:useBean action are:</description>
			<location chapter = "5" section = "1"/>
			<sub-assertions>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "false">
					<id>_NUMBER_</id>
					<description>The action searches for objects in scope, the search is done synchronized per scope namespace to avoid non-deterministic behavior.</description>
					<location chapter = "5" section = "1"/>
					<comment>jsp:useBean sematics</comment>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>A scripting language variable of the specified type (if given) or class (if type is not give) is defined with the given 'id' int he current lexical scope of the scripting language.</description>
					<location chapter = "5" section = "1"/>
				</assertion>
				<assertion required = "true" impl-spec = "true" defined-by = "technology" status = "active" testable = "false">
					<id>_NUMBER_</id>
					<description>If the 'class' attribute of the action is provided a value that referrs to an Abstract class, an Interface, or a class with no public no-arg constructor, the implementation may throw a java.lang.InstantiationException, or may raise a translation error.</description>
					<location chapter = "5" section = "1"/>
					<comment>jsp:useBean semantics</comment>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>If the object, as identified by the 'id' and 'scope' attributes of the action is found, and the object is not castable to the type as specified by the 'type' attribute, a java.lang.ClassCastException shall occur.  The action will cease processing at this point.</description>
					<location chapter = "5" section = "1"/>
					<comment>jsp:useBean semantics</comment>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>If the jsp:useBean has a non-empty body, it will be ignored (i.e. template text, as well as standard and custom actions will not be processed) and the action will cease processing.</description>
					<location chapter = "5" section = "1"/>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>If the specified object is not found in the specified scope, and neither 'class' nor 'beanName' are given, a java.lang.InstantiationException shall occur and the action will cease processing.</description>
					<location chapter = "5" section = "1"/>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>If the specified object is not found in the specified scope, and the 'class' attribute specifies a non-abstract class that defines a public no-args constructor, then the class is instantiated and the object reference is associated with a scripting variable name as identified by the 'id' attribute and exported to the scope as indicated by the 'scope' attribute.</description>
					<location chapter = "5" section = "1"/>
					<sub-assertions>
						<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
							<id>_NUMBER_</id>
							<description>If the action has a non-empty body, then the body will be processed.  Template text will be passed through, and standard and custom actions will be processed by the container.</description>
							<location chapter = "5" section = "1"/>
						</assertion>
					</sub-assertions>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>If the specified object is not found in the specified scope, and the 'beanName' attribute is specified, then the method instantiate() of java.beans.Beans will be invoked with the ClassLoader of the Servlet object with the value of the 'beanName' attribute as the argument.  If the method succeeds, the object refernece is associated with the scripting variable identified by the 'id' attribute and expored to the scope as indicated by the 'scope' attribute.</description>
					<location chapter = "5" section = "1"/>
					<sub-assertions>
						<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
							<id>_NUMBER_</id>
							<description>If the action has a non-empty body, then the body will be processed.  Template text will be passed through, and standard and custom actions will be processed by the container.</description>
							<location chapter = "5" section = "1"/>
							<sub-assertions>
								<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
									<id>_NUMBER_</id>
									<description>The body of the action can be specified via the &lt;jsp:body> action.</description>
									<location chapter = "5" section = "11"/>
								</assertion>
							</sub-assertions>
						</assertion>
					</sub-assertions>
				</assertion>
			</sub-assertions>
		</assertion>
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "false">
			<id>_NUMBER_</id>
			<description>The &lt;jsp:setProperty> action sets the values of properties in a Bean.</description>
			<location chapter = "5" section = "2"/>
			<sub-assertions>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>The 'name' attribute specifies the name of a Bean instance defined by a &lt;jsp:useBean> action or some other action.  </description>
					<location chapter = "5" section = "2"/>
					<sub-assertions>
						<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "false">
							<id>_NUMBER_</id>
							<description>The Bean instance must contain the property that is being set.</description>
							<location chapter = "5" section = "2"/>
						</assertion>
						<assertion required = "false" impl-spec = "true" defined-by = "technology" status = "active" testable = "false">
							<id>_NUMBER_</id>
							<description>If the object in which the property will be set was not introduced before the jsp:setProperty call, the container implementation is recommended, but not required to raise a translation error.</description>
							<location chapter = "5" section = "2"/>
						</assertion>
					</sub-assertions>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>The 'property' attribute specifies the bean property whose value is to be set.</description>
					<location chapter = "5" section = "2"/>
					<sub-assertions>
						<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
							<id>_NUMBER_</id>
							<description>If '*' is provided to the property attribute, the action will iterate over the current ServletRequest parameters matching parameter names and value types(s) to property names and setter method type(s), setting each matched property to the value of the matching parameter.</description>
							<location chapter = "5" section = "2"/>
						</assertion>
						<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
							<id>_NUMBER_</id>
							<description>If a parameter has a value of "", the corresponding property is not modified.</description>
							<location chapter = "5" section = "2"/>
						</assertion>
					</sub-assertions>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>The 'param' attribute specifies the name of the request parameter whose value will be given to a Bean property.</description>
					<location chapter = "5" section = "2"/>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>If the 'param' attribute is omitted from the action, the request parameter name is assumed to be the same as the Bean property name.</description>
					<location chapter = "5" section = "2"/>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>If the param is not set in the Request object, or if it has the value of "", the action has no effect (a noop).</description>
					<location chapter = "5" section = "2"/>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>A translation error will occur if both the 'param' and 'value' attributes both specified within the same action.</description>
					<location chapter = "5" section = "2"/>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>The 'value' attribute specifies the value to assign to the given property.</description>
					<location chapter = "5" section = "2"/>
					<sub-assertions>
						<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
							<id>_NUMBER_</id>
							<description>The 'value' attribute can accept request-time expressions (RT and EL).</description>
							<location chapter = "5" section = "2"/>
						</assertion>
						<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
							<id>_NUMBER_</id>
							<description>The 'value' attribute can be described via the &lt;jsp:attribute> standard action.</description>
							<location chapter = "5" section = "10"/>
						</assertion>
					</sub-assertions>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>A translation error will occur if the 'property' attribute value is '*', and any other attributes are provided to the action.</description>
					<location chapter = "5" section = "2"/>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>When assigning values from a parameter in the request object, the conversions described in JSP.1.14.2.1 are applied, using the target property to determine the target type.</description>
					<location chapter = "5" section = "2"/>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>When assigning from a value given as a String constand, the conversions described in JSP.1.14.2.1 are applied, using the target property to determine the target type.</description>
					<location chapter = "5" section = "2"/>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>When assigning from a value given as a request-time attribute, no type conversions are applied, as indicated in Section JSP.1.14.2.2</description>
					<location chapter = "5" section = "2"/>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>When assiging values to indexed propertyes the values must be an array; the rules, as indicated in Section JSP.1.14.2.2 apply.</description>
					<location chapter = "5" section = "2"/>
				</assertion>
			</sub-assertions>
		</assertion>
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>_NUMBER_</id>
			<description>The &lt;jsp:getProperty> action places the value of a Bean instance property, converted to a String, into the implicit out object.</description>
			<location chapter = "5" section = "3"/>
			<sub-assertions>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>The 'name' attribute specifies the name of the Bean instance from which the property is obtained.</description>
					<location chapter = "5" section = "3"/>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>The 'property' attribute specifies the name of the property to access within the specified Bean instance.</description>
					<location chapter = "5" section = "3"/>
				</assertion>
				<assertion required = "false" impl-spec = "true" defined-by = "technology" status = "active" testable = "false">
					<id>_NUMBER_</id>
					<description>If the object referenced by the 'name' attribute was not 'introduced' via &lt;jsp:useBean> or a custom action with an associated VariableInfo entry, the container implementation, is recommended (but nore required) to raise a translation error, since this page implementation is in violation of the specification.</description>
					<location chapter = "5" section = "3"/>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>The conversion to String is done as in the println() methods, i.e. the toStrint() method of the object is used for Object instances, and primitive types are converted directly.</description>
					<location chapter = "5" section = "3"/>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>A translation error will occur if the 'property' attribute is not specified within the action.</description>
					<location chapter = "5" section = "3"/>
				</assertion>
			</sub-assertions>
		</assertion>
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>_NUMBER_</id>
			<description>The &lt;jsp:include> action provides for inclusion of static and dynamic resources int he same context as the current page.</description>
			<location chapter = "5" section = "4"/>
			<comment>Perhaps base a set of tests based on the examples for &lt;jsp:include></comment>
			<sub-assertions>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>The 'page' attribute specifies a relative URL (either page or context relative) to a resource within the same web application context.</description>
					<location chapter = "5" section = "4"/>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>The 'flush' attribute, if true, will immediately flush the buffer prior to inclusion.</description>
					<location chapter = "5" section = "4"/>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>The 'flush' attribute, if false, will not flush the buffer prior to inclusion.</description>
					<location chapter = "5" section = "4"/>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>The default value for the 'flush' attribute is false.</description>
					<location chapter = "5" section = "4"/>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>A tranlsation error will occur of the 'page' attribute is not specified.</description>
					<location chapter = "5" section = "4"/>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>An included page only has access to the JspWriter object (out).</description>
					<location chapter = "5" section = "4"/>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>Any attempt by an included page to set headers, will be ignored by the container.</description>
					<location chapter = "5" section = "4"/>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>An include action may use &lt;jsp:param> action present as body content to provide request parameters for the included resource.</description>
					<location chapter = "5" section = "4"/>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>The 'page' attribute can accept request-time expressions (either classic RT or EL).</description>
					<location chapter = "5" section = "4"/>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>The 'page' attribute can be described via the &lt;jsp:attribute> standard action.</description>
					<location chapter = "5" section = "10"/>
				</assertion>
			</sub-assertions>
		</assertion>
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>_NUMBER_</id>
			<description>The &lt;jsp:forward> action will forward the current request to the target resource, be it a static resource, a JSP page, or a servlet class in the same context as the current page.</description>
			<location chapter = "5" section = "5"/>
			<sub-assertions>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>The 'page' attribute specifies the target resource (either via a page relative or context relative path) to which to dispatch the current request to.</description>
					<location chapter = "5" section = "5"/>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "false">
					<id>_NUMBER</id>
					<description>The request object will be adjusted according to the value of the page attribute.</description>
					<location chapter = "5" section = "5"/>
					<comment>Untestable as this is vague.</comment>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>If the page is buffered, the buffer is cleard prior to forwarding.</description>
					<location chapter = "5" section = "5"/>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>If the page output is buffered, and the buffered was flushed, and attempt to forward the request will result in an IllegalStateException</description>
					<location chapter = "5" section = "5"/>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>If the page output was unbuffered and anthing has been written to it, an attempt to forward the request will result in an IllegalStateException.</description>
					<location chapter = "5" section = "5"/>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>The forward action can accept &lt;jsp:param> actions as body content to provide request parameters for the target resource.</description>
					<location chapter = "5" section = "5"/>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>A translation error will occur of the 'page' attribute is omitted from the action.</description>
					<location chapter = "5" section = "5"/>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>The 'page' attribute accepts request-time expressions (either classic RT or EL expressions).</description>
					<location chapter = "5" section = "5"/>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>The 'page' attribute can be described via the &lt;jsp:attribute> standard action.</description>
					<location chapter = "5" section = "10"/>
				</assertion>
			</sub-assertions>
		</assertion>
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>_NUMBER_</id>
			<description>The &lt;jsp:param> action specifies key/value information.</description>
			<location chapter = "5" section = "6"/>
			<sub-assertions>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>The 'name' attribute specifies the name of the parameter.</description>
					<location chapter = "5" section = "6"/>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>The 'value' attribute specifies the value for this particular parameter.</description>
					<location chapter = "5" section = "6"/>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>A translation error will occur if the &lt;jsp:param> action is not a child of a &lt;jsp:include>, &lt;jsp:forward>, or a &lt;jsp:params> action.</description>
					<location chapter = "5" section = "6"/>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>If used in conjunction with &lt;jsp:include> or &lt;jsp:forward>, the target resource will see the original request object including the augmented parameters provided by the &lt;jsp:param> action, with the new parameters taking precendence over the originals.</description>
					<location chapter = "5" section = "6"/>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>If used in conjuntion with &lt;jsp:include> or &lt;jsp:forward>, the new parameters will not apply after the action returns.</description>
					<location chapter = "5" section = "6"/>
					<comment>This is not testable for &lt;jsp:forward></comment>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>The 'value' attribute can accept request-time (either classic RT or EL) expressions.</description>
					<location chapter = "5" section = "6"/>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>A translation error will occur if either the 'name' or 'value' attributes is not specified.</description>
					<location chapter = "5" section = "6"/>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>The 'value' attribute can be described via the &lt;jsp:attribute> standard action.</description>
					<location chapter = "5" section = "10"/>
				</assertion>
			</sub-assertions>
		</assertion>
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>_NUMBER_</id>
			<description>The &lt;jsp:plugin> action enables an JSP page author to generate plugin re-lated HTML.</description>
			<location chapter = "5" section = "7"/>
			<sub-assertions>
				<assertion required = "true" impl-spec = "true" defined-by = "technology" status = "active" testable = "false">
					<id>_NUMBER_</id>
					<description>Depending on the browser's user-agent, the action will generate either an HTML OBJECT or EMBED tag.</description>
					<location chapter = "5" section = "7"/>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>The &lt;jsp:params> action specifies a set of parameters (each parameter is defined by a one or more &lt;jsp:param> actions).</description>
					<location chapter = "5" section = "7"/>
					<sub-assertions>
						<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
							<id>_NUMBER_</id>
							<description>A translation error will occur of the &lt;jsp:params> action is present, but contains no &lt;jsp:param> sub-actions.</description>
							<location chapter = "5" section = "7"/>
						</assertion>
						<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
							<id>_NUMBER_</id>
							<description>A translation error will occur if the &lt;jsp:params> action is used in any other context outside of the &lt;jsp:plugin> action.</description>
							<location chapter = "5" section = "8"/>
						</assertion>
					</sub-assertions>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>The &lt;jsp:fallback> attribute specifies alternate text if the plugin cannot be started.</description>
					<location chapter = "5" section = "7"/>
					<sub-assertions>
						<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
							<id>_NUMBER_</id>
							<description>The alternate text generated by the &lt;jsp:fallback> action is provided as body content.</description>
							<location chapter = "5" section = "7"/>
						</assertion>
						<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
							<id>_NUMBER_</id>
							<description>The body of the &lt;jsp:fallback> attribute can be provided via the &lt;jsp:body> action.</description>
							<location chapter = "5" section = "11"/>
						</assertion>
						<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
							<id>_NUMBER_</id>
							<description>The use of &lt;jsp:fallback> in any other context (either independent action or child or another) will result in a translation error.</description>
							<location chapter = "5" section = "9"/>
						</assertion>
					</sub-assertions>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>The 'type' attribute will specifiy the type of component will be either an applet or a Bean.</description>
					<location chapter = "5" section = "7"/>
					<sub-assertions>
						<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
							<id>_NUMBER_</id>
							<description>A translation error will occur if a value other than 'bean' or 'applet' is provided to the action.f</description>
							<location chapter = "5" section = "7"/>
						</assertion>
					</sub-assertions>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>The 'code' attribute specifies the code attribute of the object per the HTML specification.</description>
					<location chapter = "5" section = "7"/>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>The 'codebase' attribute specifies the codebase of the object per the HTML specification.</description>
					<location chapter = "5" section = "7"/>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>The 'align' attribute provides the alignment of the object per the HTML specification.</description>
					<location chapter = "5" section = "7"/>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>The 'archive' attribute provides the archive used by the object per the HTML specification.</description>
					<location chapter = "5" section = "7"/>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>The 'height' attribute specifies the height of the object per the HTML specification</description>
					<location chapter = "5" section = "7"/>
					<sub-assertions>
						<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
							<id>_NUMBER_</id>
							<description>The 'height' attribute accepts request-time (either classic RT or EL) expressions.</description>
							<location chapter = "5" section = "7"/>
						</assertion>
						<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
							<id>_NUMBER_</id>
							<description>The 'height' attribute can be described via the &lt;jsp:attribute> standard action.</description>
							<location chapter = "5" section = "10"/>
						</assertion>
					</sub-assertions>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>The 'hspace' attribute specifies the hspace of the object per the HTML specification.</description>
					<location chapter = "5" section = "7"/>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>The 'jreversion' attribute specifies the version of JRE required for the object to fuction properly.</description>
					<location chapter = "5" section = "7"/>
					<sub-assertions>
						<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
							<id>_NUMBER_</id>
							<description>If the 'jreversion' attribute is not specified, the default version present in the generated HTML will be "1.2".</description>
							<location chapter = "5" section = "7"/>
						</assertion>
					</sub-assertions>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>The 'name' attribute specifies the logical name for the embedded object per the HTML specification.</description>
					<location chapter = "5" section = "7"/>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>The 'vspace' attribute specifies the vspace to be used by the embedded object per the HTML specification.</description>
					<location chapter = "5" section = "7"/>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>The 'title' attribute specifies the title of the embedded object per the HTML specification.</description>
					<location chapter = "5" section = "7"/>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>The 'width' attribute specifies the width of the embedded object per the HTML specification.</description>
					<location chapter = "5" section = "7"/>
					<sub-assertions>
						<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
							<id>_NUMBER_</id>
							<description>The 'width' attribute can accep request-time (either classic RT or EL) expressions.</description>
							<location chapter = "5" section = "7"/>
						</assertion>
						<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
							<id>_NUMBER_</id>
							<description>The 'width' attribute can be described via the &lt;jsp:attribute> standard action.</description>
							<location chapter = "5" section = "10"/>
						</assertion>
					</sub-assertions>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>The 'nspluginurl' attribute specifies the URL where the JRE plugin can be downloaded for netscape.</description>
					<location chapter = "5" section = "7"/>
					<sub-assertions>
						<assertion required = "true" impl-spec = "true" defined-by = "technology" status = "active" testable = "false">
							<id>_NUMBER_</id>
							<description>If the 'nspluginurl' attribute is not specified, the url returned in the generated HTML is implementation specific.</description>
							<location chapter = "5" section = "7"/>
						</assertion>
					</sub-assertions>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>The 'iepluginurl' attribute specifies the URL where the JRE plugin for IE can be downloaded.</description>
					<location chapter = "5" section = "7"/>
					<sub-assertions>
						<assertion required = "true" impl-spec = "true" defined-by = "technology" status = "active" testable = "false">
							<id>_NUMBER_</id>
							<description>If the 'iepluginurl' attribute is not specified, the url returned in the generated HTML is implementation specific.</description>
							<location chapter = "5" section = "7"/>
						</assertion>
					</sub-assertions>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>A translation error will occur if the 'code' attribute is not specified.</description>
					<location chapter = "5" section = "7"/>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>A translation error will occur if the 'codebase' attribute is not specified.</description>
					<location chapter = "5" section = "7"/>
				</assertion>
			</sub-assertions>
		</assertion>
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>_NUMBER_</id>
			<description>The &lt;jsp:attribute> action allows a page author to define the value of a tag handler attribute in an XML element instead of in the value of the XML attribute.</description>
			<location chapter = "5" section = "10"/>
			<sub-assertions>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>The 'name' attribute specifies the name of the attribute of the attribute for the tag being invoked.</description>
					<location chapter = "5" section = "10"/>
					<sub-assertions>
						<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
							<id>_NUMBER_</id>
							<description>If the attribute does not accept dynamic attributes, and the specified attribute name doesn't exist in the surrounding action, a translation error will occur.</description>
							<location chapter = "5" section = "10"/>
						</assertion>
						<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
							<id>_NUMBER_</id>
							<description>A translation error will occur if both an XML element attribute and a &lt;jsp:attribute> element are used to specify the value for the same attribute.</description>
							<location chapter = "5" section = "10"/>
						</assertion>
						<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
							<id>_NUMBER_</id>
							<description>A translation error will occur if the 'name' attribute is not specified.</description>
							<location chapter = "5" section = "10"/>
						</assertion>
						<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
							<id>_NUMBER_</id>
							<description>If the value provided to the 'name' attribute is a QName with a prefix that doesn't match that of the applicable action, and the action does not accept dynamic attributes, a translation error will occur.</description>
							<location chapter = "5" section = "10"/>
						</assertion>
					</sub-assertions>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>Any attempt to use the &lt;jsp:attribute> action outside of a JSP standard action, or a JSP custom action must result in a translation error.</description>
					<location chapter = "5" section = "10"/>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>JSP containers must support the use of &lt;jsp:attribute> for both Classic and Simple Tag Handlers.</description>
					<location chapter = "5" section = "10"/>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>For custom action (both Classic and Simple) attribute types of type javax.servlet.jsp.tagext.JspFragment, the container must create a JspFragment out of the boyd of the &lt;jsp:attribute> action and pass it to the tag handler.</description>
					<location chapter = "5" section = "10"/>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>A translation error will occur if the attribute type is javax.servlet.jsp.tagext.JspFragment, and the body of the &lt;jsp:attribute> action is not scriptless.</description>
					<location chapter = "5" section = "10"/>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>If the custom action accepts dynamic attributes, and the name of the attribute is not one explicity indeicated for the tag, then the container will evaluate the body of &lt;jsp:attribute> and assign the computed value to the attribute using the dynamic attribute machinery.</description>
					<location chapter = "5" section = "10"/>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>For standard or custom actions attributes that accept a runtime expression value, the container must evaluated the body of the &lt;jsp:attribute> action and use the result of theis evaluation as the value of the attribute.</description>
					<location chapter = "5" section = "10"/>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>A translation error must occur if the body of the &lt;jsp:attribute> action contains anything but template text when the standard or custom action attributes do not accept dynamic values.</description>
					<location chapter = "5" section = "10"/>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>If the enclosing action is &lt;jsp:element> then the values of the name attribute and the boyd of the attribute will be used to construct a new element dynamically.</description>
					<location chapter = "5" section = "10"/>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>If the body of the &lt;jsp:attribute> is empty, it is the equivalent of specifying "" (an empty String) as the value of the attribute</description>
					<location chapter = "5" section = "10"/>
				</assertion>
			</sub-assertions>
		</assertion>
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>_NUMBER_</id>
			<description>The body of the &lt;jsp:body> action can be specified via the &lt;jsp:body> action.</description>
			<location chapter = "5" section = "11"/>
		</assertion>
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>_NUMBER_</id>
			<description>The &lt;jsp:body> allows for the explicit definition of a body for a custom action.</description>
			<location chapter = "5" section = "11"/>
			<sub-assertions>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>The 'value' attribute allows the author to provide the body of the action as an attribute value.</description>
					<location chapter = "5" section = "11"/>
					<sub-assertions>
						<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
							<id>_NUMBER_</id>
							<description>The value of this attribute must evaluate to an instance of javax.servlet.jsp.tagext.JspFragment, otherwise a JspException must result.</description>
							<location chapter = "5" section = "11"/>
						</assertion>
						<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
							<id>_NUMBER_</id>
							<description>If the 'value' attribute of &lt;jsp:body> is specified and the action has a body, translation error must occur.</description>
							<location chapter = "5" section = "11"/>
						</assertion>
						<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
							<id/>
							<description>If the 'value' attribute of &lt;jsp:body> is not specified, and the action has no body, a translation error must occur.</description>
							<location chapter = "5" section = "11"/>
						</assertion>
						<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
							<id>_NUMBER_</id>
							<description>The 'value' attribute can accept dynamic attribute values (both EL and RT).</description>
							<location chapter = "5" section = "11"/>
						</assertion>
					</sub-assertions>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>If the 'value' attribute is used to specify the value of a custom action defined using a Classic Tag Handler, the container must generate code to invoke the gragment, sending the output to the current JspWriter, and passing in a Map of paramters for all AT_BEGIN and NESTED variables provided by the tag handler.</description>
					<location chapter = "5" section = "11"/>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>Any attempt to use the value attribute to define the body of a standard action must result in a translation error.</description>
					<location chapter = "5" section = "11"/>
				</assertion>
			</sub-assertions>
		</assertion>
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>_NUMBER_</id>
			<description>The &lt;jsp:invoke> action will invoke the specified fragment and write the result to the current JspWriter, or to scoped variable.</description>
			<location chapter = "5" section = "12"/>
			<sub-assertions>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>The 'fragment' attribute specifies the name used to identify this fragment during this tag invocation.</description>
					<location chapter = "5" section = "12"/>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>The 'varReader' attribute specifies the scoped attribute in which to store the result of the fragment invocation. </description>
					<location chapter = "5" section = "12"/>
					<sub-assertions>
						<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
							<id>_NUMBER_</id>
							<description>The type of the scoped attribute must be java.io.Reader.</description>
							<location chapter = "5" section = "12"/>
						</assertion>
					</sub-assertions>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>The 'var' attribute specifies the scoped attribute in which to store the result of the fragment invocation.</description>
					<location chapter = "5" section = "12"/>
					<sub-assertions>
						<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
							<id>_NUMBER_</id>
							<description>The type of the scoped attribute must be java.lang.String.</description>
							<location chapter = "5" section = "12"/>
						</assertion>
					</sub-assertions>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>The 'scope' attribute specifies the scope in which to store the attribute specified by the 'varReader' attribute.</description>
					<location chapter = "5" section = "12"/>
					<sub-assertions>
						<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
							<id>_NUMBER_</id>
							<description>A value of 'page' will result in the attribute being stored in the page scope.</description>
							<location chapter = "5" section = "12"/>
						</assertion>
						<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
							<id>_NUMBER_</id>
							<description>A value of 'request' will result in the attribute being stored in the request scope.</description>
							<location chapter = "5" section = "12"/>
						</assertion>
						<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
							<id>_NUMBER_</id>
							<description>A value of 'session' will result in the attribute being stored in the session scope.</description>
							<location chapter = "5" section = "12"/>
						</assertion>
						<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
							<id>_NUMBER_</id>
							<description>A value of 'application' will result in the attribute being stroed in the application scope.</description>
							<location chapter = "5" section = "12"/>
						</assertion>
						<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
							<id>_NUMBER_</id>
							<description>If the 'scope' attribute is not specified, the default value of 'page' will be used.</description>
							<location chapter = "5" section = "12"/>
						</assertion>
						<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
							<id>_NUMBER_</id>
							<description>/XXX FIXME What happens if client not in session and session scope is specified.</description>
							<location chapter = "5" section = "12"/>
						</assertion>
						<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
							<id>_NUBMER_</id>
							<description>A translation error will occur if the scope attribute is provided an invalid value.</description>
							<location chapter = "5" section = "12"/>
						</assertion>
					</sub-assertions>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>A translation error will occur of the &lt;jsp:invoke> is present outside of a tag file context.</description>
					<location chapter = "5" section = "12"/>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>If neither 'var' nor 'varReader' attribute is not specified, the result of the invocation will be written to the current JspWriter.</description>
					<location chapter = "5" section = "12.2"/>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>When the 'varReader' attribute is specified, the object must produce the content sent by the fragment by the provided writer.</description>
					<location chapter = "5" section = "12.2"/>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>When the 'var' attribute is specified, the object must store the content sent by the fragment in a String object.</description>
					<location chapter = "5" section = "12.2"/>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>A translation error must occur of both 'var' and 'varReader' are specified within the same action.</description>
					<location chapter = "5" section = "12"/>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "false">
					<id>_NUMBER_</id>
					<description>When 'varReader' attribute is specified, the Reader exported must be resettable, such that if its reset() method is called, the result of the invoked fragment must be able to be read again without re-executing the fragment.</description>
					<location chapter = "5" section = "12.2"/>
					<comment>check object references manually between invocations to ensure that we're not getting new reader objects.</comment>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>A translation error will occur if there is not a one-to-one correlation between the number of &lt;jsp:param> elements present within the body of the &lt;jsp:invoke> action and the required variables as defined by the 'variable' directive.</description>
					<location chapter = "5" section = "12.3"/>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>A translation error must not occur if a &lt;jsp:param> element appears without a corresponding variable directive.</description>
					<location chapter = "5" section = "12.3"/>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>A translation error will occur if the body of the &lt;jsp:invoke> action contains body content other than white space and &lt;jsp:param> subelements.</description>
					<location chapter = "5" section = "12.3"/>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>A translation error will occur of the 'fragment' attribute is not specified for a particular &lt;jsp:invoke> action.</description>
					<location chapter = "5" section = "12"/>
				</assertion>
			</sub-assertions>
		</assertion>
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>_NUMBER_</id>
			<description>The &lt;jsp:doBody> standard action invokes the body of a tag.</description>
			<location chapter = "5" section = "13"/>
			<sub-assertions>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>The 'varReader' attribute specifies the scoped attribute in which to store the result of the body invocation.</description>
					<location chapter = "5" section = "13"/>
					<sub-assertions>
						<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
							<id>_NUMBER_</id>
							<description>The type of the scoped attribute must be java.io.Reader.</description>
							<location chapter = "5" section = "13"/>
						</assertion>
					</sub-assertions>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>The 'var' attribute specifies the scoped attribute in which to store the result of the body invocation.</description>
					<location chapter = "5" section = "13"/>
					<sub-assertions>
						<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
							<id>_NUMBER_</id>
							<description>The type of the scoped attribute must be java.lang.String.</description>
							<location chapter = "5" section = "13"/>
						</assertion>
					</sub-assertions>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>The 'scope' attribute specifies the scope in which to store the attribute specified by the 'varReader' attribute.</description>
					<location chapter = "5" section = "13"/>
					<sub-assertions>
						<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
							<id>_NUMBER_</id>
							<description>A value of 'page' will result in the attribute being stored in the page scope.</description>
							<location chapter = "5" section = "13"/>
						</assertion>
						<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
							<id>_NUMBER_</id>
							<description>A value of 'request' will result in the attribute being stored in the request scope.</description>
							<location chapter = "5" section = "13"/>
						</assertion>
						<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
							<id>_NUMBER_</id>
							<description>A value of 'session' will result in the attribute being stored in the session scope.</description>
							<location chapter = "5" section = "13"/>
						</assertion>
						<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
							<id>_NUMBER_</id>
							<description>A value of 'application' will result in the attribute being stroed in the application scope.</description>
							<location chapter = "5" section = "13"/>
						</assertion>
						<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
							<id>_NUMBER_</id>
							<description>If the 'scope' attribute is not specified, the default value of 'page' will be used.</description>
							<location chapter = "5" section = "13"/>
						</assertion>
						<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
							<id>_NUMBER_</id>
							<description>/XXX FIXME What happens if client not in session and session scope is specified.</description>
							<location chapter = "5" section = "13"/>
						</assertion>
						<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
							<id>_NUMBER_</id>
							<description>A translation error will occur if the 'scope' attribute is provided an invalid value.</description>
							<location chapter = "5" section = "13"/>
						</assertion>
					</sub-assertions>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>A translation error will occur if the 'var' and 'varReader' attributes are both specified within the same action.</description>
					<location chapter = "5" section = "13"/>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>A translation error will occur if the &lt;jsp:doBody> action contains body content other than white space and &lt;jsp:param> subelements.</description>
					<location chapter = "5" section = "13"/>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>A translation error will occur if there is not a one-to-one correlation between the number of &lt;jsp:param> elements present within the body of the &lt;jsp:doBody> action and the required fragment inputs as defined by the 'variable' directive.</description>
					<location chapter = "5" section = "12"/>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>A translation error must not occur if a &lt;jsp:param> element appears without a corresponding variable directive.</description>
					<location chapter = "5" section = "12"/>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>A translation error must occur if a &lt;jsp:param> is specified with the same name as a variable with a scope of AT_BEGIN, or NESTED.</description>
					<location chapter = "5" section = "12"/>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>A translation error must not occur if a &lt;jsp:param> is specified with the same name as a variable with a scope of AT_END.</description>
					<location chapter = "5" section = "12"/>
				</assertion>
			</sub-assertions>
		</assertion>
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>_NUMBER_</id>
			<description>A JSP document is identified though the following algorithm in order or precedence:</description>
			<location chapter = "6" section = "1"/>
			<sub-assertions>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>If a &lt;jsp-property-group> explicitly identifies a set of files as JSP Documents (through the use of &lt;is-xml>), then that indication overrides any other determination.</description>
					<location chapter = "6" section = "1"/>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>If there is no explicit association and the extension is ".jspx", then the file is a JSP document.</description>
					<location chapter = "6" section = "1"/>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>If the file is explicitly or implicitly defined as a JSP page and the top element is a jsp:root element, then the file is identified as a JSP doucment (provided for backwards compatibility).</description>
					<location chapter = "6" section = "1"/>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>It is a translation error for a file that id identified as a JSP document to not be a well-formed XML document.</description>
					<location chapter = "6" section = "1"/>
				</assertion>
			</sub-assertions>
		</assertion>
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>_NUMBER_</id>
			<description>RT expressions must be expressed in JSP Documents using the following syntax: "%= expr %".</description>
			<location chapter = "6" section = "1"/>
			<sub-assertions>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>Whitespace after the starting '%=' and before the ending '%" is optional.</description>
					<location chapter = "6" section = "1"/>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>If an expression appears in more than one run-time attribute, they are evaluated left-to-right in the element.</description>
					<location chapter = "1" section = "12.3"/>
				</assertion>
			</sub-assertions>
		</assertion>
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>_NUMBER_</id>
			<description>It is legal to use any prefix for JSP standard actions as long as the require URI, 'http://java.sun.com/JSP/page" is associated with the specified prefix.</description>
			<location chapter = "6" section = "1"/>
		</assertion>
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>_NUMBER_</id>
			<description>XXX FIXME ----- URN:JSPTLD STUFF</description>
			<location chapter = "6" section = "1.2"/>
		</assertion>
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>_NUMBER_</id>
			<description>XXX FIXME -- jsp:root element</description>
			<location chapter = "6" section = "1.3"/>
		</assertion>
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>_NUMBER_</id>
			<description>The jsp:directive.page, a child element of the jsp:root element, defines page level properties with the same semantics as the page directive in JSP syntax.</description>
			<location chapter = "6" section = "1.4"/>
			<sub-assertions>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>jsp:directive.page can appear multiple times, and is position independent within a given translation unit.</description>
					<location chapter = "1" section = "10.1"/>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>A translation error will occur if jsp:directive.page defines duplicate attribute/values within a give translation unit, with the exception of the import attribute.</description>
					<location chapter = "1" section = "10.1"/>
					<comment>NOTE:  This may change.  Reference PageDirectiveUniqueAttr validity constraint.</comment>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>The 'isScriptingEnabled' attribute of jsp:directive.page, if true, allows the presence of scripting elements (scriptlets, expressions, declarations) within a given translation unit.</description>
					<location chapter = "1" section = "10.1"/>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUBMER_</id>
					<description>The 'isScriptingEnabled' attribute of jsp:directive.page, if false, disallows the presence of scripting elements (scriptlets, expressions, declarations) within a given translation unit and will generate a translation error if they are present.</description>
					<location chapter = "1" section = "10.1"/>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>The default value for 'isScriptingEnabled' of jsp:directive.page, if not specified, is true.</description>
					<location chapter = "1" section = "10.1"/>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>The 'isELEnabled' attribute of jsp:directive.page, if true, directs the container to evaluate EL expressions.</description>
					<location chapter = "1" section = "10.1"/>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>The 'isELEnabled' attribute of jsp:directive.page , if false, will result in EL expression not being evaluated by the container.</description>
					<location chapter = "1" section = "10.1"/>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>If the JSP is part of a Web application that is using a Servlet 2.3 deployment descriptor, the default value for the 'isELEnabled' attribute of jsp:directive.page is false.</description>
					<location chapter = "1" section = "10.1"/>
					<comment>Reference section JSP.2.2.4 Deactivating EL Evaluation</comment>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>If the JSP is part of a Web application that is using a Servlet 2.4 deployment descriptor, the default value for the 'isELEnabled' attribute of jsp:directive.page is true.</description>
					<location chapter = "1" section = "10.1"/>
					<comment>Reference section JSP.2.2.4 Deactivating EL Evaluation</comment>
				</assertion>
				<assertion required = "true" impl-spec = "true" defined-by = "technology" status = "active" testable = "false">
					<id>_NUMBER_</id>
					<description>All scripting languages, specifiable by jsp:directive.page's 'language' attribute, must provide some implicit objects that a JSP page author can use in declarations, scriptlets, and expressions (see Section JSP.1.3.8 for list of available implicit objects)</description>
					<location chapter = "1" section = "10.1"/>
				</assertion>
				<assertion required = "true" impl-spec = "true" defined-by = "technology" status = "active" testable = "false">
					<id>_NUMBER_</id>
					<description>All scripting languages, specifiable by jsp:directive.page's 'language' attribute, must expose the Java technology object model to the script environment, especially implicit variables, JavaBeans components properties, and public methods.</description>
					<location chapter = "1" section = "10.1"/>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>It is a fatal translation error for a page directive with a non-"java" language attribute to appear after the first scripting has been encountered.</description>
					<location chapter = "1" section = "10.1"/>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>The only required scripting language value for the 'language' attribute is "java".</description>
					<location chapter = "1" section = "10.1"/>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>The 'extends' attribute of jsp:directive.page specifies a fully qualified Java programming language class name, that names the superclass of the class to which this JSP page is transformed</description>
					<location chapter = "1" section = "10.1"/>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>The 'import' attribute of jsp:directive.page specifies the fully qualified Java programming language type name denoting a particular type, or of a package name following by the ".*" string, denoting all the public types declared in that package, that shall be imorted by the translated JSP page implementation and is thus available to the scripting language.</description>
					<location chapter = "1" section = "10.1"/>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>The default import list for a JSP page is java.lang.*, javax.servlet.*, javax.servlet.jsp.*, javax.servlet.http.*</description>
					<location chapter = "1" section = "10.1"/>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>The 'session' attribute of jsp:directive.page, when true, indicates that the JSP page requires participation in an HTTP session.</description>
					<location chapter = "1" section = "10.1"/>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>The 'session' attribute of jsp:directive.page, when false, indicates that the JSP page does not participate in an HTTP session; the 'session' implicit object is not available to the page, and any reference to it within the translation unit will result in a translation error.</description>
					<location chapter = "1" section = "10.1"/>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>If the 'session' attribute of jsp:directive.page is not specified, then the page will, by default, participate in an HTTP session (default value of true).</description>
					<location chapter = "1" section = "10.1"/>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>If the 'buffer' attribute of jsp:directive.page is not specified, no buffering will be performed and all output will be written directly through to the ServletResponse PrintWriter.</description>
					<location chapter = "1" section = "10.1"/>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>The size value specified by the 'buffer' attribute of jsp:directive.page must be in kilobytes, and the suffix "kb" is mandatory.</description>
					<location chapter = "1" section = "10.1"/>
					<comment>NOTE:  Spec is unclear as to what happens if a different suffix is used, or is not present.  Most likely a translation error.</comment>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>The container must allocate a buffer at least as large as that specified by the 'buffer' attribute of jsp:directive.page.</description>
					<location chapter = "1" section = "10.1"/>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>The default buffer size of 8kb will be used if the 'buffer' attribute of the page directive is not specified.</description>
					<location chapter = "1" section = "10.1"/>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>If the 'autoFlush' attribute of the page directive is true, the output will be automatically flushed when the buffer is filled.</description>
					<location chapter = "1" section = "10.1"/>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>If the 'autoFlush' attribute of the page directive is false, an exception will be raised to indicate a buffer overflow.</description>
					<location chapter = "1" section = "10.1"/>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>It is illegal to set the 'autoFlush' attribute of jsp:directive.page to false, if the 'buffer' attribute is set to none.</description>
					<location chapter = "1" section = "10.1"/>
					<comment>NOTE:  This section needs to be clarified in the spec.  Illegal most likely, in this case, means a translation error, but this should be clearly spelled out.</comment>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>If the 'isThreadSafe' attribute of jsp:directive.page is false, the container must serialize requests to the JSP (it should behave like an STM servlet).</description>
					<location chapter = "1" section = "10.1"/>
					<comment>Cannot test isThreadSafe="true" as the keyword 'may' is present.  An implementation could potentially serialize requests in this case as well....thought I don't know why they would.</comment>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>The 'info' attribute of jsp:directive.page specifies an arbitrary string that is incorporated into the translated page, that can subsequently be obtained from the page's implementation of Servlet.getServletInfo().</description>
					<location chapter = "1" section = "10.1"/>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>The 'isErrorPage' attribute of jsp:directive.page. when true, will cause the implicit script language variable "exception" to be defined and its value is a reference to the offending Throwable from the source JSP page in error.</description>
					<location chapter = "1" section = "10.1"/>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>If the 'isErrorPage' attribute of jsp:directive.page is defined as false, then the implicit script language variable "exception" will not be available, and any such reference to this variable will result in a translation error.</description>
					<location chapter = "1" section = "10.1"/>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>The 'errorPage' attribute of jsp:directive.page, specifies the URL, either page-relative or context-relative, of a resource to which any Java programming language Throwable object(s) thrown but not caught by the page implementation are forwarded for error processing.  The following request attributes will be made available within the error page:</description>
					<location chapter = "1" section = "10.1"/>
					<sub-assertions>
						<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
							<id>_NUMBER_</id>
							<description>javax.servlet.jsp.jspException - throw Throwable object of the offending exception (for backwards compatibility with JSP 1.2)</description>
							<location chapter = "1" section = "4.3"/>
						</assertion>
						<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
							<id>_NUMBER_</id>
							<description>javax.servlet.err.exception - as per the Servlet specification.</description>
							<location chapter = "1" section = "4.3"/>
						</assertion>
						<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
							<id>_NUMBER_</id>
							<description>javax.servlet.error.status_code - as per the Servlet specification</description>
							<location chapter = "1" section = "4.3"/>
						</assertion>
						<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
							<id>_NUMBER_</id>
							<description>javax.servlet.error.exception_type - as per the Servlet specification.</description>
							<location chapter = "1" section = "4.3"/>
						</assertion>
						<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
							<id>_NUMBER_</id>
							<description>javax.servlet.err.message - as per the Servlet specification.</description>
							<location chapter = "1" section = "4.3"/>
						</assertion>
						<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
							<id>_NUMBER_</id>
							<description>javax.servlet.error.request_uri - as per the Servlet specification.</description>
							<location chapter = "1" section = "4.3"/>
						</assertion>
						<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
							<id>_NUMBER_</id>
							<description>javax.servlet.error.servlet_name - as per the Servlet specification.</description>
							<location chapter = "1" section = "4.3"/>
						</assertion>
						<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
							<id>_NUMBER_</id>
							<description>An instance of javax.servlet.jsp.ErrorData must be provided to the error page.</description>
							<location chapter = "1" section = "4.3"/>
						</assertion>
					</sub-assertions>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>If the 'errorPage' attribute of jsp:directive.page is defined, it will take presendence over any error pages defined in the web application's deployment descriptor.</description>
					<location chapter = "1" section = "10.1"/>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>The character encoding (Content-Type response header) can be in the form of TYPE, or TYPE; Charset=CHARSET, with an optional white space after the ';'.  Charset, if present, must be the IANA value for a character encoding.  Similarly, if TYPE is a MIME type, see the IANA registry for values.</description>
					<location chapter = "1" section = "10.1"/>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>The default Content-Type for JSP Pages in XML syntax is "text/xml".</description>
					<location chapter = "1" section = "10.1"/>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>If a charset portion of the value provided to the 'contentType' attribute is not specified, but the page encoding for the JSP page is specified, then the charset used will be that of the specified page encoding.</description>
					<location chapter = "1" section = "10.1"/>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>If a charset is not provided as part of the 'contentType' attribute value, and the page encoding does not specifiy a type, then the default charset is ISO-8859-1 for JSP pages in classic syntax.</description>
					<location chapter = "1" section = "10.1"/>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>If a charset is not provided as part of the 'contentType' attribute value, and the page encoding does not specifiy a type, then the default charset is UTF-8 for JSP pages in XML syntax.</description>
					<location chapter = "1" section = "10.1"/>
					<comment>Would UTF-16 be valid as well?</comment>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>The 'pageEncoding' attribute of jsp:directive.page specifies the character encoding of the page.  The value is in the form of CHARSET which my be the IANA value for a character encoding.  If no 'pageEncoding' attribute is specified, the default of ISO-8859-1 will be used.</description>
					<location chapter = "1" section = "10.1"/>
					<comment>What about the default encoding for JSP pages in XML syntax?</comment>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>A JSP container must support the presence of the jsp:directive.page element within a JSP page.</description>
					<location chapter = "6" section = "1.1"/>
				</assertion>
			</sub-assertions>
		</assertion>
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>_NUMBER_</id>
			<description>The jsp:directive.include element, like the include directive, is used to subsitute test and/or code during JSP page translation and has the same semantics as the include directive for JSP pages.</description>
			<location chapter = "6" section = "1.5"/>
			<sub-assertions>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>The jsp:directive:include element can appear anywhere within a JSP document.</description>
					<location chapter = "6" section = "1.5"/>
					<comment>A assume that this means it's legal to use without it being a child of &lt;jsp:root>?  If not, this should be clarified.</comment>
				</assertion>
				<assertion required = "false" impl-spec = "true" defined-by = "technology" status = "active" testable = "false">
					<id>_NUMBER_</id>
					<description>A JSP container can include a mechanism for being notified if an included file changes, so the container can recompile the JSP page.  However, the JSP 2.0 specification does not have a way of directing the JSP container that included files have changed.</description>
					<location chapter = "1" section = "10.5"/>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>The 'file' attribute of jsp:directive.include specifies the resource to be imported either relative to web appliation context path, or relative to the page performing the include.</description>
					<location chapter = "1" section = "10.5"/>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>The jsp:directive.include element includes content at translation time meaning the bytes of the included resource are directly inserted into the page.</description>
					<location chapter = "1" section = "10.5"/>
					<comment>Could test this by having a resource that checks for an attribute in the request, since it's included in place without including the result, the attribute would be null..</comment>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>A JSP container must support the presence of the jsp:directive.include element within a JSP page.</description>
					<location chapter = "6" section = "1.1"/>
				</assertion>
			</sub-assertions>
		</assertion>
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>_NUMBER_</id>
			<description>The jsp:declaration element is used to declare scripting language constructs that are available to all other scripting elements and follows the same semantics as declarations in standard JSP syntax.</description>
			<location chapter = "6" section = "1.6"/>
			<sub-assertions>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>A declaration (&lt;jsp:declaration>DECL_BODY&lt;/jsp:declaration>) must be a complete declarative statment, or sequence thereof, according to the syntax of the scripting language specified, otherwise a translation error will occur.</description>
					<location chapter = "1" section = "12.1"/>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>Declartaions do not produce any output into the current out stream.</description>
					<location chapter = "1" section = "12.1"/>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>Declarations are initialized when the JSP page is initialized and are made available to other delcarations, scriptlets, and expressions.</description>
					<location chapter = "1" section = "12.1"/>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>A JSP container must support the presence of the jsp:declaration element within a JSP page.</description>
					<location chapter = "6" section = "1.1"/>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>A JSP container must support the presence of the jsp:declaration element within a JSP page.</description>
					<location chapter = "6" section = "1.1"/>
				</assertion>
			</sub-assertions>
		</assertion>
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>_NUMBER_</id>
			<description>The jsp:scriptlet element are program fragments with the same semantics as scriptlets in standard JSP syntax.</description>
			<location chapter = "6" section = "1.7"/>
			<sub-assertions>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>Scriptlets (&lt;jsp:scriptlet>SCR_BODY&lt;/jsp:scriptlet>) can contain any code framents that are valid for the scripting language specified by the 'language' attribute of the page directive, and are executed at request time in the order that they appear on the JSP page.</description>
					<location chapter = "1" section = "12.2"/>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>A JSP container must support the presence of the jsp:scriptlet element within a JSP page.</description>
					<location chapter = "6" section = "1.1"/>
				</assertion>
			</sub-assertions>
		</assertion>
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>_NUMBER_</id>
			<description>The jsp:expression element is used to describe complete expressions in the scripting language that get evaluated at response time.  The semantics are the same as expressions in standard JSP syntax.</description>
			<location chapter = "6" section = "1.8"/>
			<sub-assertions>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>The result of the expression is coerced to a String and emitted into the current JspWriter (out) object.</description>
					<location chapter = "1" section = "12.3"/>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "false">
					<id>_NUMBER_</id>
					<description>If the result of the expression cannot be coerced to a String, the following must happen: If the problem is detected at translation time, a translation time error shall occur.  If the coercion cannot be detected during translation, a ClassCaseException shall be raised at request time.</description>
					<location chapter = "1" section = "12.3"/>
					<comment>This detection mechanism will be container dependant.  Cannot test.</comment>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>Expressions are evaluated left to right in the JSP document.</description>
					<location chapter = "1" section = "12.3"/>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>A translation error will occur if the expression is not a complete expression in the scripting language in which it is written.</description>
					<location chapter = "1" section = "12.3"/>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>A JSP container must support the presence of the jsp:expression element within a JSP page.</description>
					<location chapter = "6" section = "1.1"/>
				</assertion>
			</sub-assertions>
		</assertion>
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>_NUMBER_</id>
			<description>The jsp:element element is used to dynamically define an XML element</description>
			<location chapter = "6" section = "1.9"/>
			<sub-assertions>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>The name of the element can be provided via the 'name' attribute.</description>
					<location chapter = "6" section = "1.9"/>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>The value of the 'name' attribute can be provided via the jsp:attribute element.</description>
					<location chapter = "6" section = "1.9"/>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>The body of the jsp:element element will be the body of the generated element.</description>
					<location chapter = "6" section = "1.9"/>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>The body of the jsp:element element can be provided by the jsp:body element.</description>
					<location chapter = "6" section = "1.9"/>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>JSP containers must support the presence of the jsp:element within standard JSP pages.</description>
					<location chapter = "2" section = "1.1"/>
				</assertion>
			</sub-assertions>
		</assertion>
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>_NUMBER_</id>
			<description>The jsp:text element can be used to enclose template text that will be emitted to the current JspWriter (retaining any whitespace within the element).</description>
			<location chapter = "6" section = "1.12"/>
			<sub-assertions>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>JSP contianer's must support the presence of jsp:text elements within standard JSP files.</description>
					<location chapter = "6" section = "1.1"/>
				</assertion>
			</sub-assertions>
		</assertion>
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>_NUMBER_</id>
			<description>Any elements that are not standard or custom actions are to be passed to the current JspWriter after whitespace processing.</description>
			<location chapter = "6" section = "1.13"/>
		</assertion>
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "false">
			<id>_NUMBER_</id>
			<description>The following steps must be taken by containers when converting a JSP document to it's internal XML view:</description>
			<location chapter = "6" section = "2.1"/>
			<sub-assertions>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "false">
					<id>_NUMBER_</id>
					<description>Expand all include directives into the JSP framgments they include.</description>
					<location chapter = "6" section = "2.1"/>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "false">
					<id>_NUMBER_</id>
					<description>Add the jsp:id attribute</description>
					<location chapter = "6" section = "2.1"/>
				</assertion>
			</sub-assertions>
		</assertion>
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "false">
			<id>_NUMBER_</id>
			<description>The following steps must be taken by a container to convert a JSP page into its XML view:</description>
			<location chapter = "6" section = "2.2"/>
			<sub-assertions>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "false">
					<id>_NUMBER_</id>
					<description>Expand all include directives into the JSP framgments the include.</description>
					<location chapter = "6" section = "2.2"/>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "false">
					<id>_NUMBER_</id>
					<description>Add a jsp:root element as the root, with appropriate xmlns:jsp attribute, and conver the taglib directive into xmlns:attributes of the jsp:root element.</description>
					<location chapter = "6" section = "2.2"/>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "false">
					<id>_NUMBER_</id>
					<description>Convert declarations, scriptlets, and expressions into their equivalent XML forms.</description>
					<location chapter = "6" section = "2.2"/>
					<sub-assertions>
						<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "false">
							<id>_NUMBER_</id>
							<description>JSP declarations are translated into jsp:declaration elements.</description>
							<location chapter = "5" section = "2.7"/>
						</assertion>
						<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "false">
							<id>_NUMBER_</id>
							<description>JSP scriptlets are translated into jsp:scriptlet elements.</description>
							<location chapter = "5" section = "2.8"/>
						</assertion>
						<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "false">
							<id>_NUMBER_</id>
							<description>JSP expressions are translated into jsp:expression elements.</description>
							<location chapter = "6" section = "2.9"/>
						</assertion>
					</sub-assertions>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "false">
					<id>_NUMBER_</id>
					<description>Convert request-time attribute expressions into their equivalent XML forms.</description>
					<location chapter = "6" section = "2.2"/>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "false">
					<id>_NUMBER_</id>
					<description>Convert JSP quotations to XML quitations.</description>
					<location chapter = "6" section = "2.2"/>
				</assertion>
				<assertion required = "true" impl-spec = "true" defined-by = "technology" status = "active" testable = "false">
					<id>_NUMBER_</id>
					<description>Create jsp:text elements for all template text.</description>
					<location chapter = "6" section = "2.2"/>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "false">
					<id>_NUMBER_</id>
					<description>Add the jsp:id attribute.</description>
					<location chapter = "6" section = "2.2"/>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "false">
					<id>_NUMBER_</id>
					<description>JSP comments (&lt;%-- comment --%>) are not passed through to the XML view of a JSP page.</description>
					<location chapter = "6" section = "2.3"/>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "false">
					<id>_NUMBER_</id>
					<description>JSP page directives are translated into &lt;jsp:directive.page> elements.</description>
					<location chapter = "6" section = "2.4"/>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "false">
					<id>_NUMBER_</id>
					<description>JSP taglib directives are translated into xmlns:prefix attributes of the jsp:root element.</description>
					<location chapter = "5" section = "2.5"/>
				</assertion>
			</sub-assertions>
		</assertion>
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "false">
			<id>_NUMBER_</id>
			<description>As of JSP 2.0, the JSP container must support the jsp:id attribute which is only present in the XML view of a JSP page to improve the quality of translation time errors.</description>
			<location chapter = "6" section = "2.13"/>
		</assertion>
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>_NUMBER_</id>
			<description>Scripting variables can be defined in one of two ways:</description>
			<location chapter = "7" section = "1.4.7"/>
			<sub-assertions>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>Directly within the TLD for a particular action via the &lt;variable> element.</description>
					<location chapter = "7" section = "1.4.7"/>
					<comment>See appendix D and E for TLD info.</comment>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>Using a subclass of the TagExtraInfo interface, specifically providing a method body to the getVariableInfo() call.</description>
					<location chapter = "7" section = "1.4.7"/>
				</assertion>
			</sub-assertions>
		</assertion>
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>_NUBMER_</id>
			<description>A translation error must occur if a piece of JSP code that is to be translated into a JSPFragment (any JSP code in the body of a named attribute (&lt;jsp:attribute), that is declared to be a fragment in the TLD, or for the body of any tag handled by a Simple Tag Handler).</description>
			<location chapter = "7" section = "1.6"/>
		</assertion>
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>_NUMBER_</id>
			<description>A tag library can define listener classes (See Servlet.2.4 specification) which will be instantiated and registered by the JSP container.</description>
			<location chapter = "7" section = "1.9"/>
		</assertion>
		<assertion required = "true" impl-spec = "true" defined-by = "technology" status = "active" testable = "false">
			<id>_NUMBER_</id>
			<description>Listeners must be instantiated before the start of the application, however, the order in which listeners are registered is undefined.</description>
			<location chapter = "7" section = "1.9"/>
		</assertion>
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>_NUMBER_</id>
			<description>When tag libraries are deployed in a JSP container as a JAR file, the standard JAR conventions described in the Servlet 2.4 specification apply, including the conventions for dependencies on extensions.</description>
			<location chapter = "7" section = "2.1"/>
			<comment>Need to reference Servlet assertion ID's once created.</comment>
		</assertion>
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "false">
			<id>_NUMBER_</id>
			<description>Packaged tag libraries must have at least one tag library descript file.</description>
			<location chapter = "7" section = "2.1"/>
			<comment>Negative test: package the classes for a few tags, and then try to access via a JSP page.  Should result in a translation error.  Silly test, but I guess it works.</comment>
		</assertion>
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>_NUMBER_</id>
			<description>Both classic and simple tag handlers (implemented in either Java or as tag files) can be packaged together in the same JAR file.</description>
			<location chapter = "7" section = "2.1"/>
		</assertion>
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>_NUMBER_</id>
			<description>If a JSP container cannot locate a TLD resource path for a given URI, a fatal translation error shall result.</description>
			<location chapter = "7" section = "2.3"/>
		</assertion>
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>_NUMBER_</id>
			<description>If the URI resolves to two different TLD resource paths, a translation error will occur.</description>
			<location chapter = "7" section = "2.3"/>
		</assertion>
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>_NUMBER_</id>
			<description>A TLD must end with the extension ".tld" to be recognized by the container.</description>
			<location chapter = "7" section = "3.1"/>
			<comment>Again, a negative test where the TLD ends in say .tlv and a JSP tries to use a tag defined therein, a translation error will be raised.</comment>
		</assertion>
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>_NUMBER_</id>
			<description>When taglibraries are deployed in a JAR file, the TLDs must be present in the META-INF directory in order to be recognized by the container.</description>
			<location chapter = "7" section = "3.1"/>
			<comment>Negative test...same as above.  Positive tests for this will be further down the list.</comment>
		</assertion>
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>_NUMBER_</id>
			<description>When deployed directly in the web application, the TLD's must be be in the WEB-INF directory, or some directory thereof.</description>
			<location chapter = "7" section = "3.1"/>
		</assertion>
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>_NUMBER_</id>
			<description>A translation error will occur if the TLD resource path doesn't ultimately resolve directly to a TLD within the web application, or to a JAR file that has the taglib.tld file in the META-INF directory of the JAR.</description>
			<location chapter = "7" section = "3.1"/>
		</assertion>
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>_NUMBER_</id>
			<description>Explicit taglib map entries between URI's and TLD resource paths can be described using taglib elements of the Web Application Deployment descriptor (web.xml).</description>
			<location chapter = "7" section = "3.3"/>
		</assertion>
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>_NUMBER_</id>
			<description>Implicit taglib map entries can be described via a TLD file(s) located in the META-INF directory of the JAR file (TLD is not named taglib.tld).</description>
			<location chapter = "7" section = "3.4"/>
			<sub-assertions>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>Each TLD files is examined.  If it has a &lt;uri> element, then a new &lt;taglib> element is created, with a &lt;taglib-uri> subelement whose value is that of the &lt;uri> element, and with a &lt;taglib-location> subelement that refers to the TLD file.</description>
					<location chapter = "7" section = "3.4"/>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>If the created &lt;taglib> element has a different &lt;taglib-uri> to any in the taglib map, it is added to the map.</description>
					<location chapter = "7" section = "3.4"/>
				</assertion>
			</sub-assertions>
		</assertion>
		<assertion required = "true" impl-spec = "true" defined-by = "technology" status = "active" testable = "false">
			<id>_NUMBER_</id>
			<description>The JSP container may "know of" some specific URIs and may provide alternate implementations for the tag libraries described by these URI's.</description>
			<location chapter = "7" section = "3.9"/>
			<sub-assertions>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "false">
					<id>_NUMBER_</id>
					<description>When the container does provide an alternate implementation, the implementation must provide the same behavior as that described by the required, portable tag library description described by the URI.</description>
					<location chapter = "7" section = "3.9"/>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "false">
					<id>_NUMBER_</id>
					<description>A JSP container must always use the mapping specified for a URI in the web.xml deployment descriptor if present.  If the deployer wishes to use the platform-specific implementation of the well-known URI, the mapping for that URI should be removed at deployment time.</description>
					<location chapter = "7" section = "3.9"/>
				</assertion>
			</sub-assertions>
		</assertion>
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>_NUMBER_</id>
			<description>The &lt;taglib-uri> element may be URI of the following types:</description>
			<location chapter = "7" section = "3.6.1"/>
			<sub-assertions>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>An absolute URI.</description>
					<location chapter = "7" section = "3.6.1"/>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>A context-relative URI (URI starting with '/').</description>
					<location chapter = "7" section = "3.6.1"/>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>A page-relative URI (URI that doesn't start with '/').</description>
					<location chapter = "7" section = "3.6.1"/>
				</assertion>
			</sub-assertions>
		</assertion>
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>_NUMBER_</id>
			<description>If the &lt;taglib-location> sublement is a relative URI without a leading slash, the resolution of the taglib location will be relative to /WEB-INF.</description>
			<location chapter = "7" section = "3.6.1"/>
			<sub-assertions>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "false">
					<id>_NUMBER_</id>
					<description>The result of the resolution will be a context-relative path (starts with "/").</description>
					<location chapter = "7" section = "3.6.1"/>
				</assertion>
			</sub-assertions>
		</assertion>
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>_NUMBER_</id>
			<description>The following describes the resolution process of the taglib directive to compute the TLD resource path.</description>
			<location chapter = "7" section = "3.6.2"/>
			<sub-assertions>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>If the URI is an absolute URI, check the taglib map for an entry whose URI is the specified absolute URI.  If found, the corresponding taglib location is the TLD resource path.  The taglib will be usable in the page.</description>
					<location chapter = "7" section = "3.6.2"/>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>If the absolute URI is not found in the taglib map, a translation error will occur.</description>
					<location chapter = "7" section = "3.6.2"/>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUBMER_</id>
					<description>If the URI is a context-relative path (URI starts with '/'), look in taglib amp for an entry whose taglib URI matchs the provided URI.  If found, the corresponding location is the TLD resource path.  The tag library will be available to the page</description>
					<location chapter = "7" section = "3.6.2"/>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>If the context-relative URI is not found in the taglib map, then the URI provided by the taglib directive is the TLD resource path.</description>
					<location chapter = "7" section = "3.6.2"/>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>If at translation time, the resource (either a TLD or a JAR where taglib.tld is in the META-INF directory) doesn't exist as specified by the provided context-relative path, a translation error will occur.</description>
					<location chapter = "7" section = "3.6.2"/>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>If the URI is a page-relative path (the URI doens't start with a '/') look in the taglib map for the same page-relative path.  If found, the correspoding taglib location in the map is the TLD resource path.  The tag library will be available to the page.</description>
					<location chapter = "7" section = "3.6.2"/>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>If the page-relative URI is not found in the taglib map, resolve the page relative path to the current JSP page where the directive appears.  This will be used as the TLD resource path.  If the resource is found at the resolved location, the tag library will be available to the page.</description>
					<location chapter = "7" section = "3.6.2"/>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>If, at translation time, the resource identified by the resolved page-relative path doesn't exist (either a TLD or a JAR file with a taglib.tld in META-INF), a translation error will occur.</description>
					<location chapter = "7" section = "3.6.2"/>
				</assertion>
			</sub-assertions>
		</assertion>
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>_NUMBER_</id>
			<description>JSP containers must not alter their behavior based on the content, the presence, or the absence of a particular Tag or Tag Library Extension Element.</description>
			<location chapter = "7" section = "3.10"/>
		</assertion>
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "false">
			<id>_NUMBER_</id>
			<description>JSP containers must consider invalid any tag library that specifies mustUnderstand='true' for any Tag or Tag Library Extension element.</description>
			<location chapter = "7" section = "3.10"/>
			<comment>Marked untestable as container behavior in this case is not clear.</comment>
		</assertion>
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>_NUMBER_</id>
			<description>All attribute constraints as described in the TLD must be enforced by the container.</description>
			<location chapter = "7" section = "4.1.1"/>
			<comment>Series of negative tests.</comment>
		</assertion>
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>_NUMBER_</id>
			<description>The following must hold true for all tag handlers defined as tag files:</description>
			<location chapter = "8" section = "3"/>
			<sub-assertions>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>The tag file implementation must keep a copy of the JspContext instance passed to it by the invoking page via setJspContext().  This is called the 'Invoking JSP Context'.</description>
					<location chapter = "8" section = "3"/>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>The tag file implementation must create and maintain a second instance of JspContext called a 'JSP Context Wrapper'.  If the Invoking JSP Context is an instance of PageContext, the JSP Context Wrapper must also be an instance of PageContext.</description>
					<location chapter = "8" section = "3"/>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>For each infocation of the tag, the JSP Context Wrapper must present a clean page scope containing no initial elements.  </description>
					<location chapter = "8" section = "3"/>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>All scopes other than the page scope must be identical to this in the Invoking JSP Context and must be modified accofidingly when updates are made to those scopes in the JSP Context Wrapper.</description>
					<location chapter = "8" section = "3"/>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>Any modifications to the page scope, however, must not affect the Invoking JSP Context.</description>
					<location chapter = "8" section = "3"/>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>For each attribute declared and specified, a page-scoped variable must be created in the page scope of the JSP Context Wrapper.</description>
					<location chapter = "8" section = "3"/>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>The name of the variable must be the same as the declared attribute name. </description>
					<location chapter = "8" section = "3"/>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>The value of the variable must be the value of the attribute passed in during invocation.</description>
					<location chapter = "8" section = "3"/>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>For each attribute declared as optional and not specified, no page-scoped variable is created.</description>
					<location chapter = "8" section = "3"/>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>If the tag accepts dynamic attributes, then page-scoped variables must also be made available for each dynamic attribute passed in.</description>
					<location chapter = "8" section = "3"/>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>The 'pageContext' scripting variable must point to the JSP Context Wrapper instead of the Invoking JSP Context</description>
					<location chapter = "8" section = "3"/>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>The tag handler must behave as through a tag library descriptor entry was defined for it, in accordance with the tag, attribute, and variable directives that appear in the tag file translation unit.</description>
					<location chapter = "8" section = "3"/>
				</assertion>
			</sub-assertions>
		</assertion>
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>_NUMBER_</id>
			<description>If &lt;jsp:forward> is used within a tag file, the generated tag handler must stop processing upon the return of RequestDispatcher.forward() and throw a javax.servlet.jsp.SkipPageException</description>
			<location chapter = "8" section = "3"/>
			<comment>Package seems goofy.  Since SkipPageException is for use with SimpleTagHandlers, shouldn't this be in the tagext package?</comment>
		</assertion>
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>_NUMBER_</id>
			<description>If a tag file invokes a Classic Tag Handler which returns SKIP_PAGE, from doEndTag() , tag file must  terminate and SkipPageException must be thrown.</description>
			<location chapter = "8" section = "3"/>
		</assertion>
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>_NUMBER_</id>
			<description>If a tag file invokes a Classic Tag Handler invokes a a Simple Tag Handler which throws SkipPageException, the tag file must terminate and SkipePageException must be thrown.</description>
			<location chapter = "8" section = "3"/>
		</assertion>
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>_NUMBER_</id>
			<description>If a tag file invokes a Simple Tag Handler which throws a SkipPageException, processing must terminate with the tag file throwing a SkipPageException</description>
			<location chapter = "8" section = "3"/>
		</assertion>
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>_NUMBER_</id>
			<description>In the case of either Simple or Classic Tag Handlers, the doFinally() method must be called on enclising tags that implement the TryCatchFinally interface before returning.</description>
			<location chapter = "8" section = "3"/>
		</assertion>
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>_NUMBER_</id>
			<description>The doEndTag() methods of enclosing classic tags must not be called.</description>
			<location chapter = "8" section = "3"/>
			<comment>Is this related to the assertion above RE: TryCatchFinally?</comment>
		</assertion>
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>_NUMBER_</id>
			<description>When a tag file attempts to invoke a classic tag handler (i.e one that implements the Tag interface), it must cast the JspContext passed to the SimpleTag into a PageContext</description>
			<location chapter = "8" section = "3"/>
		</assertion>
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>_NUMBER_</id>
			<description>If the cast by a Simple Tag Handler of a JspContext to a PageContext fails, the invocation of the classic tag files, and a JspException must be thrown.</description>
			<location chapter = "8" section = "3"/>
			<comment>TCK will never run outside of a servlet env.  So the cast will always work.</comment>
		</assertion>
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>_NUMBER_</id>
			<description>Tag files can be packaged in the /META-INF/tags directory of a JAR file installed in the /WEB-INF/lib directory.</description>
			<location chapter = "8" section = "4.1"/>
			<sub-assertions>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>Any tags packaged in a JAR file must have a Tag Library Descriptor (TLD) present within the JAR file with each tag that is to be recognized by the container enumerated in the TLD.</description>
					<location chapter = "8" section = "4.2"/>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>Any tag files within a JAR file that are not defined within a TLD must be ignored by the container.</description>
					<location chapter = "8" section = "4.2"/>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "false">
					<id>_NUMBER_</id>
					<description>A tag library is considered invalid and must be rejected by the container if a &lt;tag-file> element has a &lt;name> subelement with the same content as a &lt;name> subelement in a &lt;tag> element.</description>
					<location chapter = "8" section = "4.2"/>
					<comment>Marked untestable as 'rejected' is not defined.</comment>
				</assertion>
			</sub-assertions>
		</assertion>
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>_NUMBER_</id>
			<description>Tag files can be packaged in the /WEB-INF/tags/ directory of a web application or a subdirectory thereof.</description>
			<location chapter = "8" section = "4.3"/>
			<sub-assertions>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>The JSP container must interpret the '/WEB-INF/tags/' directory and each subdirectory under it, as another implicitly defined tag library containing tag handlers defined by the tag files that appear in the directory.</description>
					<location chapter = "8" section = "4.3"/>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>The JSP container must generate an implicit tag library for each directory under and included /WEB-INF/tags/.</description>
					<location chapter = "8" section = "4.3"/>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>The tag library can only be imported via the tagdir attribute of the taglib directive.</description>
					<location chapter = "8" section = "4.3"/>
					<sub-assertions>
						<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "false">
							<id>_NUMBER_</id>
							<description>The &lt;tlib-version> element will be defined as 1.0</description>
							<location chapter = "8" section = "4.3"/>
						</assertion>
						<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "false">
							<id>_NUMBER_</id>
							<description>&lt;short-name> is derived from the directory name that that tag file resides in.</description>
							<location chapter = "8" section = "4.3"/>
							<sub-assertions>
								<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "false">
									<id>All '/' characters are replaced with '-'</id>
									<description/>
									<location chapter = "8" section = "4.3"/>
								</assertion>
							</sub-assertions>
						</assertion>
						<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "false">
							<id>_NUMBER_</id>
							<description>The &lt;tag-file> element is considered to exist for each tag file in this directory.  </description>
							<location chapter = "8" section = "4.3"/>
							<sub-assertions>
								<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "false">
									<id>_NUMBER_</id>
									<description>The &lt;name> for each is the filename of the tag file, withouth the .tag extension</description>
									<location chapter = "8" section = "4.3"/>
								</assertion>
								<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "false">
									<id>_NUMBER_</id>
									<description>The &lt;path> element for each is the path of the tag file, relative to the root of the web application.</description>
									<location chapter = "8" section = "4.3"/>
								</assertion>
							</sub-assertions>
						</assertion>
					</sub-assertions>
				</assertion>
			</sub-assertions>
		</assertion>
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>_NUMBER_</id>
			<description>Upon deployment, the JSP container must seach for and process all tag files appearing in these directories and subdirectories.  In processing a tag file, the container makes the custom actions defined in these tags available to JSP files.</description>
			<location chapter = "8" section = "4"/>
		</assertion>
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>_NUBMER_</id>
			<description>A translation error will occur of a page directive is present within a tag file.</description>
			<location chapter = "8" section = "5"/>
		</assertion>
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>_NUMBER_</id>
			<description>The taglib directive is legal within Tag files.  The semantics of the taglib directive within a tag file are identical to those of a JSP page.</description>
			<location chapter = "8" section = "5"/>
		</assertion>
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>_NUMBER_</id>
			<description>The include directive is legal within Tag files.  The semantics of the include directive within a tag file are identical to those of a JSP page.</description>
			<location chapter = "8" section = "5"/>
			<sub-assertions>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>If the included file contains syntax unsuitable for tag files, a translation error will occur.</description>
					<location chapter = "8" section = "5"/>
				</assertion>
			</sub-assertions>
		</assertion>
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>_NUMBER_</id>
			<description>The tag directive is only applicable to tag files.  Any attempt to use the tag directive in a JSP page will result in a translation error.</description>
			<location chapter = "8" section = "5"/>
		</assertion>
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>_NUMBER_</id>
			<description>The attribute directive is only applicable to tag files.  Any attempt to use the attribute directive in a JSP page will result in a translation error.</description>
			<location chapter = "8" section = "5"/>
		</assertion>
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>_NUMBER_</id>
			<description>The variable directive is only applicable to tag files.  Any attempt to use the variable directive in a JSP page will result in a translation error.</description>
			<location chapter = "8" section = "5"/>
		</assertion>
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>_NUMBER_</id>
			<description>The 'tag' directive is similar to the page directive, but applied to tag files instead of JSP's.</description>
			<location chapter = "8" section = "5.1"/>
			<sub-assertions>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>A translation unit can container more than one instance of the tag directive, all the attributes will apply to the complete translation unit (i.e. tag directives are position independent).</description>
					<location chapter = "8" section = "5.1"/>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>Unrecoginized attributes or values will result in a fatal translation error.</description>
					<location chapter = "8" section = "5.1"/>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>The 'display-name' attribute provides a short name that is intended to be displayed by tools.</description>
					<location chapter = "8" section = "5.1"/>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>Multiple 'display-name' attribute/value (re)definitions will result in a translation error.</description>
					<location chapter = "8" section = "5.1"/>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>The 'body-content' attribute specifies the body content of this tag.</description>
					<location chapter = "8" section = "5.1"/>
					<sub-assertions>
						<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
							<id>_NUMBER_</id>
							<description>A valid value is 'empty' meaning no body.</description>
							<location chapter = "8" section = "5.1"/>
						</assertion>
						<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
							<id>_NUMBER_</id>
							<description>A valid value is 'tagdependent'.</description>
							<location chapter = "8" section = "5.1"/>
						</assertion>
						<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
							<id>_NUMBER_</id>
							<description>A valid value is 'scriptless'</description>
							<location chapter = "8" section = "5.1"/>
						</assertion>
						<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
							<id>_NUMBER_</id>
							<description>If the 'body-content' attribute is not specified, it will default to 'scriptless'</description>
							<location chapter = "8" section = "5.1"/>
						</assertion>
						<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
							<id>_NUMBER_</id>
							<description>Any other value provided to the 'body-content' attribute aside from 'empty', 'tagdependent', or 'scriptless' will result in a translation error.</description>
							<location chapter = "8" section = "5.1"/>
						</assertion>
					</sub-assertions>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>Multiple 'body-content' attribute/value (re)definitions will result in a translation error.</description>
					<location chapter = "8" section = "5.1"/>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>The 'dynamic-attributes' attribute indicates whether this tag supports additional attributes with dynamic sata.</description>
					<location chapter = "8" section = "5.1"/>
					<sub-assertions>
						<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
							<id>_NUMBER_</id>
							<description>If 'true', the generated tag handler must implement the javax.servlet.jsp.tagext.DynamicAttributes interface.</description>
							<location chapter = "8" section = "5.1"/>
						</assertion>
						<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
							<id>_NUMBER_</id>
							<description>If 'false' the generated tag handler will not implement the javax.servlet.jsp.tagext.DynamicAttributes interface.</description>
							<location chapter = "8" section = "5.1"/>
						</assertion>
						<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "false">
							<id>_NUMBER_</id>
							<description>The default value is 'false'.</description>
							<location chapter = "8" section = "5.1"/>
						</assertion>
						<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
							<id>_NUMBER_</id>
							<description>If any values are  provided to the 'dynamic-attributes' attribute aside from 'true' or 'false' a translation error will occur.</description>
							<location chapter = "8" section = "5.1"/>
						</assertion>
					</sub-assertions>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>Multiple 'dyanmic-attribute' attribute/value (re)definitions will result in a translation error.</description>
					<location chapter = "8" section = "5.1"/>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>The 'small-icon' attribute specifies a relative path, from the tag source file, of an image file containg a small icon that can be used by tools.</description>
					<location chapter = "8" section = "5.1"/>
					<sub-assertions>
						<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "false">
							<id>_NUMBER_</id>
							<description>If the 'small-icon' attribute is not specified, no icon will be used.</description>
							<location chapter = "8" section = "5.1"/>
						</assertion>
					</sub-assertions>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>Multiple 'small-icon' attribute/value (re)definitions will result in a translation error.</description>
					<location chapter = "8" section = "5.1"/>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>The 'large-icon' attribute specifies a relative path from the tag source file, of an image file containing a large icon that can be used by tools.</description>
					<location chapter = "8" section = "5.1"/>
					<sub-assertions>
						<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "false">
							<id>_NUMBER_</id>
							<description>If the 'large-icon' attribute is not specified, no icon will be used.</description>
							<location chapter = "8" section = "5.1"/>
						</assertion>
					</sub-assertions>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>Multiple 'large-icon' attribute/value (re)definitions will result in a translation error.</description>
					<location chapter = "8" section = "5.1"/>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>The 'decription' attribute provides an arbitrary string that describes this tag.</description>
					<location chapter = "8" section = "5.1"/>
					<sub-assertions>
						<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "false">
							<id>_NUMBER_</id>
							<description>If the 'description' attribute is not specified, no description will be available.</description>
							<location chapter = "8" section = "5.1"/>
						</assertion>
					</sub-assertions>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>Multiple 'description' attribute/value (re)definitions will result in a translation error.</description>
					<location chapter = "8" section = "5.1"/>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>The 'example' attribute defines an arbitraty string describe the use of this action.</description>
					<location chapter = "8" section = "5.1"/>
					<sub-assertions>
						<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "false">
							<id>_NUMBER_</id>
							<description>If the 'example' attribute is not specified, no example string will be available.</description>
							<location chapter = "8" section = "5.1"/>
						</assertion>
					</sub-assertions>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>Multiple 'example' attribute/value (re)definitions will result in a translation error.</description>
					<location chapter = "8" section = "5.1"/>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>The 'language' attribute specifies the scripting language used by the tag file.</description>
					<location chapter = "8" section = "5.1"/>
					<sub-assertions>
						<assertion required = "true" impl-spec = "true" defined-by = "technology" status = "active" testable = "false">
							<id>_NUMBER_</id>
							<description>All scripting languages, specifiable by the tag directive's 'language' attribute, must provide some implicit objects that a JSP page author can use in declarations, scriptlets, and expressions (see Section JSP.1.3.8 for list of available implicit objects)</description>
							<location chapter = "1" section = "10.1"/>
						</assertion>
						<assertion required = "true" impl-spec = "true" defined-by = "technology" status = "active" testable = "false">
							<id>_NUMBER_</id>
							<description>All scripting languages, specifiable by the tag directive's 'language' attribute, must expose the Java technology object model to the script environment, especially implicit variables, JavaBeans components properties, and public methods.</description>
							<location chapter = "1" section = "10.1"/>
						</assertion>
						<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
							<id>_NUMBER_</id>
							<description>It is a fatal translation error for a tag directive with a non-"java" language attribute to appear after the first scripting has been encountered.</description>
							<location chapter = "1" section = "10.1"/>
						</assertion>
						<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
							<id>_NUMBER_</id>
							<description>The only required scripting language value for the 'language' attribute is "java".</description>
							<location chapter = "1" section = "10.1"/>
						</assertion>
					</sub-assertions>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>Multiple 'language' attribute/value (re)definitions will result in a translation error.</description>
					<location chapter = "8" section = "5.1"/>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>The 'import' attribute of the tag directive specifies the fully qualified Java programming language type name denoting a particular type, or of a package name following by the ".*" string, denoting all the public types declared in that package, that shall be imorted by the translated JSP page implementation and is thus available to the scripting language.</description>
					<location chapter = "8" section = "5.1"/>
					<sub-assertions>
						<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
							<id>_NUMBER_</id>
							<description>The default import list for a tag is java.lang.*, javax.servlet.*, javax.servlet.jsp.*, javax.servlet.http.*</description>
							<location chapter = "1" section = "10.1"/>
						</assertion>
					</sub-assertions>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>The 'pageEncoding' attribute of the tag directive specifies the character encoding of the tag.  The value is in the form of CHARSET which my be the IANA value for a character encoding.  If no 'pageEncoding' attribute is specified, the default of ISO-8859-1 will be used.</description>
					<location chapter = "8" section = "5.1"/>
					<comment>What about Tag files in XML?</comment>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>Multiple 'pageEncoding' attribute/value (re)definitions will result in a translation error.</description>
					<location chapter = "8" section = "5.1"/>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>The 'pageEncoding' attribute of the tag directive is not influenced at all by any global configuration present in the web.xml</description>
					<location chapter = "8" section = "5.1"/>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>The 'isScriptingEnabled' attribute specified whether scripting elements are legal within the tag file.</description>
					<location chapter = "8" section = "5.1"/>
					<sub-assertions>
						<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
							<id>_NUBMER_</id>
							<description>The 'isScriptingEnabled' attribute of the tag directive, if false, disallows the presence of scripting elements (scriptlets, expressions, declarations) within a given translation unit and will generate a translation error if they are present.</description>
							<location chapter = "1" section = "10.1"/>
						</assertion>
						<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
							<id>_NUMBER_</id>
							<description>The default value for 'isScriptingEnabled' of the tag directive, if not specified, is true.</description>
							<location chapter = "1" section = "10.1"/>
						</assertion>
						<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
							<id>_NUMBER_</id>
							<description>Any value other than 'true' or 'false' provided to the 'isScriptinEnabled' attribute will result in a translation error.</description>
							<location chapter = "8" section = "5.1"/>
						</assertion>
					</sub-assertions>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>Multiple 'isScriptingEnabled' attribute/value (re)definitions will result in a translation error.</description>
					<location chapter = "8" section = "5.1"/>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>The 'isELEnabled' attribute of the tag directive specifies whether or not the container should evaluate EL expressions.</description>
					<location chapter = "8" section = "5.1"/>
					<sub-assertions>
						<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
							<id>_NUMBER_</id>
							<description>The 'isELEnabled' attribute of the page directive , if false, will result in EL expressions not being evaluated by the container.</description>
							<location chapter = "1" section = "10.1"/>
						</assertion>
						<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
							<id>_NUMBER_</id>
							<description>The default value, if 'isELEnabled' is not specified, is true.</description>
							<location chapter = "1" section = "10.1"/>
						</assertion>
						<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
							<id>_NUMBER_</id>
							<description>Any value other than 'true' or 'false' provided to the 'isELEnabled' attribute will result in a translation error.</description>
							<location chapter = "8" section = "5.1"/>
						</assertion>
					</sub-assertions>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>Multiple 'isELEnabled' attribute/value (re)definitions will result in a translation error.</description>
					<location chapter = "8" section = "5.1"/>
				</assertion>
			</sub-assertions>
		</assertion>
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>_NUMBER_</id>
			<description>The attribute directive is analogous to the &lt;attribute> element in the Tag Library Descriptor, and allows for the declaration of custom action attributes.</description>
			<location chapter = "8" section = "5.2"/>
			<sub-assertions>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>The 'name' attribute specified the unique name of the attribute being declared.</description>
					<location chapter = "8" section = "5.2"/>
					<sub-assertions>
						<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
							<id>_NUMBER_</id>
							<description>A translation error will occur if the 'name' attribute is not specified.</description>
							<location chapter = "8" section = "5.2"/>
						</assertion>
					</sub-assertions>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>A translation error will occur if mnore than one attribute directive appears in the same translation unit with the same name.</description>
					<location chapter = "8" section = "5.2"/>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "false">
					<id>_NUMBER_</id>
					<description>The 'required' attribute indicates whether or not the attribute must be present.</description>
					<location chapter = "8" section = "5.2"/>
					<sub-assertions>
						<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
							<id>_NUMBER_</id>
							<description>If 'true' the attribute is requried and a translation error will occur if the attribute is not provided.</description>
							<location chapter = "8" section = "5.2"/>
						</assertion>
						<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
							<id>_NUMBER_</id>
							<description>If 'false', the attribute need not be present.</description>
							<location chapter = "8" section = "5.2"/>
						</assertion>
						<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
							<id>_NUMBER_</id>
							<description>If the 'required' attribute is not specified, the value of 'false' will be assumed.</description>
							<location chapter = "8" section = "5.2"/>
						</assertion>
					</sub-assertions>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>The 'fragment' attribute specifies whether this attribute is a fragment to be evaluated by the tag handler or a normal attribute to be evaluated by the container prior to being passed to the tag handler.</description>
					<location chapter = "8" section = "5.2"/>
					<sub-assertions>
						<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
							<id>_NUMBER_</id>
							<description>If 'true', the type of the attribute is fixed to javax.servlet.jsp.tagext.JspFragment and a translation error will occur if the 'type' attribute is specified.</description>
							<location chapter = "8" section = "5.2"/>
						</assertion>
						<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
							<id>_NUMBER_</id>
							<description>If 'true' the 'rtexprvalue' attribute is fixed at true.</description>
							<location chapter = "8" section = "5.2"/>
							<sub-assertions>
								<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
									<id>_NUMBER_</id>
									<description>A translation error will occur if the 'fragment' attribute is 'true' and the 'rtexprvalue' attribute is specified.</description>
									<location chapter = "8" section = "5.2"/>
								</assertion>
							</sub-assertions>
						</assertion>
						<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
							<id>_NUMBER_</id>
							<description>If 'false', the container will evaluate the attribute before passing it to the tag handler.</description>
							<location chapter = "8" section = "5.2"/>
						</assertion>
						<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
							<id>_NUMBER_</id>
							<description>If the 'fragment' attribute is not specified, the behavior will be as if it was defined as 'false'</description>
							<location chapter = "8" section = "5.2"/>
						</assertion>
					</sub-assertions>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>The 'rtexprevalue' attribute specifies whether this attribute accepts dynamic attribute value.</description>
					<location chapter = "8" section = "5.2"/>
					<sub-assertions>
						<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
							<id>_NUMBER_</id>
							<description>If 'true', the attribute can accept dynamic values.</description>
							<location chapter = "8" section = "5.2"/>
						</assertion>
						<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
							<id>_NUMBER_</id>
							<description>If 'false', the attribute cannot accept a dynamic value.  Any attempt to pass a dynamic value when false will result in a translation error.</description>
							<location chapter = "8" section = "5.2"/>
						</assertion>
						<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
							<id>_NUMBER_</id>
							<description>If 'rtexprvalue' is not specified, the default of 'false' will be assumed.</description>
							<location chapter = "8" section = "5.2"/>
						</assertion>
						<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
							<id>_NUMBER_</id>
							<description>A translation error will occur if any other value outside of 'true' or 'false' is provided.</description>
							<location chapter = "8" section = "5.2"/>
						</assertion>
					</sub-assertions>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>The 'type' attribute specifies the runtime type of the attribute being described.</description>
					<location chapter = "8" section = "5.2"/>
					<sub-assertions>
						<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
							<id>_NUMBER_</id>
							<description>If the 'type' attribute is not specified, the default of java.lang.String will be assumed.</description>
							<location chapter = "8" section = "5.2"/>
						</assertion>
					</sub-assertions>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>The 'description' attribute specifies a description of the attribute.</description>
					<location chapter = "8" section = "5.2"/>
					<sub-assertions>
						<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "false">
							<id>_NUMBER_</id>
							<description>If the 'description' attribute is not specified, no description will be available.</description>
							<location chapter = "8" section = "5.2"/>
						</assertion>
					</sub-assertions>
				</assertion>
			</sub-assertions>
		</assertion>
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>_NUMBER_</id>
			<description>The variable directive is analogous to the &lt;variable> element in the Tag Library Descriptor, and defines the details of a variable exposed by the tag handler to the calling page.</description>
			<location chapter = "8" section = "5.3"/>
			<sub-assertions>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>The 'name-given' attribute specifies the name of the scriptin variable to be exposed by the tag.</description>
					<location chapter = "8" section = "5.3"/>
					<sub-assertions>
						<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
							<id>_NUMBER_</id>
							<description>A translation error will occur if two variable directives have the same value for the 'name-given' attribute.</description>
							<location chapter = "8" section = "5.3"/>
						</assertion>
					</sub-assertions>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>The 'name-from-attribute' directive specifies the name of an attribute whose (translation-time) value will give the name of the variable.</description>
					<location chapter = "8" section = "5.3"/>
					<sub-assertions>
						<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
							<id>_NUMBER_</id>
							<description>A translation error will occur if two variable directives have the same value for the 'name-from-attribute' attribute.</description>
							<location chapter = "8" section = "5.3"/>
						</assertion>
					</sub-assertions>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>A translation error will occur if both the 'name-given' and the 'name-from-attribute' attributes are specified within the same directive.</description>
					<location chapter = "8" section = "5.3"/>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>A translation error will occur if neither the 'name-given' or the 'name-from-attribute' attributes are not specified wihin a variable directive.</description>
					<location chapter = "8" section = "5.3"/>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>The 'variable-class' attribute specifies the class of the variable.</description>
					<location chapter = "8" section = "5.3"/>
					<sub-assertions>
						<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
							<id>_NUMBER_</id>
							<description>If the 'variable-class' attribute is not specified, the default class of java.lang.String will be assumed.</description>
							<location chapter = "8" section = "5.3"/>
						</assertion>
					</sub-assertions>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>The 'scope' attribute specifies the scope of the variable being declared.</description>
					<location chapter = "8" section = "5.3"/>
					<sub-assertions>
						<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
							<id>_NUMBER_</id>
							<description>Valid values are AT_BEGIN, AT_END, or NESTED.</description>
							<location chapter = "8" section = "5.3"/>
						</assertion>
						<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
							<id>_NUMBER_</id>
							<description>If the 'scope' attribute is not specified, the default scope of NESTED will be used.</description>
							<location chapter = "8" section = "5.3"/>
						</assertion>
						<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
							<id>_NUMBER_</id>
							<description>If any other value is provided outside of AT_BEGIN, NESTED, or AT_END, a translation error will occur.</description>
							<location chapter = "8" section = "5.3"/>
						</assertion>
						<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
							<id>_NUMBER_</id>
							<description>A translation error must occur if both 'scope' and 'fragment' are specified.</description>
							<location chapter = "8" section = "5.3"/>
						</assertion>
					</sub-assertions>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>The 'declare' attribute specifies whether the variable is declared or not.</description>
					<location chapter = "8" section = "5.3"/>
					<sub-assertions>
						<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
							<id>_NUMBER_</id>
							<description>If 'true', the variable will be declared and available based on the specified scope.</description>
							<location chapter = "8" section = "5.3"/>
						</assertion>
						<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
							<id>_NUMBER_</id>
							<description>If 'false', the variable will not be declared.</description>
							<location chapter = "8" section = "5.3"/>
						</assertion>
						<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
							<id>_NUBMER_</id>
							<description>A translation error must occur if both 'declare' and 'fragment' are specified.</description>
							<location chapter = "8" section = "5.3"/>
						</assertion>
					</sub-assertions>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>The 'fragment' attribute specifies that the value of this variable is scoped to the specified fragment and does not appear in the boyd of the tag.</description>
					<location chapter = "8" section = "5.3"/>
					<sub-assertions>
						<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
							<id>_NUMBER_</id>
							<description>A translation error will occur if the value of 'fragment' does not match the name of an attribute declared earier in this page with 'fragment=true'.</description>
							<location chapter = "8" section = "5.3"/>
						</assertion>
						<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
							<id>_NUMBER_</id>
							<description>A translation error  will occur if 'fragment' is specified and either 'scope' or 'declare' is specified.</description>
							<location chapter = "8" section = "5.3"/>
						</assertion>
					</sub-assertions>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUBMER_</id>
					<description>The 'description' attribute provides an optional description for the variable being declared.</description>
					<location chapter = "8" section = "5.3"/>
					<sub-assertions>
						<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "false">
							<id>_NUMBER_</id>
							<description>If the 'description' attribute is not specified, no description will be available.</description>
							<location chapter = "8" section = "5.3"/>
						</assertion>
					</sub-assertions>
				</assertion>
			</sub-assertions>
		</assertion>
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "false">
			<id>_NUMBER_</id>
			<description>XML view of Tag Files</description>
			<location chapter = "8" section = "6"/>
			<sub-assertions>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>The XML equivalent of the tag directive is the jsp:directive.tag element.  The semantics followed are the same as the tag directive in standard syntax.</description>
					<location chapter = "8" section = "6"/>
					<sub-assertions>
						<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
							<id>_NUMBER_</id>
							<description>A translation unit can contain more than one instance of the tag directive, all the attributes will apply to the complete translation unit (i.e. tag directives are position independent).</description>
							<location chapter = "8" section = "5.1"/>
						</assertion>
						<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
							<id>_NUMBER_</id>
							<description>Unrecoginized attributes or values will result in a fatal translation error.</description>
							<location chapter = "8" section = "5.1"/>
						</assertion>
						<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
							<id>_NUMBER_</id>
							<description>The 'display-name' attribute provides a short name that is intended to be displayed by tools.</description>
							<location chapter = "8" section = "5.1"/>
						</assertion>
						<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
							<id>_NUMBER_</id>
							<description>Multiple 'display-name' attribute/value (re)definitions will result in a translation error.</description>
							<location chapter = "8" section = "5.1"/>
						</assertion>
						<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
							<id>_NUMBER_</id>
							<description>The 'body-content' attribute specifies the body content of this tag.</description>
							<location chapter = "8" section = "5.1"/>
							<sub-assertions>
								<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
									<id>_NUMBER_</id>
									<description>A valid value is 'empty' meaning no body.</description>
									<location chapter = "8" section = "5.1"/>
								</assertion>
								<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
									<id>_NUMBER_</id>
									<description>A valid value is 'tagdependent'.</description>
									<location chapter = "8" section = "5.1"/>
								</assertion>
								<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
									<id>_NUMBER_</id>
									<description>A valid value is 'scriptless'</description>
									<location chapter = "8" section = "5.1"/>
								</assertion>
								<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
									<id>_NUMBER_</id>
									<description>If the 'body-content' attribute is not specified, it will default to 'scriptless'</description>
									<location chapter = "8" section = "5.1"/>
								</assertion>
								<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
									<id>_NUMBER_</id>
									<description>Any other value provided to the 'body-content' attribute aside from 'empty', 'tagdependent', or 'scriptless' will result in a translation error.</description>
									<location chapter = "8" section = "5.1"/>
								</assertion>
							</sub-assertions>
						</assertion>
						<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
							<id>_NUMBER_</id>
							<description>Multiple 'body-content' attribute/value (re)definitions will result in a translation error.</description>
							<location chapter = "8" section = "5.1"/>
						</assertion>
						<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
							<id>_NUMBER_</id>
							<description>The 'dynamic-attributes' attribute indicates whether this tag supports additional attributes with dynamic sata.</description>
							<location chapter = "8" section = "5.1"/>
							<sub-assertions>
								<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
									<id>_NUMBER_</id>
									<description>If 'true', the generated tag handler must implement the javax.servlet.jsp.tagext.DynamicAttributes interface.</description>
									<location chapter = "8" section = "5.1"/>
								</assertion>
								<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
									<id>_NUMBER_</id>
									<description>If 'false' the generated tag handler will not implement the javax.servlet.jsp.tagext.DynamicAttributes interface.</description>
									<location chapter = "8" section = "5.1"/>
								</assertion>
								<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "false">
									<id>_NUMBER_</id>
									<description>The default value is 'false'.</description>
									<location chapter = "8" section = "5.1"/>
								</assertion>
								<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
									<id>_NUMBER_</id>
									<description>If any values are  provided to the 'dynamic-attributes' attribute aside from 'true' or 'false' a translation error will occur.</description>
									<location chapter = "8" section = "5.1"/>
								</assertion>
							</sub-assertions>
						</assertion>
						<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
							<id>_NUMBER_</id>
							<description>Multiple 'dyanmic-attribute' attribute/value (re)definitions will result in a translation error.</description>
							<location chapter = "8" section = "5.1"/>
						</assertion>
						<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
							<id>_NUMBER_</id>
							<description>The 'small-icon' attribute specifies a relative path, from the tag source file, of an image file containg a small icon that can be used by tools.</description>
							<location chapter = "8" section = "5.1"/>
							<sub-assertions>
								<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "false">
									<id>_NUMBER_</id>
									<description>If the 'small-icon' attribute is not specified, no icon will be used.</description>
									<location chapter = "8" section = "5.1"/>
								</assertion>
							</sub-assertions>
						</assertion>
						<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
							<id>_NUMBER_</id>
							<description>Multiple 'small-icon' attribute/value (re)definitions will result in a translation error.</description>
							<location chapter = "8" section = "5.1"/>
						</assertion>
						<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
							<id>_NUMBER_</id>
							<description>The 'large-icon' attribute specifies a relative path from the tag source file, of an image file containing a large icon that can be used by tools.</description>
							<location chapter = "8" section = "5.1"/>
							<sub-assertions>
								<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "false">
									<id>_NUMBER_</id>
									<description>If the 'large-icon' attribute is not specified, no icon will be used.</description>
									<location chapter = "8" section = "5.1"/>
								</assertion>
							</sub-assertions>
						</assertion>
						<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
							<id>_NUMBER_</id>
							<description>Multiple 'large-icon' attribute/value (re)definitions will result in a translation error.</description>
							<location chapter = "8" section = "5.1"/>
						</assertion>
						<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
							<id>_NUMBER_</id>
							<description>The 'decription' attribute provides an arbitrary string that describes this tag.</description>
							<location chapter = "8" section = "5.1"/>
							<sub-assertions>
								<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "false">
									<id>_NUMBER_</id>
									<description>If the 'description' attribute is not specified, no description will be available.</description>
									<location chapter = "8" section = "5.1"/>
								</assertion>
							</sub-assertions>
						</assertion>
						<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
							<id>_NUMBER_</id>
							<description>Multiple 'description' attribute/value (re)definitions will result in a translation error.</description>
							<location chapter = "8" section = "5.1"/>
						</assertion>
						<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
							<id>_NUMBER_</id>
							<description>The 'example' attribute defines an arbitraty string describe the use of this action.</description>
							<location chapter = "8" section = "5.1"/>
							<sub-assertions>
								<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "false">
									<id>_NUMBER_</id>
									<description>If the 'example' attribute is not specified, no example string will be available.</description>
									<location chapter = "8" section = "5.1"/>
								</assertion>
							</sub-assertions>
						</assertion>
						<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
							<id>_NUMBER_</id>
							<description>Multiple 'example' attribute/value (re)definitions will result in a translation error.</description>
							<location chapter = "8" section = "5.1"/>
						</assertion>
						<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
							<id>_NUMBER_</id>
							<description>The 'language' attribute specifies the scripting language used by the tag file.</description>
							<location chapter = "8" section = "5.1"/>
							<sub-assertions>
								<assertion required = "true" impl-spec = "true" defined-by = "technology" status = "active" testable = "false">
									<id>_NUMBER_</id>
									<description>All scripting languages, specifiable by the tag directive's 'language' attribute, must provide some implicit objects that a JSP page author can use in declarations, scriptlets, and expressions (see Section JSP.1.3.8 for list of available implicit objects)</description>
									<location chapter = "1" section = "10.1"/>
								</assertion>
								<assertion required = "true" impl-spec = "true" defined-by = "technology" status = "active" testable = "false">
									<id>_NUMBER_</id>
									<description>All scripting languages, specifiable by the tag directive's 'language' attribute, must expose the Java technology object model to the script environment, especially implicit variables, JavaBeans components properties, and public methods.</description>
									<location chapter = "1" section = "10.1"/>
								</assertion>
								<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
									<id>_NUMBER_</id>
									<description>It is a fatal translation error for a tag directive with a non-"java" language attribute to appear after the first scripting has been encountered.</description>
									<location chapter = "1" section = "10.1"/>
								</assertion>
								<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
									<id>_NUMBER_</id>
									<description>The only required scripting language value for the 'language' attribute is "java".</description>
									<location chapter = "1" section = "10.1"/>
								</assertion>
							</sub-assertions>
						</assertion>
						<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
							<id>_NUMBER_</id>
							<description>Multiple 'language' attribute/value (re)definitions will result in a translation error.</description>
							<location chapter = "8" section = "5.1"/>
						</assertion>
						<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
							<id>_NUMBER_</id>
							<description>The 'import' attribute of the tag directive specifies the fully qualified Java programming language type name denoting a particular type, or of a package name following by the ".*" string, denoting all the public types declared in that package, that shall be imorted by the translated JSP page implementation and is thus available to the scripting language.</description>
							<location chapter = "8" section = "5.1"/>
							<sub-assertions>
								<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
									<id>_NUMBER_</id>
									<description>The default import list for a tag is java.lang.*, javax.servlet.*, javax.servlet.jsp.*, javax.servlet.http.*</description>
									<location chapter = "1" section = "10.1"/>
								</assertion>
							</sub-assertions>
						</assertion>
						<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
							<id>_NUMBER_</id>
							<description>The 'pageEncoding' attribute of the tag directive specifies the character encoding of the tag.  The value is in the form of CHARSET which my be the IANA value for a character encoding.  If no 'pageEncoding' attribute is specified, the default of ISO-8859-1 will be used.</description>
							<location chapter = "8" section = "5.1"/>
							<comment>What about Tag files in XML?</comment>
						</assertion>
						<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
							<id>_NUMBER_</id>
							<description>Multiple 'pageEncoding' attribute/value (re)definitions will result in a translation error.</description>
							<location chapter = "8" section = "5.1"/>
						</assertion>
						<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
							<id>_NUMBER_</id>
							<description>The 'pageEncoding' attribute of the tag directive is not influenced at all by any global configuration present in the web.xml</description>
							<location chapter = "8" section = "5.1"/>
						</assertion>
						<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
							<id>_NUMBER_</id>
							<description>The 'isScriptingEnabled' attribute specified whether scripting elements are legal within the tag file.</description>
							<location chapter = "8" section = "5.1"/>
							<sub-assertions>
								<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
									<id>_NUBMER_</id>
									<description>The 'isScriptingEnabled' attribute of the tag directive, if false, disallows the presence of scripting elements (scriptlets, expressions, declarations) within a given translation unit and will generate a translation error if they are present.</description>
									<location chapter = "1" section = "10.1"/>
								</assertion>
								<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
									<id>_NUMBER_</id>
									<description>The default value for 'isScriptingEnabled' of the tag directive, if not specified, is true.</description>
									<location chapter = "1" section = "10.1"/>
								</assertion>
								<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
									<id>_NUMBER_</id>
									<description>Any value other than 'true' or 'false' provided to the 'isScriptinEnabled' attribute will result in a translation error.</description>
									<location chapter = "8" section = "5.1"/>
								</assertion>
							</sub-assertions>
						</assertion>
						<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
							<id>_NUMBER_</id>
							<description>Multiple 'isScriptingEnabled' attribute/value (re)definitions will result in a translation error.</description>
							<location chapter = "8" section = "5.1"/>
						</assertion>
						<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
							<id>_NUMBER_</id>
							<description>The 'isELEnabled' attribute of the tag directive specifies whether or not the container should evaluate EL expressions.</description>
							<location chapter = "8" section = "5.1"/>
							<sub-assertions>
								<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
									<id>_NUMBER_</id>
									<description>The 'isELEnabled' attribute of the page directive , if false, will result in EL expressions not being evaluated by the container.</description>
									<location chapter = "1" section = "10.1"/>
								</assertion>
								<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
									<id>_NUMBER_</id>
									<description>The default value, if 'isELEnabled' is not specified, is true.</description>
									<location chapter = "1" section = "10.1"/>
								</assertion>
								<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
									<id>_NUMBER_</id>
									<description>Any value other than 'true' or 'false' provided to the 'isELEnabled' attribute will result in a translation error.</description>
									<location chapter = "8" section = "5.1"/>
								</assertion>
							</sub-assertions>
						</assertion>
						<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
							<id>_NUMBER_</id>
							<description>Multiple 'isELEnabled' attribute/value (re)definitions will result in a translation error.</description>
							<location chapter = "8" section = "5.1"/>
						</assertion>
					</sub-assertions>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>The attribute directive of a tag file can be described in XML using the jsp:directive.attribute element.  The semantics of this element are the same as the attribute directive in standard syntax.</description>
					<location chapter = "8" section = "6"/>
					<sub-assertions>
						<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
							<id>_NUMBER_</id>
							<description>The 'name' attribute specified the unique name of the attribute being declared.</description>
							<location chapter = "8" section = "5.2"/>
							<sub-assertions>
								<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
									<id>_NUMBER_</id>
									<description>A translation error will occur if the 'name' attribute is not specified.</description>
									<location chapter = "8" section = "5.2"/>
								</assertion>
							</sub-assertions>
						</assertion>
						<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
							<id>_NUMBER_</id>
							<description>A translation error will occur if mnore than one attribute directive appears in the same translation unit with the same name.</description>
							<location chapter = "8" section = "5.2"/>
						</assertion>
						<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "false">
							<id>_NUMBER_</id>
							<description>The 'required' attribute indicates whether or not the attribute must be present.</description>
							<location chapter = "8" section = "5.2"/>
							<sub-assertions>
								<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
									<id>_NUMBER_</id>
									<description>If 'true' the attribute is requried and a translation error will occur if the attribute is not provided.</description>
									<location chapter = "8" section = "5.2"/>
								</assertion>
								<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
									<id>_NUMBER_</id>
									<description>If 'false', the attribute need not be present.</description>
									<location chapter = "8" section = "5.2"/>
								</assertion>
								<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
									<id>_NUMBER_</id>
									<description>If the 'required' attribute is not specified, the value of 'false' will be assumed.</description>
									<location chapter = "8" section = "5.2"/>
								</assertion>
							</sub-assertions>
						</assertion>
						<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
							<id>_NUMBER_</id>
							<description>The 'fragment' attribute specifies whether this attribute is a fragment to be evaluated by the tag handler or a normal attribute to be evaluated by the container prior to being passed to the tag handler.</description>
							<location chapter = "8" section = "5.2"/>
							<sub-assertions>
								<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
									<id>_NUMBER_</id>
									<description>If 'true', the type of the attribute is fixed to javax.servlet.jsp.tagext.JspFragment and a translation error will occur if the 'type' attribute is specified.</description>
									<location chapter = "8" section = "5.2"/>
								</assertion>
								<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
									<id>_NUMBER_</id>
									<description>If 'true' the 'rtexprvalue' attribute is fixed at true.</description>
									<location chapter = "8" section = "5.2"/>
									<sub-assertions>
										<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
											<id>_NUMBER_</id>
											<description>A translation error will occur if the 'fragment' attribute is 'true' and the 'rtexprvalue' attribute is specified.</description>
											<location chapter = "8" section = "5.2"/>
										</assertion>
									</sub-assertions>
								</assertion>
								<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
									<id>_NUMBER_</id>
									<description>If 'false', the container will evaluate the attribute before passing it to the tag handler.</description>
									<location chapter = "8" section = "5.2"/>
								</assertion>
								<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
									<id>_NUMBER_</id>
									<description>If the 'fragment' attribute is not specified, the behavior will be as if it was defined as 'false'</description>
									<location chapter = "8" section = "5.2"/>
								</assertion>
							</sub-assertions>
						</assertion>
						<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
							<id>_NUMBER_</id>
							<description>The 'rtexprevalue' attribute specifies whether this attribute accepts dynamic attribute value.</description>
							<location chapter = "8" section = "5.2"/>
							<sub-assertions>
								<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
									<id>_NUMBER_</id>
									<description>If 'true', the attribute can accept dynamic values.</description>
									<location chapter = "8" section = "5.2"/>
								</assertion>
								<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
									<id>_NUMBER_</id>
									<description>If 'false', the attribute cannot accept a dynamic value.  Any attempt to pass a dynamic value when false will result in a translation error.</description>
									<location chapter = "8" section = "5.2"/>
								</assertion>
								<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
									<id>_NUMBER_</id>
									<description>If 'rtexprvalue' is not specified, the default of 'false' will be assumed.</description>
									<location chapter = "8" section = "5.2"/>
								</assertion>
								<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
									<id>_NUMBER_</id>
									<description>A translation error will occur if any other value outside of 'true' or 'false' is provided.</description>
									<location chapter = "8" section = "5.2"/>
								</assertion>
							</sub-assertions>
						</assertion>
						<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
							<id>_NUMBER_</id>
							<description>The 'type' attribute specifies the runtime type of the attribute being described.</description>
							<location chapter = "8" section = "5.2"/>
							<sub-assertions>
								<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
									<id>_NUMBER_</id>
									<description>If the 'type' attribute is not specified, the default of java.lang.String will be assumed.</description>
									<location chapter = "8" section = "5.2"/>
								</assertion>
							</sub-assertions>
						</assertion>
						<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
							<id>_NUMBER_</id>
							<description>The 'description' attribute specifies a description of the attribute.</description>
							<location chapter = "8" section = "5.2"/>
							<sub-assertions>
								<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "false">
									<id>_NUMBER_</id>
									<description>If the 'description' attribute is not specified, no description will be available.</description>
									<location chapter = "8" section = "5.2"/>
								</assertion>
							</sub-assertions>
						</assertion>
					</sub-assertions>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>The variable directive of a tag file can be described in XML using the jsp:directive.variable element.  The semantics are the same as the variable directive in standard syntax.</description>
					<location chapter = "8" section = "5.2"/>
					<sub-assertions>
						<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
							<id>_NUMBER_</id>
							<description>The 'name-given' attribute specifies the name of the scriptin variable to be exposed by the tag.</description>
							<location chapter = "8" section = "5.3"/>
							<sub-assertions>
								<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
									<id>_NUMBER_</id>
									<description>A translation error will occur if two variable directives have the same value for the 'name-given' attribute.</description>
									<location chapter = "8" section = "5.3"/>
								</assertion>
							</sub-assertions>
						</assertion>
						<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
							<id>_NUMBER_</id>
							<description>The 'name-from-attribute' directive specifies the name of an attribute whose (translation-time) value will give the name of the variable.</description>
							<location chapter = "8" section = "5.3"/>
							<sub-assertions>
								<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
									<id>_NUMBER_</id>
									<description>A translation error will occur if two variable directives have the same value for the 'name-from-attribute' attribute.</description>
									<location chapter = "8" section = "5.3"/>
								</assertion>
							</sub-assertions>
						</assertion>
						<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
							<id>_NUMBER_</id>
							<description>A translation error will occur if both the 'name-given' and the 'name-from-attribute' attributes are specified within the same directive.</description>
							<location chapter = "8" section = "5.3"/>
						</assertion>
						<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
							<id>_NUMBER_</id>
							<description>A translation error will occur if neither the 'name-given' or the 'name-from-attribute' attributes are not specified wihin a variable directive.</description>
							<location chapter = "8" section = "5.3"/>
						</assertion>
						<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
							<id>_NUMBER_</id>
							<description>The 'variable-class' attribute specifies the class of the variable.</description>
							<location chapter = "8" section = "5.3"/>
							<sub-assertions>
								<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
									<id>_NUMBER_</id>
									<description>If the 'variable-class' attribute is not specified, the default class of java.lang.String will be assumed.</description>
									<location chapter = "8" section = "5.3"/>
								</assertion>
							</sub-assertions>
						</assertion>
						<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
							<id>_NUMBER_</id>
							<description>The 'scope' attribute specifies the scope of the variable being declared.</description>
							<location chapter = "8" section = "5.3"/>
							<sub-assertions>
								<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
									<id>_NUMBER_</id>
									<description>Valid values are AT_BEGIN, AT_END, or NESTED.</description>
									<location chapter = "8" section = "5.3"/>
								</assertion>
								<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
									<id>_NUMBER_</id>
									<description>If the 'scope' attribute is not specified, the default scope of NESTED will be used.</description>
									<location chapter = "8" section = "5.3"/>
								</assertion>
								<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
									<id>_NUMBER_</id>
									<description>If any other value is provided outside of AT_BEGIN, NESTED, or AT_END, a translation error will occur.</description>
									<location chapter = "8" section = "5.3"/>
								</assertion>
								<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
									<id>_NUMBER_</id>
									<description>A translation error must occur if both 'scope' and 'fragment' are specified.</description>
									<location chapter = "8" section = "5.3"/>
								</assertion>
							</sub-assertions>
						</assertion>
						<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
							<id>_NUMBER_</id>
							<description>The 'declare' attribute specifies whether the variable is declared or not.</description>
							<location chapter = "8" section = "5.3"/>
							<sub-assertions>
								<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
									<id>_NUMBER_</id>
									<description>If 'true', the variable will be declared and available based on the specified scope.</description>
									<location chapter = "8" section = "5.3"/>
								</assertion>
								<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
									<id>_NUMBER_</id>
									<description>If 'false', the variable will not be declared.</description>
									<location chapter = "8" section = "5.3"/>
								</assertion>
								<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
									<id>_NUBMER_</id>
									<description>A translation error must occur if both 'declare' and 'fragment' are specified.</description>
									<location chapter = "8" section = "5.3"/>
								</assertion>
							</sub-assertions>
						</assertion>
						<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
							<id>_NUMBER_</id>
							<description>The 'fragment' attribute specifies that the value of this variable is scoped to the specified fragment and does not appear in the boyd of the tag.</description>
							<location chapter = "8" section = "5.3"/>
							<sub-assertions>
								<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
									<id>_NUMBER_</id>
									<description>A translation error will occur if the value of 'fragment' does not match the name of an attribute declared earier in this page with 'fragment=true'.</description>
									<location chapter = "8" section = "5.3"/>
								</assertion>
								<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
									<id>_NUMBER_</id>
									<description>A translation error  will occur if 'fragment' is specified and either 'scope' or 'declare' is specified.</description>
									<location chapter = "8" section = "5.3"/>
								</assertion>
							</sub-assertions>
						</assertion>
						<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
							<id>_NUBMER_</id>
							<description>The 'description' attribute provides an optional description for the variable being declared.</description>
							<location chapter = "8" section = "5.3"/>
							<sub-assertions>
								<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "false">
									<id>_NUMBER_</id>
									<description>If the 'description' attribute is not specified, no description will be available.</description>
									<location chapter = "8" section = "5.3"/>
								</assertion>
							</sub-assertions>
						</assertion>
					</sub-assertions>
				</assertion>
			</sub-assertions>
		</assertion>
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>_NUMBER_</id>
			<description>A JSP page is valid for a Java Platform if and only if the JSP page implementation class, together with any other classes defined by the JSP container, is a valid program for the given Java Platform, and if it passes the validation methods for all the tag libraries associated with the JSP page.</description>
			<location chapter = "9" section = "1.1"/>
		</assertion>
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "false">
			<id>_NUMBER_</id>
			<description>In JSP 2.0 only 'init' and 'destroy' events are allowed events.</description>
			<location chapter = "10" section = "1"/>
		</assertion>
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>_NUMBER_</id>
			<description>A JSP page author may provide a jspInit() method, which if present, must be called by the container to prepare the page before the first request is delivered.</description>
			<location chapter = "10" section = "1"/>
		</assertion>
		<assertion required = "true" impl-spec = "true" defined-by = "technology" status = "active" testable = "false">
			<id>_NUMBER_</id>
			<description>A JSP page author may provide a jspDestroy() method that can be called by a Container, when a request is not being serviced by the JSP page, to reclaim resources.</description>
			<location chapter = "10" section = "1.1.1"/>
		</assertion>
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "false">
			<id>_NUMBER_</id>
			<description>A translation error will occur if a  JSP page author attempts to override any Servlet methods through a declaration scripting element.</description>
			<location chapter = "10" section = "1.1.1"/>
			<comment>Reference 10.2.4 -- All methods in defined by the javax.servlet.Servlet interface are declared final.</comment>
		</assertion>
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>_NUMBER_</id>
			<description>The enforcement of the contract between the JSP container and the JSP page author is aided by the requirement that the Servlet class corresponding to the JSP page must implement the HttpJspPage interface if the protocol is HTTP.</description>
			<location chapter = "10" section = "1.1.2"/>
		</assertion>
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "false">
			<id>_NUMBER_</id>
			<description>The enforcement of the contract between the JSP container and the JSP page author is aided by the requirement that the Servlet class corresponding to the JSP page must implement the JspPage interface of the protocol in not HTTP.</description>
			<location chapter = "10" section = "1.1.2"/>
		</assertion>
		<assertion required = "true" impl-spec = "true" defined-by = "technology" status = "active" testable = "false">
			<id>_NUMBER_</id>
			<description>The name of the JSP implementation class is implementation dependent.</description>
			<location chapter = "10" section = "2"/>
		</assertion>
		<assertion required = "true" impl-spec = "true" defined-by = "technology" status = "active" testable = "false">
			<id>_NUMBER_</id>
			<description>The package that the JSP implementation class belongs to is implementation depenedent.</description>
			<location chapter = "10" section = "2"/>
		</assertion>
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>_NUMBER_</id>
			<description>All JSP implementation classes must implement the following methods</description>
			<location chapter = "10" section = "2.1"/>
			<comment>reflection baby!</comment>
			<sub-assertions>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>Method with signature: public void jspInit()</description>
					<location chapter = "10" section = "2.1"/>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>Method with signature: public void jspDestroy()</description>
					<location chapter = "10" section = "2.1"/>
				</assertion>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>Method with signature: public void _jspService(&lt;ServletRequestSubType>, &lt;ServletResponseSubType>) throws IOException, ServletException -- NOTE: The request/response subtype indicates that the request and response object provided must implement the javax.servlet.ServletRequest and javax.servlet.ServletResponse interfaces respectively.</description>
					<location chapter = "10" section = "2.1"/>
					<sub-assertions>
						<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "false">
							<id>_NUMBER_</id>
							<description>The _jspService(ServletRequest, ServletResponse) method may not be declared in a JSP page via the JSP declaration mechanism.</description>
							<location chapter = "10" section = "2,1"/>
						</assertion>
					</sub-assertions>
				</assertion>
			</sub-assertions>
		</assertion>
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "false">
			<id>_NUMBER_</id>
			<description>JSP containers that conform to this specification (in both JSP page implementation classes, and JSP container runtime) must implement the javax.servlet.ServletRequest and javax.servlet.ServletResponse interfaces.</description>
			<location chapter = "10" section = "2.1"/>
			<comment>XXX Sent request for clarification on this one</comment>
		</assertion>
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>_NUMBER_</id>
			<description>All JSP 2.0 compliant containers must support a simple precompilation protocol, as well as some basic reserved parameter names.</description>
			<location chapter = "10" section = "4"/>
			<sub-assertions>
				<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
					<id>_NUMBER_</id>
					<description>A request to a page with the request parameter 'jsp_precompile" is a precompilation request.</description>
					<location chapter = "10" section = "4"/>
					<sub-assertions>
						<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
							<id>_NUMBER_</id>
							<description>If the value of the request parameter 'jsp_precompile' is 'true' the request will not be delivered to the target page.</description>
							<location chapter = "10" section = "4.2"/>
						</assertion>
						<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
							<id>_NUMBER_</id>
							<description>If the value of the request parameter 'jsp_precompile' is 'false', the request will not be delivered to the target page.</description>
							<location chapter = "10" section = "4.2"/>
						</assertion>
						<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
							<id>_NUMBER_</id>
							<description>If the value of the request parameter 'jsp_precompile' is 'debug', the request will not be delivered to the target page.</description>
							<location chapter = "10" section = "4.2"/>
						</assertion>
						<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
							<id>_NUMBER_</id>
							<description>If the value of the request parameter 'jsp_precompile' is empty (i.e. ""), the request will not be delivered to the target page.</description>
							<location chapter = "10" section = "4.2"/>
						</assertion>
						<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
							<id>_NUMBER_</id>
							<description>If the value of the request parameter 'jsp_precompile' is any other value aside from 'true', 'false', 'debug', or an empty parameter, a translation error will occur.</description>
							<location chapter = "10" section = "4.2"/>
						</assertion>
					</sub-assertions>
				</assertion>
			</sub-assertions>
		</assertion>
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "false">
			<id>_NUMBER_</id>
			<description>All JSP 2.0 containers must implement JSR-045 by generating source map debugging information for JSP pages written in either standard or XML syntax.</description>
			<location chapter = "10" section = "5"/>
		</assertion>
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "false">
			<id>_NUMBER_</id>
			<description>The JSP compiler, when producing a class with JSP-045 debug extensions must produce a .class file with a SourceDebugExtension attribute, mapping each lione or lines of JSP code to the corresponding generated line or lines of Java code.</description>
			<location chapter = "10" section = "5"/>
		</assertion>
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "false">
			<id>_NUMBER_</id>
			<description>The strata, as defined by JSP-045, that maps to the original JSP source must be named JSP in the Source Debug Extension.</description>
			<location chapter = "10" section = "5"/>
		</assertion>
	</assertions>
</spec>
