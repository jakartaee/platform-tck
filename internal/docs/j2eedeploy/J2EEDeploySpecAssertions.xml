<?xml version="1.0" encoding="US-ASCII"?>
<!--

    Copyright (c) 2018, 2020 Oracle and/or its affiliates. All rights reserved.

    This program and the accompanying materials are made available under the
    terms of the Eclipse Public License v. 2.0, which is available at
    http://www.eclipse.org/legal/epl-2.0.

    This Source Code may also be made available under the following Secondary
    Licenses when the conditions for such availability set forth in the
    Eclipse Public License v. 2.0 are satisfied: GNU General Public License,
    version 2 with the GNU Classpath Exception, which is available at
    https://www.gnu.org/software/classpath/license.html.

    SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0

-->

<?xml-stylesheet href = 'file:///files/tools/docs/xsl/assertions/spec_assertions.xsl' type = 'text/xsl'?>

<spec>
	<next-available-id/>
	<previous-id/>
	<technology>JavaEEDeploy</technology>
	<id>JavaEEDeploy</id>
	<name>Java EE Application Deployment API</name>
	<version>1.2</version>
	<location-names>
		<chapters>
			<chapter id="1" name="J2EE Deployment API">
				<sections>
					<section id="1" name="Overivew"/>
					<section id="2" name="Scope"/>
					<section id="2.1" name="Relationship to the J2EE Management Specification"/>
					<section id="2.2" name="Replacing a J2EE Application"/>
					<section id="3" name="Organization"/>
					<section id="4" name="Object Interaction Diagram Notation"/>
					<section id="5" name="Acknowledgements"/>
				</sections>
			</chapter>
			<chapter id="2" name="Roles">
				<sections>
					<section id="1" name="J2EE Product Provider"/>
					<section id="2" name="Tool Provider"/>
					<section id="3" name="Deployer"/>
				</sections>
			</chapter>
			<chapter id="3" name="Interface Overview">
				<sections>
					<section id="1" name="Tool Provider Interfaces"/>
					<section id="2" name="Tool Provider Classes"/>
					<section id="3" name="Tool Provider Interfaces Diagrams"/>
					<section id="4" name="J2EE Product Provider Interfaces"/>
					<section id="4.1" name="jakarta.enterprise.deploy.spi.factories package"/>
					<section id="4.2" name="jakarta.enterprise.deploy.spi.status package"/>
					<section id="4.3" name="jakarta.enterprise.deploy.shared.factories package"/>
					<section id="5" name="J2EE Product Provider Interfaces Diagram"/>
					<section id="6" name="Shared Classes"/>
					<section id="6.1" name="jakarta.enterprise.deploy.shared package"/>
					<section id="6.2" name="jakarta.enterprise.deploy.shared.factories package"/>
					<section id="7" name="Environment Requirements"/>
					<section id="7.1" name="Tool's Security Permission Set"/>
				</sections>
			</chapter>
			<chapter id="4" name="DeploymentManager">
				<sections>
					<section id="1" name="DeploymentManager Requirements"/>
					<section id="2" name="DeploymentManager Methods"/>
					<section id="3" name="Internationalization"/>
					<section id="4" name="Object Interaction Diagrams for DeploymentManager"/>
					<section id="5" name="DeploymentManager and the J2EE Management Specification"/>
					<section id="5.1" name="Listing Deployed Modules"/>
					<section id="5.2" name="Module Start and Stop"/>
				</sections>
			</chapter>
			<chapter id="5" name="Deployment Configuration Components">
				<sections>
					<section id="1" name="Runtime Configuration Components"/>
					<section id="1.1" name="Deployment Configuration Beans"/>
					<section id="1.2" name="Deployment Descriptor Beans"/>
					<section id="2" name="ModuleType Enumeration Objects"/>
					<section id="3" name="Module DTD Version"/>
					<section id="4" name="DConfigBean Version"/>
					<section id="4.1" name="DConfigBean VersionType Enumeration Objects"/>
					<section id="5" name="XPath syntax"/>
					<section id="5.1" name="AbsoluteLocationPath Syntax"/>
					<section id="5.2" name="RelativeLocationPath Syntax"/>
					<section id="6" name="Client Applications"/>
					<section id="7" name="Object Interaction Diagrams for Deployment Configuration Beans"/>
					<section id="7.1" name="Restore Configuration Beans"/>
				</sections>
			</chapter>
			<chapter id="6" name="Deployment Target">
				<sections>
					<section id="1" name="Target Methods"/>
					<section id="2" name="Target Examples"/>
					<section id="3" name="Target and the J2EE Management Specification"/>
				</sections>
			</chapter>
			<chapter id="7" name="TargetModuleID">
				<sections>
					<section id="1" name="TargetModuleID Methods"/>
					<section id="2" name="TargetModuleID and the J2EE Management Specification"/>
				</sections>
			</chapter>
			<chapter id="8" name="ProgressObject">
				<sections>
					<section id="1" name="ProgressObject Methods"/>
					<section id="2" name="DeploymentStatus Interface"/>
					<section id="2.1" name="Deployment Command Enumeration Objects"/>
					<section id="2.2" name="DeploymentStatus Enumeration Objects"/>
					<section id="2.3" name="Progress Action Enumeration Objects"/>
					<section id="2.4" name="DeploymentStatus Message"/>
					<section id="2.5" name="DeploymentStatus Methods"/>
					<section id="3" name="ClientConfiguration Methods"/>
					<section id="4" name="Object Interaction Diagrams for a ProgressObject"/>
					<section id="5" name="ProgressObject and the J2EE Management Specification"/>
				</sections>
			</chapter>
			<chapter id="9" name="DeploymentManager Discovery">
				<sections>
					<section id="1" name="DeploymentFactory"/>
					<section id="2" name="DeploymentFactoryManager"/>
					<section id="2.1" name="DeploymentFactoryManager Methods"/>
					<section id="2.2" name="URI"/>
					<section id="3" name="Object Interaction Diagrams for DeploymentManager Discovery"/>
					<section id="3.1" name="DeploymentFactory Discovery"/>
				</sections>
			</chapter>
			<chapter id="10" name="Exceptions"/>
		</chapters>
	</location-names>
	<assertions>
		<assertion status="active" required="true" impl-spec="false" defined-by="technology" testable="true">
			<id>J2EEDeploy:SPEC:1</id>
			<description>The J2EE Product Provider is responsible for providing an implementation of the interfaces defined in the javx.enterprise.deploy.spi package.  The product must be able to communicate with any third-party development tool that adheres to this specification.  The Product Provider is responsibe for implementing: 1) A deployment manager. 2) Deployment factories, for accessing their product's deployment manager. 3) The deployment configuration components for their product.</description>
			<location chapter="2" section="1"/>
		</assertion>
		<assertion required="true" impl-spec="false" defined-by="technology" status="active" testable="true">
			<id>J2EEDeploy:SPEC:2</id>
			<description>The Tool Provider is responsible for providing an implementation of the interfaces defined in the jakarta.enterprise.deploy.model package.  In addition, the tool must provide a means to discover and interact with a designated J2EE product's deployment manager and to display the configuration beans provided by it.</description>
			<location chapter="2" section="2"/>
		</assertion>
		<assertion required="true" impl-spec="false" defined-by="technology" status="active" testable="false">
			<id>J2EEDeploy:SPEC:3</id>
			<description>The tool must provide a means to discover and interact with a designated J2EE product's deployment manager and to display the configuration beans provided by it.</description>
			<location chapter="2" section="2"/>
		</assertion>
		<assertion required="true" impl-spec="true" defined-by="technology" status="active" testable="false">
			<id>J2EEDeploy:SPEC:4</id>
			<description>The Deployer is responsible for configuring and deploying J2EE modules on a specific J2EE product.  Deployment is typically a three stage process: 1) Configuration. 2) Distribution. 3) Start execution.</description>
			<location chapter="2" section="3"/>
		</assertion>
		<assertion required="true" impl-spec="false" defined-by="technology" status="active" testable="true">
			<id>J2EEDeploy:SPEC:5</id>
			<description>Tools must be able to access the DeploymentManager, DConfigBeans and helper classes through the classpath or via a classloader.</description>
			<location chapter="3" section="7"/>
		</assertion>
		<assertion required="true" impl-spec="false" defined-by="technology" status="active" testable="true">
			<id>J2EEDeploy:SPEC:6</id>
			<description>The DeploymentManager must have a minimum set of security permissions in the tool's environment in order to perform its functions.  They are listed in table 3-1 of the J2EE Deployment API Specification 1.0.</description>
			<location chapter="3" section="7.1"/>
		</assertion>
		<assertion required="true" impl-spec="false" defined-by="technology" status="active" testable="true">
			<id>J2EEDeploy:SPEC:7</id>
			<description>At least one DeploymentManager object must be provided per J2EE product.</description>
			<location chapter="4" section="1"/>
		</assertion>
		<assertion required="true" impl-spec="false" defined-by="technology" status="active" testable="false">
			<id>J2EEDeploy:SPEC:8</id>
			<description>The DeploymentManager processes only properly packaged J2EE application or stand-alone module archives (EAR, JAR, WAR, and RAR) files.  It does not participate in the predeployment assembly or packaging of the archives.</description>
			<location chapter="4" section="1"/>
		</assertion>
		<assertion required="true" impl-spec="false" defined-by="technology" status="active" testable="true">
			<id>J2EEDeploy:SPEC:9</id>
			<description>A disconnected DeploymentManager is acquired by calling the single arguement method DeploymentFactory.getDisconnectedDeploymentManager(name).</description>
			<location chapter="4" section="1"/>
		</assertion>
		<assertion required="true" impl-spec="false" defined-by="technology" status="active" testable="true">
			<id>J2EEDeploy:SPEC:10</id>
			<description>A DeploymentManager running disconnected from its J2EE product can only configure modules but not perform administrative operations.  If any of the administrative operations: distribute, start, stop, undeploy, or redeploy are called, an IllegalStateException must be thrown.</description>
			<location chapter="4" section="1"/>
		</assertion>
		<assertion required="true" impl-spec="false" defined-by="technology" status="active" testable="true">
			<id>J2EEDeploy:SPEC:11</id>
			<description>The DeploymentManager must be able to distribute a configured J2EE module to the designated targets.</description>
			<location chapter="4" section="1"/>
		</assertion>
		<assertion required="true" impl-spec="false" defined-by="technology" status="active" testable="true">
			<id>J2EEDeploy:SPEC:12</id>
			<description>A locale setting is in effect for all the Deployment API subpackages in the provider's implementation for the duration of a deployment session.</description>
			<location chapter="4" section="3"/>
		</assertion>
		<assertion required="true" impl-spec="false" defined-by="technology" status="active" testable="true">
			<id>J2EEDeploy:SPEC:13</id>
			<description>The J2EE Product Provider provides the configuration beans for its product.</description>
			<location chapter="5" section="1.1"/>
		</assertion>
		<assertion required="true" impl-spec="false" defined-by="technology" status="active" testable="true">
			<id>J2EEDeploy:SPEC:14</id>
			<description>The Tool Provider provides the DD beans for its product.</description>
			<location chapter="5" section="1.2"/>
		</assertion>
		<assertion required="true" impl-spec="false" defined-by="technology" status="active" testable="true">
			<id>J2EEDeploy:SPEC:15</id>
			<description>The DConfigBean Version number is the version number of the J2EE platform for which the API's were built.</description>
			<location chapter="5" section="4"/>
		</assertion>
		<assertion required="true" impl-spec="false" defined-by="technology" status="active" testable="true">
			<id>J2EEDeploy:SPEC:16</id>
			<description>At least one Target object must be defined per J2EE product.  The product target information must be accessible to the DeploymentManager.</description>
			<location chapter="6" section="1"/>
		</assertion>
		<assertion required="true" impl-spec="false" defined-by="technology" status="active" testable="true">
			<id>J2EEDeploy:SPEC:17</id>
			<description>The TargetModuleID object contains a target-module ID, which is a unique identifier associated with a distributed module.  The identifying information consists of the target name on which the module is distributed and a unique identifier assigned to the module.</description>
			<location chapter="7" section="0"/>
		</assertion>
		<assertion required="true" impl-spec="false" defined-by="technology" status="active" testable="true">
			<id>J2EEDeploy:SPEC:18</id>
			<description>The module identifier must be unique within the J2EE product.  The identifier remains the same for the life of the module on the product.</description>
			<location chapter="7" section="0"/>
		</assertion>
		<assertion required="true" impl-spec="false" defined-by="technology" status="active" testable="true">
			<id>J2EEDeploy:SPEC:19</id>
			<description>The module identifier must be unique within the J2EE product.  The identifier remains the same for the life of the module on the product.</description>
			<location chapter="7" section="0"/>
		</assertion>
		<assertion required="true" impl-spec="false" defined-by="technology" status="active" testable="true">
			<id>J2EEDeploy:SPEC:20</id>
			<description>A TargetModuleID for a stand-alone module will have no parent and no children references.</description>
			<location chapter="7" section="0"/>
		</assertion>
		<assertion required="true" impl-spec="false" defined-by="technology" status="active" testable="true">
			<id>J2EEDeploy:SPEC:21</id>
			<description>An unsupported cancel or stop operation [on a ProgressObject] must throw an UnsupportedOperationException.</description>
			<location chapter="8" section="0"/>
		</assertion>
		<assertion required="true" impl-spec="false" defined-by="technology" status="active" testable="false">
			<id>J2EEDeploy:SPEC:22</id>
			<description>A stop request on an in-process operation allows the operation on the current TargetModuleID to run to completion but does not process any of the remaining unprocessed TargetModuleID objects.  The processed TargetModuleID objects must be returned by the method getResultTargetModuleIDs.</description>
			<location chapter="8" section="0"/>
		</assertion>
		<assertion required="true" impl-spec="false" defined-by="technology" status="active" testable="true">
			<id>J2EEDeploy:SPEC:23</id>
			<description>A ClientConfiguration object is returned by the ProgressObject for each application client distributed to the J2EE product.  The ClientConfiguration object is a JavaBean that installs, configures and executes an application client.  A ClientExecuteException is thrown if the configuration is incomplete.</description>
			<location chapter="8" section="0"/>
		</assertion>
		<assertion required="true" impl-spec="false" defined-by="technology" status="active" testable="false">
			<id>J2EEDeploy:SPEC:24</id>
			<description>A deployment tool must acquire a reference to the J2EE product's DeploymentManager through a DeploymentFactory object.</description>
			<location chapter="9" section="0"/>
		</assertion>
		<assertion required="true" impl-spec="false" defined-by="technology" status="active" testable="true">
			<id>J2EEDeploy:SPEC:25</id>
			<description>Each J2EE product provider must provide at least one implementation of this class[DeploymentFactory] with its product.</description>
			<location chapter="9" section="1"/>
		</assertion>
		<assertion required="true" impl-spec="false" defined-by="technology" status="active" testable="true">
			<id>J2EEDeploy:SPEC:26</id>
			<description>The class implementing this interface[DeploymentFactory] must have a constructor that takes no arguements, and must be stateless(that is two instances of the class must always behave the same).</description>
			<location chapter="9" section="1"/>
                        <sub-assertions>
			<assertion required="true" impl-spec="false" defined-by="technology" status="active" testable="true">
				<id>J2EEDeploy:SPEC:26.1</id>
				<description>When a tool requests a DeploymentManager and provides a URI, the DeploymentFactoryManager is responsible for finding a DeploymentFactory that recognizes the URI and for using it to return the corresponding DeploymentManager.  If the DeploymentFactory understands the URI, it will return a DeploymentManager object; otherwise it returns null.</description>
				<location chapter="9" section="2"/>
                        </assertion>
                        <assertion required="true" impl-spec="false" defined-by="technology" status="active" testable="true">
					<id>J2EEDeploy:SPEC:26.1.1</id>
					<description>The JAR manifest file key, J2EE-DeploymentFactory-Implementation-Class, must be used to identify the class file or files that are the DeploymentFactory implementations of a J2EE product provider.  This name/value pair enables a deployment tool to discover DeploymentFacotyr objects to create and register with the DeploymentFactoryManager.</description>
					<location chapter="9" section="3.1"/>
	                </assertion>
			</sub-assertions>
		</assertion>
	</assertions>
</spec>
