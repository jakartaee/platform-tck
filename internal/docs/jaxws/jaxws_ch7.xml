<!--

    Copyright (c) 2018, 2020 Oracle and/or its affiliates. All rights reserved.

    This program and the accompanying materials are made available under the
    terms of the Eclipse Public License v. 2.0, which is available at
    http://www.eclipse.org/legal/epl-2.0.

    This Source Code may also be made available under the following Secondary
    Licenses when the conditions for such availability set forth in the
    Eclipse Public License v. 2.0 are satisfied: GNU General Public License,
    version 2 with the GNU Classpath Exception, which is available at
    https://www.gnu.org/software/classpath/license.html.

    SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0

-->

		<!-- Chapter Annotations -->
        <!-- next available id is 7024 -->
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>JAXWS:SPEC:7000</id>
			<description>
Conformance (Correctness of annotations): An implementation MUST check at runtime that the annotations pertaining to a method being invoked, either on the client or on the server, as well as any containing program elements (i.e. classes, packages) is in conformance with the specification for that annotation </description>
			<location chapter = "7" section = ""/>
		</assertion>
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>JAXWS:SPEC:7001</id>
			<description>
Conformance (Handling incorrect annotations): If an incorrect or inconsistent annotation is detected:  In a client setting, an implementation MUST NOT invoke the remote operation being invoked, if any.  Instead, it MUST throw a WebServiceException, setting its cause to an exception approximating  the cause of the error (e.g. an IllegalArgumentException or a ClassNotFoundException). In a server setting, annotation, an implementation MUST NOT dispatch to an endpoint implementation object. Rather, it MUST generate a fault appropriate to the binding in use.
			</description>
			<location chapter = "7" section = ""/>
		</assertion>
                <assertion required="true" impl-spec="false" defined-by="technology"
                           status="active" testable="false">
                    <id>JAXWS:SPEC:7023</id>
                    <description>
                        Conformance (Unsupported WebServiceFeatureAnnotations): If an unrecongnized or unsupported annotation annotated with the WebServiceFeatureAnnotation meta-annotation:
                    </description>
                    <location chapter="7" section=""/>
                    
                    <sub-assertions>
                        <assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "false">
                            <id>JAXWS:SPEC:7023.1</id> <description>In a client setting, an implementation MUST NOT invoke any remote operations, if any.                        
                            </description>
                            <location chapter="7" section=""/>
                        </assertion>
                        
                        <assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "false">
                            <id>JAXWS:SPEC:7023.2</id>
                            <description>In a client setting, Instead, it MUST throw a WebServiceException, setting the cause to an exception approximating the cause of the error.
                            </description>
                            <location chapter="7" section=""/>
                        </assertion>
                        <assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "false">
                            <id>JAXWS:SPEC:7023.3</id>
                            <description>In a server setting, annotation, an implementation MUST NOT dispatch to an endpoint implementation object.
                            </description>
                            <location chapter="7" section=""/>
                        </assertion>
                        <assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "false">
                            <id>JAXWS:SPEC:7023.4</id>
                            <description>In a server setting, Rather it MUST generate a fault appropriate to the binding in use.
                            </description>
                            <location chapter="7" section=""/>
                        </assertion>
                    </sub-assertions>
                </assertion>   
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>JAXWS:SPEC:7002</id>
			<description>
The ServiceMode annotation is used to specify the mode for a provider class, i.e. whether a provider wants to have access to protocol message payloads (e.g. a SOAP body) or the entire protocol messages (e.g. a SOAP envelope).
			</description>
			<location chapter = "7" section = "1"/>
		</assertion>
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>JAXWS:SPEC:7003</id>
			<description>
The WebFault annotation is used when mapping WSDL faults to Java exceptions, see section 2.5. It is used to capture the name of the fault element used when marshalling the JAXB type generated from the global element referenced by the WSDL fault message. It can also be used to customize the mapping of service specific exceptions to WSDL faults.
			</description>
			<location chapter = "7" section = "2"/>
		</assertion>
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>JAXWS:SPEC:7004</id>
			<description>
The RequestWrapper annotation is applied to the methods of an SEI. It is used to capture the JAXB generated request wrapper bean and the element name and namespace for marshalling / unmarshalling the bean. The default value of localName element is the operationName as defined in WebMethod annotation and the default value for the targetNamespace element is the target namespace of the SEI. When starting from Java, this annotation is used to resolve overloading conflicts in document literal mode. Only the className element is required in this case.
			</description>
			<location chapter = "7" section = "3"/>
		</assertion>
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>JAXWS:SPEC:7005</id>
			<description>
The ResponseWrapper annotation is applied to the methods of an SEI. It is used to capture the JAXB generated response wrapper bean and the element name and namespace for marshalling / unmarshalling the bean. The default value of the localName element is the operationName as defined in the WebMethod appended with Response and the default value of the targetNamespace element is the target namespace of the SEI. When starting from Java, this annotation is used to resolve overloading conflicts in document literal mode. Only the className element is required in this case.
			</description>
			<location chapter = "7" section = "4"/>
		</assertion>
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>JAXWS:SPEC:7006</id>
			<description>
The WebServiceClient annotation is specified on a generated service class (see 2.7). It is used to associate a class with a specific Web service, identify by a URL to a WSDL document and the qualified name of 10 a wsdl:service element.
			</description>
			<location chapter = "7" section = "5"/>
		</assertion>
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>JAXWS:SPEC:7007</id>
			<description>
The WebEndpoint annotation is specified on the getPortName() methods of a generated service class (see 2.7). It is used to associate a get method with a specific wsdl:port, identified by its local name (a NCName).
			</description>
			<location chapter = "7" section = "6"/>
		</assertion>
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>JAXWS:SPEC:7008</id>
			<description>
The WebServiceProvider annotation is specified on classes that implement a strongly typed javax.xml.ws.Provider. It is used to declare that a class that satisfies the requirements for a provider (see 5.1) does indeed define a Web service endpoint, much like the WebService annotation does for SEI-based endpoints.
			</description>
			<location chapter = "7" section = "7"/>
		</assertion>
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>JAXWS:SPEC:7012</id>
			<description>
Conformance (WebServiceProvider and WebService): A class annotated with the WebServiceProvider annotation MUST NOT carry a WebService annotation.
			</description>
			<location chapter = "7" section = "7"/>
		</assertion>
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>JAXWS:SPEC:7009</id>
			<description>
The BindingType annotation is applied to an endpoint implementation class. It specifies the binding to use when publishing an endpoint of this type.
			</description>
			<location chapter = "7" section = "8"/>
		</assertion>
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>JAXWS:SPEC:7010</id>
			<description>
The WebServiceRef annotation is used to declare a reference to a Web service. It follows the resource pattern exemplified by the javax.annotation.Resource annotation in JSR-250 [31]. The WebServiceRef annotation is required to be honored when running on the Java EE 5 platform, where it is subject to the common resource injection rules described by the platform specification [32].
			</description>
			<location chapter = "7" section = "9"/>
		</assertion>
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>JAXWS:SPEC:7011</id>
			<description>
Conformance (JSR-181 conformance): A JAX-WS 2.0 implementation MUSTbe conformant to the JAX-WS profile of JSR-181 1.1. As a convenience to the reader, the following sections reproduce the definition of the JSR-181 annotations 8
applicable to JAX-WS.  7.10.1 jakarta.jws.WebService, 7.10.2 jakarta.jws.WebMethod, 7.10.3 jakarta.jws.OneWay, 7.10.4 jakarta.jws.WebParam, 7.10.5 jakarta.jws.WebResult, 7.10.6 jakarta.jws.SOAPBinding, 7.10.7 jakarta.jws.HandlerChain
			</description>
			<location chapter = "7" section = "10"/>
		</assertion>
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>JAXWS:SPEC:7013</id>
			<description>
Conformance (JSR-181 conformance): A JAX-WS 2.0 implementation MUST be conformant to the JAXWS profile of JSR-181 1.1
			</description>
			<location chapter = "7" section = "11"/>
		</assertion>
                <assertion required="true" impl-spec="false" defined-by="technology"
                           status="active" testable="true">
                    <id>JAXWS:SPEC:7017</id>
                    <description>
                        The Action annotation is applied to the methods of a SEI. It used to specify the input, output WSAddressing
Action values associated with the annotated method.
                    </description>
                    <location chapter="7" section="12"/>
                    <sub-assertions>
                        <assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
                            <id>JAXWS:SPEC:7017.1</id>
                            <description><br/>
                                Add the following Table 7.12<br/>
                                <br/>
                                Property  input<br/>
                                Description  Action for the wsdl:input operation<br/>
                                Default ""<br/>
                                <br/>
                            </description>
                            <location chapter="7" section="12"/>
                        </assertion>
                        <assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
                            <id>JAXWS:SPEC:7017.2</id>
                            <description><br/>
                                Add the following Table 7.12<br/>
                                <br/>
                                Property  output<br/>
                                Description  Action for the wsdl:output operation<br/>
                                Default ""<br/>
                                <br/>
                            </description>
                            <location chapter="7" section="12"/>
                        </assertion>
                        <assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
                            <id>JAXWS:SPEC:7017.3</id>
                            <description><br/>
                                The Action annotation is applied to the methods of a SEI. 
                            </description>
                            <location chapter="7" section="12"/>
                        </assertion>
                    </sub-assertions>
                </assertion>              
                
                <assertion required="true" impl-spec="false" defined-by="technology"
                           status="active" testable="true">
                    <id>JAXWS:SPEC:7018</id>
                    <description>
                        The FaultAction annotation is used within the Action annotation to specify the WS-Addressing Action
of a service specific exception.
                    </description>
                    <location chapter="7" section="13"/>
                    <sub-assertions>
                        <assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
                            <id>JAXWS:SPEC:7018.1</id>
                            <description><br/>
                                Add the following Table 7.13<br/>
                                <br/>
                                Property  value<br/>
                                Description  Action for the wsdl:fault operation<br/>
                                Default ""<br/>
                                <br/>
                            </description>
                            <location chapter="7" section="13"/>
                        </assertion>
                        <assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
                            <id>JAXWS:SPEC:7018.2</id>
                            <description><br/>
                                Add the following Table 7.13<br/>
                                <br/>
                                Property  className<br/>
                                Description  Name of the exception class<br/>
                                Default No defaults, required property<br/>
                                <br/>
                            </description>
                            <location chapter="7" section="13"/>
                        </assertion>
                    </sub-assertions>
                </assertion>      
                
                <assertion required="true" impl-spec="false" defined-by="technology"
                           status="active" testable="false">
                    <id>JAXWS:SPEC:7019</id>
                    <description>
                        javax.xml.ws.spi.WebServiceFeatureAnnotation
                        The WebServiceFeatureAnnotation is a meta-annotation used by a JAX-WS implementation to identify other annotations as WebServiceFeatures.  JAX-WS provides the following annotations as WebServiceFeatures: javax.xml.ws.soap.Addressing, javax.xml.ws.soap.MTOM, and javax.xml.ws.RespectBinding.  
                    </description>
                    <location chapter="7" section="14"/>
                    <sub-assertions>
                        <assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "false">
                            <id>JAXWS:SPEC:7019.1</id>
                            <description>If a JAX-WS implementation encounters an annotation annotated with the WebServiceFeatureAnnotation that it does not support or recognize an ERROR MUST be given.                
                            </description>
                            <location chapter="7" section="14"/>
                        </assertion>
                        <assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "false">
                            <id>JAXWS:SPEC:7019.2</id>
                            <description><br/>
                                Add the following Table 7.14<br/>
                                <br/>
                                Property  id<br/>
                                Description  Unique identifier for the WebServiceFeature represented by the annotated annotation.<br/>
                                Default none<br/>
                                <br/>
                            </description>
                            <location chapter="7" section="14"/>
                        </assertion>
                        <assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "false">
                            <id>JAXWS:SPEC:7019.3</id>
                            <description><br/>
                                Add the following Table 7.14<br/>
                                <br/>
                                Property  bean<br/>
                                Description  The class name of a derived WebServiceFeature class associated with the annotated annotaion.<br/>
                                Default none<br/>
                                <br/>
                            </description>
                            <location chapter="7" section="14"/>
                        </assertion>
                    </sub-assertions>
                </assertion>      
                
                <assertion required="true" impl-spec="false" defined-by="technology"
                           status="active" testable="true">
                    <id>JAXWS:SPEC:7020</id>
                    <description>
                        javax.xml.ws.soap.Addressing
                        The Addressing annotation is used to control the use of WS-Addressing[24][33].  It corresponds with the AddressingFeature described in section 6.5.1.
                    </description>
                    <location chapter="7" section="14.1"/>
                    <sub-assertions>
                        <assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
                            <id>JAXWS:SPEC:7020.1</id>
                            <description><br/>
                                Add the following Table 7.15<br/>
                                <br/>
                                Property  enabled<br/>
                                Description  Specifies if WS-Addressing is enabled or not<br/>
                                Default true<br/>
                                <br/>
                            </description>
                            <location chapter="7" section="14.1"/>
                        </assertion>
                        <assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
                            <id>JAXWS:SPEC:7020.2</id>
                            <description><br/>
                                Add the following Table 7.15<br/>
                                <br/>
                                Property  required<br/>
                                Description Specifies Adddressing headers MUST be present on incoming messages.
                                Default false<br/>
                                <br/>
                            </description>
                            <location chapter="7" section="14.1"/>
                        </assertion>
                        <assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
                            <id>JAXWS:SPEC:7020.3</id>
                            <description>an endpoint MUST explicitly specify what WS-Addressing Actions are to be used via the Action and FaultAction annotations.
                            </description>
                            <location chapter="7" section="14.1"/>
                        </assertion>
                        <assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
                            <id>JAXWS:SPEC:7020.4</id>
                            <description>The client MUST explicitly enable addresssing via the AddressingFeature, and for each invocation, the client MUST explicitly set the BindingProvider.SOAPACTION URI PROPERTY.
                            </description>
                            <location chapter="7" section="14.1"/>
                        </assertion>
                    </sub-assertions>
                </assertion>      
                
                <assertion required="true" impl-spec="false" defined-by="technology"
                           status="active" testable="true">
                    <id>JAXWS:SPEC:7021</id>
                    <description>
                        javax.xml.ws.soap.MTOM
                        The MTOM annotation is used to control the use of MTOM an XOP encoding. It corresponds to the MTOMFeature described in section 6.5.2.
                    </description>
                    <location chapter="7" section="14.2"/>
                    <sub-assertions>
                        <assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
                            <id>JAXWS:SPEC:7021.1</id>
                            <description><br/>
                                Add the following Table 7.16<br/>
                                <br/>
                                Property  enabled<br/>
                                Description  Specifies if MTOM is enabled or not.<br/>
                                Default true<br/>
                                <br/>
                            </description>
                            <location chapter="7" section="14.2"/>
                        </assertion>
                        <assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
                            <id>JAXWS:SPEC:7021.2</id>
                            <description><br/>
                                Add the following Table 7.16<br/>
                                <br/>
                                Property  threshold<br/>
                                Description  Specifies the size in bytes that binary data MUST be before being XOP encoded.<br/>
                                Default 0<br/>
                                <br/>
                            </description>
                            <location chapter="7" section="14.2"/>
                        </assertion>
                    </sub-assertions>
                </assertion>     
                
                <assertion required="true" impl-spec="false" defined-by="technology"
                           status="active" testable="true">
                    <id>JAXWS:SPEC:7022</id>
                    <description>
                        javax.xml.ws.RespectBinding
                        The RespectBinding annotation is used to control whether a JAX-WS implementation MUST respect/honor the contents of the wsdl:binding associated with an endpoint. It has a corresponding RespectBindingFeature described in section 6.5.3. 
                    </description>
                    <location chapter="7" section="14.3"/>
                    <sub-assertions>
                        <assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
                            <id>JAXWS:SPEC:7022.1</id>
                            <description><br/>
                                Add the following Table 7.17<br/>
                                <br/>
                                Property  enabled<br/>
                                Description  Specifies whether the wsdl:binding must be respected or not.<br/>
                                Default true<br/>
                                <br/>
                            </description>
                            <location chapter="7" section="14.3"/>
                        </assertion>                
                    </sub-assertions>
                </assertion>
       
