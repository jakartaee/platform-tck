<!--

    Copyright (c) 2018, 2020 Oracle and/or its affiliates. All rights reserved.

    This program and the accompanying materials are made available under the
    terms of the Eclipse Public License v. 2.0, which is available at
    http://www.eclipse.org/legal/epl-2.0.

    This Source Code may also be made available under the following Secondary
    Licenses when the conditions for such availability set forth in the
    Eclipse Public License v. 2.0 are satisfied: GNU General Public License,
    version 2 with the GNU Classpath Exception, which is available at
    https://www.gnu.org/software/classpath/license.html.

    SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0

-->

		<!-- Chapter 3 Server Programming Model -->
        <!-- next available id is 3016 -->
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>3001</id>
			<description>The implementation bean MUST be an outer public class, MUST NOT be final, and MUST NOT be abstract.</description>
			<location chapter = "3" section = "1"/>
		</assertion>
                <assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>3002</id>
			<description>The implementation bean MUST have a default public constructor.</description>
			<location chapter = "3" section = "1"/>
		</assertion>
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "false">
			<id>3003</id>
			<description>The implementation MUST NOT define a finalize() method.</description>
			<location chapter = "3" section = "1"/>
		</assertion>
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>3004</id>
			<description>The implementation bean MUST include a @WebService class-level annotation, indicating that it implements a Web Service.  More information on the @WebService annotation may be found in 4.1Annotation: jakarta.jws.WebService.</description>
			<location chapter = "3" section = "1"/>
		</assertion>
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>3005</id>
			<description>The implementation bean MAY reference a service endpoint interface by using the @WebService.endpointInterface annotation.  If the implementation bean references a service endpoint interface, it MUST implement all the methods on the service endpoint interface.  If the implementation bean references a service endpoint interface, that service endpoint interface is used to determine the abstract WSDL contract (portType and bindings).  In this case, the service implementation bean MUST NOT include any JSR-181 annotations other than @WebService(endpointInterface and serviceName atrtributes only) and @HandlerChain..  More information on the @WebService.endpointInterface attribute may be found in 4.1 Annotation: jakarta.jws.WebService.</description>
			<location chapter = "3" section = "1"/>
		</assertion>
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>3006</id>
			<description>If the implementation bean does not implement a service endpoint interface and there are no @WebMethod annotations in the implementation bean (excluding @WebMethod annotations used to exclude inherited @WebMethods), all public methods other than those inherited from java.lang.Object will be exposed as Web Service operations, subject to the inheritance rules specified in Common Annotations for the Java Platform [12], section 2.1.</description>
			<location chapter = "3" section = "1"/>
		</assertion>
        <assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>3007</id>
			<description>The service endpoint interface MUST be an outer public interface.</description>
			<location chapter = "3" section = "2"/>
		</assertion>
        <assertion required = "false" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>3008</id>
			<description>The service endpoint interface MAY extend java.rmi.Remote either directly or indirectly, but is not REQUIRED to do so.</description>
			<location chapter = "3" section = "2"/>
		</assertion>
        <assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>3009</id>
			<description>The service endpoint interface MUST include a @WebService annotation, indicating that it is defining the contract for a Web Service.</description>
			<location chapter = "3" section = "2"/>
		</assertion>
                <assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>3010</id>
			<description>All of the methods on the service endpoint interface are mapped to WSDL operations (including methods inherited from super-interfaces), regardless of whether they include a @WebMethod annotation.  A method MAY include a @WebMethod annotation to customize the mapping to WSDL, but is not REQUIRED to do so.</description>
			<location chapter = "3" section = "2"/>
		</assertion>
                <assertion required = "false" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>3011</id>
			<description>The service endpoint interface MAY include other JSR-181 annotations to control the mapping from Java to WSDL.</description>
			<location chapter = "3" section = "2"/>
		</assertion>
                <assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>3012</id>
			<description>The service endpoint interface MUST NOT include the JSR-181 annotation elements portName, serviceName and endpointInterface of the annotation @WebService.</description>
			<location chapter = "3" section = "2"/>
		</assertion>
                <assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>3013</id>
			<description>The method MUST be public.</description>
			<location chapter = "3" section = "3"/>
		</assertion>
                <assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>3014</id>
			<description>The method's parameters, return value, and exceptions MUST follow the rules defined in JAX-WS 2.0 [5], section 3.6).</description>
			<location chapter = "3" section = "3"/>
		</assertion>
                <assertion required = "false" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>3015</id>
			<description>The method MAY throw java.rmi.RemoteException, but is not REQUIRED to do so.</description>
			<location chapter = "3" section = "3"/>
		</assertion>
               







		
