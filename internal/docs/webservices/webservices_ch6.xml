<!--

    Copyright (c) 2018, 2020 Oracle and/or its affiliates. All rights reserved.

    This program and the accompanying materials are made available under the
    terms of the Eclipse Public License v. 2.0, which is available at
    http://www.eclipse.org/legal/epl-2.0.

    This Source Code may also be made available under the following Secondary
    Licenses when the conditions for such availability set forth in the
    Eclipse Public License v. 2.0 are satisfied: GNU General Public License,
    version 2 with the GNU Classpath Exception, which is available at
    https://www.gnu.org/software/classpath/license.html.

    SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0

-->

		<!-- Chapter 6 Handlers -->
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>WS4EE:SPEC:6000</id>
			<description>
                    Handlers are not able to re-target a request to a different component.
			</description>
			<location chapter = "6" section = "1"/>
		</assertion>

		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>WS4EE:SPEC:6001</id>
			<description>
                   Handlers cannot change the WSDL operation nor can Handlers change the message part types and number of parts. 
			</description>
			<location chapter = "6" section = "1"/>
		</assertion>

		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>WS4EE:SPEC:6002</id>
			<description>
                    On the server, Handlers can only communicate with the business logic of the component using the MessageContext.
			</description>
			<location chapter = "6" section = "1"/>
		</assertion>

		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "false">
			<id>WS4EE:SPEC:6003</id>
			<description>
                   On the client, Handlers have no means of communicating with the business logic of the client. 
			</description>
			<location chapter = "6" section = "1"/>
		</assertion>

		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "false">
			<id>WS4EE:SPEC:6004</id>
			<description>
                   There is no standard means for a Handler to access the security identity associated with a request, therefore Handlers cannot portably perform processing based on security identity.
			</description>
			<location chapter = "6" section = "1"/>
		</assertion>

		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>WS4EE:SPEC:6005</id>
			<description>
                   Handlers are associated with the Port component on the server and therefore run in both the web and EJB containers.
			</description>
			<location chapter = "6" section = "1"/>
		</assertion>

		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>WS4EE:SPEC:6006</id>
			<description>
                   Handlers must be able to transform the SOAP header.    
			</description>
			<location chapter = "6" section = "2.1"/>
		</assertion>

		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>WS4EE:SPEC:6007</id>
			<description>
                   Handlers must be able to transform just parts of the body.
			</description>
			<location chapter = "6" section = "2.1"/>
		</assertion>

		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>WS4EE:SPEC:6008</id>
			<description>
                   Handlers must be able to just read a message where no additions, transformations, or modification
to the message is made.
			</description>
			<location chapter = "6" section = "2.1"/>
		</assertion>

		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>WS4EE:SPEC:6009</id>
			<description>
                   A JAX-WS Web Services for Java EE provider is required to provide an implementation of HandlerResolver that returns the Handler Chain with Handlers specified in the deployment descriptor or the jakarta.jws.HandlerChain annotation.
			</description>
			<location chapter = "6" section = "2.2"/>
		</assertion>

		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>WS4EE:SPEC:6010</id>
			<description>
                   The ordering of the Handlers in the HandlerChain must follow the requirements specified in JAX-WS specification.   
			</description>
			<location chapter = "6" section = "2.2"/>
		</assertion>

		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>WS4EE:SPEC:6011</id>
			<description>
                   the ordering of any given type of Handler (logical or protocol) in the deployment descriptor must be maintained
			</description>
			<location chapter = "6" section = "2.2"/>
		</assertion>

		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>WS4EE:SPEC:6012</id>
			<description>
                   A Web Services for Java EE provider is required to provide an implementation of MessageContext.
			</description>
			<location chapter = "6" section = "2.2"/>
		</assertion>

		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>WS4EE:SPEC:6013</id>
			<description>
                   A Web Services for Java EE provider is required to provide all the interfaces of the javax.xml.rpc.handler.soap and javax.xml.ws.handler.soap package.
			</description>
			<location chapter = "6" section = "2.2"/>
		</assertion>

		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>WS4EE:SPEC:6014</id>
			<description>
                   The provider must also provide an implementation of the SOAPMessageContext interface.
			</description>
			<location chapter = "6" section = "2.2"/>
		</assertion>

		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>WS4EE:SPEC:6015</id>
			<description>javax.annotation.PostConstruct annotation</description>
			<location chapter = "6" section = "2.2.2"/>
               <sub-assertions>
		         <assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			         <id>WS4EE:SPEC:6015.1</id>
			         <description>
                            The container must carry out any injections (if any) requested by the handler, typically via the @Resource annotation (see JSR-250 Common Annotations for Java Platform specification). 
			         </description>
			         <location chapter = "6" section = "2.2.2"/>
		         </assertion>
		         <assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			         <id>WS4EE:SPEC:6015.2</id>
			         <description>
                            After all the injections have been carried out, the container must invoke the method carrying a javax.annotation.PostConstruct annotation. 
			         </description>
			         <location chapter = "6" section = "2.2.2"/>
		         </assertion>
		         <assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			         <id>WS4EE:SPEC:6015.3</id>
			         <description>
                            This method must have a void return type and take zero arguments. 
			         </description>
			         <location chapter = "6" section = "2.2.2"/>
		         </assertion>
               </sub-assertions>
		</assertion>

		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "false">
			<id>WS4EE:SPEC:6016</id>
			<description>javax.annotation.PreDestory annotation</description>
			<location chapter = "6" section = "2.2.2"/>
               <sub-assertions>
		         <assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "false">
			         <id>WS4EE:SPEC:6016.1</id>
			         <description>
                            The container must call the lifecycle method annotated with javax.annotation.PreDestroy annotation on any Handler instances which it instantiated, before releasing a handler instance from its working set. 
			         </description>
			         <location chapter = "6" section = "2.2.2"/>
		         </assertion>
		         <assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "false">
			         <id>WS4EE:SPEC:6016.2</id>
			         <description>
                            A container must not call this method while a request is being processed by the Handler instance. 
			         </description>
			         <location chapter = "6" section = "2.2.2"/>
		         </assertion>
		         <assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "false">
			         <id>WS4EE:SPEC:6016.3</id>
			         <description>
                            The container must not dispatch additional requests to the Handler after the this method is called.
			         </description>
			         <location chapter = "6" section = "2.2.2"/>
		         </assertion>
               </sub-assertions>
		</assertion>

		<assertion required = "false" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>WS4EE:SPEC:6017</id>
			<description>
                   Pooling of Handler instances is allowed, but is not required.
			</description>
			<location chapter = "6" section = "2.2.2"/>
		</assertion>


		<assertion required = "false" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>WS4EE:SPEC:6018</id>
			<description>
                   If Handler instances are pooled, they must be pooled by Port component.
			</description>
			<location chapter = "6" section = "2.2.2"/>
		</assertion>

		<assertion required = "false" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>WS4EE:SPEC:6019</id>
			<description>
                   Any pooled instance of a Port component s Handler in a Method Ready state may be used to service handle&lt;action&gt;() methods in a JAX-WS based container.
			</description>
			<location chapter = "6" section = "2.2.2"/>
		</assertion>

		<assertion required = "false" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>WS4EE:SPEC:6020</id>
			<description>
                   It is not required that the same Handler instance service handleMessage() or handleFault() method invocation of any given request in the JAX-WS based container.
			</description>
			<location chapter = "6" section = "2.2.2"/>
		</assertion>

		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>WS4EE:SPEC:6021</id>
			<description>
                   The jakarta.jws.HandlerChain annotation from JSR-181 (imported by JAX-WS) may be declared on Web Service endpoints (those declared with the jakarta.jws.WebService or javax.xml.ws.WebServiceProvider annotation)
			</description>
			<location chapter = "6" section = "2.2.3"/>
		</assertion>

		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>WS4EE:SPEC:6022</id>
			<description>
                   The jakarta.jws.HandlerChain annotation from JSR-181 (imported by JAX-WS) may be declared on on Web Service references (those declared with the javax.xml.ws.WebServiceRef annotation).
			</description>
			<location chapter = "6" section = "2.2.3"/>
		</assertion>

		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>WS4EE:SPEC:6023</id>
			<description>
                   The deployment descriptors on port component or Service reference override the jakarta.jws.HandlerChain annotation specified in the implementation.
			</description>
			<location chapter = "6" section = "2.2.3"/>
		</assertion>

		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>WS4EE:SPEC:6024</id>
			<description>
	   The &lt;handler-chains&gt; element in the deployment descriptor is used for specifying the handlers on a port component or Service reference. This deployment descriptor allows for specifying multiple handler chains such that all handlers in a handler chain could be specific to a Service name, a Port name or a list of protocol bindings.   
			</description>
			<location chapter = "6" section = "2.2.3"/>
		</assertion>

		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>WS4EE:SPEC:6025</id>
			<description>
                   Patterns on Service names and Port names are also allowed, where in the handlers in a handler chain could be specific to a Service name pattern or Port name pattern.
			</description>
			<location chapter = "6" section = "2.2.3"/>
		</assertion>

		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>WS4EE:SPEC:6026</id>
			<description>
                   JAX-WS based container provider is required to support this (jakarta.jws.HandlerChain) annotation.
			</description>
			<location chapter = "6" section = "2.2.3"/>
		</assertion>

		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>WS4EE:SPEC:6027</id>
			<description>
                  They are also required to provide an implementation of HandlerResolver that returns a handler chain with handlers specified in the deployment descriptor.
			</description>
			<location chapter = "6" section = "2.2.3"/>
		</assertion>

		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>WS4EE:SPEC:6028</id>
			<description>
                  They are also required to provide an implementation of HandlerResolver that returns a handler chain with handlers specified in the jakarta.jws.HandlerChain annotation.   
			</description>
			<location chapter = "6" section = "2.2.3"/>
		</assertion>

		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "removed" testable = "true">
			<id>WS4EE:SPEC:6029</id>
			<description>
                   The ordering of the handlers in the handler chain must follow the requirements specified in JAX-WS specification.
			</description>
			<location chapter = "6" section = "2.2.3"/>
		</assertion>

		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "removed" testable = "true">
			<id>WS4EE:SPEC:6030</id>
			<description>
                   the ordering of any given type of Handler (logical or protocol) in the deployment descriptor must be maintained
			</description>
			<location chapter = "6" section = "2.2.3"/>
		</assertion>

		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "false">
			<id>WS4EE:SPEC:6031</id>
			<description>
                   A Handler must not change the message in any way that would cause the previously executed authorization check to execute differently.
			</description>
			<location chapter = "6" section = "2.2.4"/>
		</assertion>

		<assertion required = "false" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>WS4EE:SPEC:6032</id>
			<description>
                   A handler may perform programmatic authorization checks if the authorization is based solely on the MessageContext and the component s environment values.
			</description>
			<location chapter = "6" section = "2.2.4"/>
		</assertion>

		<assertion required = "false" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>WS4EE:SPEC:6033</id>
			<description>
                   A Handler cannot perform role based programmatic authorization checks nor can a Handler access the Principal associated with the request.
			</description>
			<location chapter = "6" section = "2.2.4"/>
		</assertion>

		<assertion required = "false" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>WS4EE:SPEC:6034</id>
			<description>
                   If the provider allows defining permissions on a per application basis, permissions granted to a Handler are defined by the permissions granted to the application code it is packaged with.
			</description>
			<location chapter = "6" section = "2.2.4"/>
		</assertion>

		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>WS4EE:SPEC:6035</id>
			<description>
                   Handlers run under the transaction context of the component they are associated with.
			</description>
			<location chapter = "6" section = "2.2.4"/>
		</assertion>

		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "false">
			<id>WS4EE:SPEC:6036</id>
			<description>
                   Handlers must not demarcate transactions using the jakarta.transaction.UserTransaction interface.
			</description>
			<location chapter = "6" section = "2.2.4"/>
		</assertion>

		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "removed" testable = "true">
			<id>WS4EE:SPEC:6037</id>
			<description>
                   The element init-params in the deployment descriptors is no longer used for JAX-WS based container. If needed, the developer should use the environment entry elements (&lt;env-entry&gt;) declared in the application component's deployment descriptor for this purpose. These can be injected into the handler using the @Resource annotation or looked up using JNDI.
			</description>
			<location chapter = "6" section = "2.3"/>
		</assertion>

		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>WS4EE:SPEC:6038</id>
			<description>
                  With JAX-WS, only a Handler implementation that implements the javax.xml.ws.handler.soap.SOAPHandler interface must implement the getHeaders() method. The headers that a Handler declares it will process (i.e. those returned by the Handler.getHeaders() method) must be defined in the WSDL definition of the service.   
			</description>
			<location chapter = "6" section = "2.3"/>
		</assertion>

		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>WS4EE:SPEC:6039</id>
			<description>
                  A Handler implementation must use the MessageContext to pass information to other Handler implementations in the same Handler chain and, in the case of the JAX-RPC or JAX-WS service endpoint, to the Service Implementation Bean.   
			</description>
			<location chapter = "6" section = "2.3"/>
		</assertion>

		<assertion required = "false" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>WS4EE:SPEC:6040</id>
			<description>
                   A container is not required to use the same thread for invoking each Handler or for invoking the Service Implementation Bean.
			</description>
			<location chapter = "6" section = "2.3"/>
		</assertion>

		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>WS4EE:SPEC:6041</id>
			<description>
                   Access to the java:comp/env contexts must be supported from the method annotated with javax.annotation.PostConstruct.
			</description>
			<location chapter = "6" section = "2.3"/>
		</assertion>

		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>WS4EE:SPEC:6042</id>
			<description>
                   Access to the java:comp/env contexts must be supported from handle &lt;action&gt;() methods.
			</description>
			<location chapter = "6" section = "2.3"/>
		</assertion>

		<assertion required = "false" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>WS4EE:SPEC:6043</id>
			<description>
                  Access may not be supported within the method annotated with javax.annotation.PreDestroy annotation. 
			</description>
			<location chapter = "6" section = "2.3"/>
		</assertion>

		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>WS4EE:SPEC:6044</id>
			<description>
                   A Handler may access transactional resources defined by a component s resource-refs.
			</description>
			<location chapter = "6" section = "2.3"/>
		</assertion>

		<assertion required = "false" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>WS4EE:SPEC:6045</id>
			<description>
                   Handlers that define application specific headers should declare the header schema in the WSDL document for the component they are associated with, but are not required to do so.
			</description>
			<location chapter = "6" section = "2.3"/>
		</assertion>

		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>WS4EE:SPEC:6046</id>
			<description>
                   A JAX-WS based container must call the lifecycle method annotated with javax.annotation.PostConstruct within the context of a Port component s environment. The container must ensure the Port component s env-entrys are setup for this lifecycle method to access.
			</description>
			<location chapter = "6" section = "2.4"/>
		</assertion>

		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>WS4EE:SPEC:6047</id>
			<description>
                   The container must provide a MessageContext type unique to the request type.
			</description>
			<location chapter = "6" section = "2.4"/>
		</assertion>

		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>WS4EE:SPEC:6048</id>
			<description>
                   The container must share the same MessageContext instance across all Handler instances and the target endpoint that are invoked during a single request and response or fault processing on a specific node.
			</description>
			<location chapter = "6" section = "2.4"/>
		</assertion>

		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>WS4EE:SPEC:6049</id>
			<description>Packaging</description>
			<location chapter = "6" section = "3"/>
               <sub-assertions>
		         <assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			         <id>WS4EE:SPEC:6049.1</id>
			         <description>
                            The handler chain file in the jakarta.jws.HandlerChain annotation is required to be packaged in the module. It must follow the requirements for location as specified in section 4.6.1 of JSR-181 specification (Web Services Metadata for the Java Platform).
			         </description>
			         <location chapter = "6" section = "3"/>
		         </assertion>
		         <assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			         <id>WS4EE:SPEC:6049.2</id>
			         <description>
                            Additionally, the handler chain file can also be packaged and specified in the annotation such that, it is accessible as a resource from the ClassPath.
			         </description>
			         <location chapter = "6" section = "3"/>
		         </assertion>
		         <assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			         <id>WS4EE:SPEC:6049.3</id>
			         <description>
                            At runtime, container providers must first try to access the handler chain file as per the locations specified in JSR-181 specification. Failing that, they must try to access it as a resource from the ClassPath.
			         </description>
			         <location chapter = "6" section = "3"/>
		         </assertion>
		         <assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			         <id>WS4EE:SPEC:6049.4</id>
			         <description>
                            If more than one resources are returned from the ClassPath, then the first one is used.
			         </description>
			         <location chapter = "6" section = "3"/>
		         </assertion>
		     </sub-assertions>
		</assertion>

		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>WS4EE:SPEC:6050</id>
			<description>
                   In a JAX-WS based container, a Handler chain is processed according to the JAX-WS specification section
                   9.2.1.2. In addition to this, the ordering of any given type of Handler (logical or protocol) in the 
                   deployment descriptor must be maintained.
			</description>
			<location chapter = "6" section = "2.4"/>
		</assertion>

		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>WS4EE:SPEC:6051</id>
			<description>
                   In a JAX-WS based container, a Handler chain is processed according to the JAX-WS specification section
                   9.2.1.2. In addition to this, the ordering of any given type of Handler (logical or protocol) in the 
                   handler configuration file specified in the jakarta.jws.HandlerChain annotation, must be maintained.
			</description>
			<location chapter = "6" section = "2.4"/>
		</assertion>

		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>WS4EE:SPEC:6052</id>
			<description>
                   A JAX-WS based container must carry out any injections (if any) requested by the handler, typically via
                   the @Resource annotation (see section 2.2 of JSR-250 Common Annotations for Java Platform specification).
			</description>
			<location chapter = "6" section = "2.4"/>
		</assertion>


