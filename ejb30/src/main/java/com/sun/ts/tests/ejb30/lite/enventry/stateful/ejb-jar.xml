<?xml version="1.0" encoding="UTF-8"?>
<!--

    Copyright (c) 2018 Oracle and/or its affiliates. All rights reserved.

    This program and the accompanying materials are made available under the
    terms of the Eclipse Public License v. 2.0, which is available at
    http://www.eclipse.org/legal/epl-2.0.

    This Source Code may also be made available under the following Secondary
    Licenses when the conditions for such availability set forth in the
    Eclipse Public License v. 2.0 are satisfied: GNU General Public License,
    version 2 with the GNU Classpath Exception, which is available at
    https://www.gnu.org/software/classpath/license.html.

    SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0

-->

<ejb-jar xmlns="https://jakarta.ee/xml/ns/jakartaee" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  version="4.0" xsi:schemaLocation="https://jakarta.ee/xml/ns/jakartaee https://jakarta.ee/xml/ns/jakartaee/ejb-jar_4_0.xsd">
  <enterprise-beans>
    <session>
      <ejb-name>EnvEntryBean</ejb-name>
      <env-entry>
        <env-entry-name>java:module/env/myString</env-entry-name>
        <env-entry-type>java.lang.String</env-entry-type>
        <env-entry-value>myString</env-entry-value>
      </env-entry>
      
      <!-- same base name, but in different namespaces  -->
      <env-entry>
        <env-entry-name>java:comp/env/sameName2</env-entry-name>
        <env-entry-type>java.lang.String</env-entry-type>
        <env-entry-value>compSameName2</env-entry-value>
      </env-entry>
      <env-entry>
        <env-entry-name>java:module/env/sameName</env-entry-name>
        <env-entry-type>java.lang.String</env-entry-type>
        <env-entry-value>moduleSameName</env-entry-value>
      </env-entry>
      <env-entry>
        <env-entry-name>java:app/env/sameName</env-entry-name>
        <env-entry-type>java.lang.String</env-entry-type>
        <env-entry-value>appSameName</env-entry-value>
      </env-entry>
      
      <env-entry>
        <env-entry-name>java:module/env/myBoolean</env-entry-name>
        <env-entry-type>java.lang.Boolean</env-entry-type>
        <env-entry-value>true</env-entry-value>
      </env-entry>
      <env-entry>
        <env-entry-name>java:module/env/myByte</env-entry-name>
        <env-entry-type>java.lang.Byte</env-entry-type>
        <env-entry-value>1</env-entry-value>
      </env-entry>
      <env-entry>
        <env-entry-name>java:module/env/myShort</env-entry-name>
        <env-entry-type>java.lang.Short</env-entry-type>
        <env-entry-value>1</env-entry-value>
      </env-entry>
      <env-entry>
        <env-entry-name>java:module/env/myInt</env-entry-name>
        <env-entry-type>java.lang.Integer</env-entry-type>
        <env-entry-value>1</env-entry-value>
      </env-entry>
      <env-entry>
        <env-entry-name>java:module/env/myLong</env-entry-name>
        <env-entry-type>java.lang.Long</env-entry-type>
        <env-entry-value>1</env-entry-value>
      </env-entry>
      <env-entry>
        <env-entry-name>java:module/env/myFloat</env-entry-name>
        <env-entry-type>java.lang.Float</env-entry-type>
        <env-entry-value>1</env-entry-value>
      </env-entry>
      <env-entry>
        <env-entry-name>java:module/env/myDouble</env-entry-name>
        <env-entry-type>java.lang.Double</env-entry-type>
        <env-entry-value>1</env-entry-value>
      </env-entry>
      <env-entry>
        <env-entry-name>java:module/env/myChar</env-entry-name>
        <env-entry-type>java.lang.Character</env-entry-type>
        <env-entry-value>1</env-entry-value>
      </env-entry>
      <env-entry>
        <env-entry-name>java:module/env/timeUnit</env-entry-name>
        <env-entry-type>java.util.concurrent.TimeUnit</env-entry-type>
        <env-entry-value>NANOSECONDS</env-entry-value>
      </env-entry>
      <env-entry>
        <env-entry-name>java:module/env/numberEnum</env-entry-name>
        <env-entry-type>com.sun.ts.tests.ejb30.common.lite.NumberEnum</env-entry-type>
        <env-entry-value>ONE</env-entry-value>
      </env-entry>
      <env-entry>
        <env-entry-name>java:module/env/helperClass</env-entry-name>
        <env-entry-type>java.lang.Class</env-entry-type>
        <env-entry-value>com.sun.ts.tests.ejb30.common.helper.Helper</env-entry-value>
      </env-entry>
      <env-entry>
        <env-entry-name>java:module/env/numberEnumClass</env-entry-name>
        <env-entry-type>java.lang.Class</env-entry-type>
        <env-entry-value>com.sun.ts.tests.ejb30.common.lite.NumberEnum</env-entry-value>
      </env-entry>
      <env-entry>
        <env-entry-name>java:module/env/envEntryBeanBaseClass</env-entry-name>
        <env-entry-type>java.lang.Class</env-entry-type>
        <env-entry-value>com.sun.ts.tests.ejb30.lite.enventry.common.EnvEntryBeanBase</env-entry-value>
      </env-entry>
      <env-entry>
        <env-entry-name>java:module/env/testUtilClass</env-entry-name>
        <env-entry-type>java.lang.Class</env-entry-type>
        <env-entry-value>com.sun.ts.lib.util.TestUtil</env-entry-value>
      </env-entry>
      
      <env-entry>
        <env-entry-name>java:module/env/defaultString</env-entry-name>
        <injection-target>
          <injection-target-class>
          com.sun.ts.tests.ejb30.lite.enventry.common.EnvEntryBeanBase
          </injection-target-class>
          <injection-target-name>defaultString</injection-target-name>
        </injection-target>
      </env-entry>
      <env-entry>
        <env-entry-name>java:module/env/defaultBoolean</env-entry-name>
        <injection-target>
          <injection-target-class>
          com.sun.ts.tests.ejb30.lite.enventry.common.EnvEntryBeanBase
          </injection-target-class>
          <injection-target-name>defaultBoolean</injection-target-name>
        </injection-target>
      </env-entry>
      <env-entry>
        <env-entry-name>java:module/env/defaultByte</env-entry-name>
        <injection-target>
          <injection-target-class>
          com.sun.ts.tests.ejb30.lite.enventry.common.EnvEntryBeanBase
          </injection-target-class>
          <injection-target-name>defaultByte</injection-target-name>
        </injection-target>
      </env-entry>
      <env-entry>
        <env-entry-name>java:module/env/defaultShort</env-entry-name>
        <injection-target>
          <injection-target-class>
          com.sun.ts.tests.ejb30.lite.enventry.common.EnvEntryBeanBase
          </injection-target-class>
          <injection-target-name>defaultShort</injection-target-name>
        </injection-target>
      </env-entry>
      <env-entry>
        <env-entry-name>java:module/env/defaultInt</env-entry-name>
        <injection-target>
          <injection-target-class>
          com.sun.ts.tests.ejb30.lite.enventry.common.EnvEntryBeanBase
          </injection-target-class>
          <injection-target-name>defaultInt</injection-target-name>
        </injection-target>
      </env-entry>
      <env-entry>
        <env-entry-name>java:module/env/defaultLong</env-entry-name>
        <injection-target>
          <injection-target-class>
          com.sun.ts.tests.ejb30.lite.enventry.common.EnvEntryBeanBase
          </injection-target-class>
          <injection-target-name>defaultLong</injection-target-name>
        </injection-target>
      </env-entry>
      <env-entry>
        <env-entry-name>java:module/env/defaultFloat</env-entry-name>
        <injection-target>
          <injection-target-class>
          com.sun.ts.tests.ejb30.lite.enventry.common.EnvEntryBeanBase
          </injection-target-class>
          <injection-target-name>defaultFloat</injection-target-name>
        </injection-target>
      </env-entry>
      <env-entry>
        <env-entry-name>java:module/env/defaultDouble</env-entry-name>
        <injection-target>
          <injection-target-class>
          com.sun.ts.tests.ejb30.lite.enventry.common.EnvEntryBeanBase
          </injection-target-class>
          <injection-target-name>defaultDouble</injection-target-name>
        </injection-target>
      </env-entry>
      <env-entry>
        <env-entry-name>java:module/env/defaultChar</env-entry-name>
        <injection-target>
          <injection-target-class>
          com.sun.ts.tests.ejb30.lite.enventry.common.EnvEntryBeanBase
          </injection-target-class>
          <injection-target-name>defaultChar</injection-target-name>
        </injection-target>
      </env-entry>
      <env-entry>
        <env-entry-name>java:module/env/defaultNumberEnum</env-entry-name>
        <injection-target>
          <injection-target-class>
          com.sun.ts.tests.ejb30.lite.enventry.common.EnvEntryBeanBase
          </injection-target-class>
          <injection-target-name>defaultNumberEnum</injection-target-name>
        </injection-target>
      </env-entry>
      <env-entry>
        <env-entry-name>java:module/env/defaultHelperClass</env-entry-name>
        <injection-target>
          <injection-target-class>
          com.sun.ts.tests.ejb30.lite.enventry.common.EnvEntryBeanBase
          </injection-target-class>
          <injection-target-name>defaultHelperClass</injection-target-name>
        </injection-target>
      </env-entry>
      
      
      
      <env-entry>
        <env-entry-name>java:module/env/xmlString</env-entry-name>
        <env-entry-value>xmlString</env-entry-value>
        <injection-target>
          <injection-target-class>
          com.sun.ts.tests.ejb30.lite.enventry.common.EnvEntryBeanBase
          </injection-target-class>
          <injection-target-name>xmlString</injection-target-name>
        </injection-target>
      </env-entry>
      <env-entry>
        <env-entry-name>java:module/env/xmlBoolean</env-entry-name>
        <env-entry-value>true</env-entry-value>
        <injection-target>
          <injection-target-class>
          com.sun.ts.tests.ejb30.lite.enventry.common.EnvEntryBeanBase
          </injection-target-class>
          <injection-target-name>xmlBoolean</injection-target-name>
        </injection-target>
      </env-entry>
      <env-entry>
        <env-entry-name>java:module/env/xmlByte</env-entry-name>
        <env-entry-value>1</env-entry-value>
        <injection-target>
          <injection-target-class>
          com.sun.ts.tests.ejb30.lite.enventry.common.EnvEntryBeanBase
          </injection-target-class>
          <injection-target-name>xmlByte</injection-target-name>
        </injection-target>
      </env-entry>
      <env-entry>
        <env-entry-name>java:module/env/xmlShort</env-entry-name>
        <env-entry-value>1</env-entry-value>
        <injection-target>
          <injection-target-class>
          com.sun.ts.tests.ejb30.lite.enventry.common.EnvEntryBeanBase
          </injection-target-class>
          <injection-target-name>xmlShort</injection-target-name>
        </injection-target>
      </env-entry>
      <env-entry>
        <env-entry-name>java:module/env/xmlInt</env-entry-name>
        <env-entry-value>1</env-entry-value>
        <injection-target>
          <injection-target-class>
          com.sun.ts.tests.ejb30.lite.enventry.common.EnvEntryBeanBase
          </injection-target-class>
          <injection-target-name>xmlInt</injection-target-name>
        </injection-target>
      </env-entry>
      <env-entry>
        <env-entry-name>java:module/env/xmlLong</env-entry-name>
        <env-entry-value>1</env-entry-value>
        <injection-target>
          <injection-target-class>
          com.sun.ts.tests.ejb30.lite.enventry.common.EnvEntryBeanBase
          </injection-target-class>
          <injection-target-name>xmlLong</injection-target-name>
        </injection-target>
      </env-entry>
      <env-entry>
        <env-entry-name>java:module/env/xmlFloat</env-entry-name>
        <env-entry-value>1</env-entry-value>
        <injection-target>
          <injection-target-class>
          com.sun.ts.tests.ejb30.lite.enventry.common.EnvEntryBeanBase
          </injection-target-class>
          <injection-target-name>xmlFloat</injection-target-name>
        </injection-target>
      </env-entry>
      <env-entry>
        <env-entry-name>java:module/env/xmlDouble</env-entry-name>
        <env-entry-value>1</env-entry-value>
        <injection-target>
          <injection-target-class>
          com.sun.ts.tests.ejb30.lite.enventry.common.EnvEntryBeanBase
          </injection-target-class>
          <injection-target-name>xmlDouble</injection-target-name>
        </injection-target>
      </env-entry>
      <env-entry>
        <env-entry-name>java:module/env/xmlChar</env-entry-name>
        <env-entry-value>1</env-entry-value>
        <injection-target>
          <injection-target-class>
          com.sun.ts.tests.ejb30.lite.enventry.common.EnvEntryBeanBase
          </injection-target-class>
          <injection-target-name>xmlChar</injection-target-name>
        </injection-target>
      </env-entry>
      <env-entry>
        <env-entry-name>java:module/env/xmlNumberEnum</env-entry-name>
        <env-entry-value>ONE</env-entry-value>
        <injection-target>
          <injection-target-class>
          com.sun.ts.tests.ejb30.lite.enventry.common.EnvEntryBeanBase
          </injection-target-class>
          <injection-target-name>xmlNumberEnum</injection-target-name>
        </injection-target>
      </env-entry>
      <env-entry>
        <env-entry-name>java:module/env/xmlHelperClass</env-entry-name>
        <env-entry-value>com.sun.ts.tests.ejb30.common.helper.Helper</env-entry-value>
        <injection-target>
          <injection-target-class>
          com.sun.ts.tests.ejb30.lite.enventry.common.EnvEntryBeanBase
          </injection-target-class>
          <injection-target-name>xmlHelperClass</injection-target-name>
        </injection-target>
      </env-entry>
    </session>
  </enterprise-beans>
</ejb-jar>
