#Signature file v4.3
#Version 1.7_se8

# Copyright (c) 2018 Oracle and/or its affiliates. All rights reserved.


CLSS public abstract interface !annotation jakarta.annotation.Generated
 anno 0 java.lang.annotation.Documented()
 anno 0 java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy value=SOURCE)
 anno 0 java.lang.annotation.Target(java.lang.annotation.ElementType[] value=[PACKAGE, TYPE, ANNOTATION_TYPE, METHOD, CONSTRUCTOR, FIELD, LOCAL_VARIABLE, PARAMETER])
intf java.lang.annotation.Annotation
meth public abstract !hasdefault java.lang.String comments() value= ""
meth public abstract !hasdefault java.lang.String date() value= ""
meth public abstract java.lang.String[] value()

CLSS public abstract interface !annotation jakarta.annotation.ManagedBean
 anno 0 java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy value=RUNTIME)
 anno 0 java.lang.annotation.Target(java.lang.annotation.ElementType[] value=[TYPE])
intf java.lang.annotation.Annotation
meth public abstract !hasdefault java.lang.String value() value= ""

CLSS public abstract interface !annotation jakarta.annotation.PostConstruct
 anno 0 java.lang.annotation.Documented()
 anno 0 java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy value=RUNTIME)
 anno 0 java.lang.annotation.Target(java.lang.annotation.ElementType[] value=[METHOD])
intf java.lang.annotation.Annotation

CLSS public abstract interface !annotation jakarta.annotation.PreDestroy
 anno 0 java.lang.annotation.Documented()
 anno 0 java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy value=RUNTIME)
 anno 0 java.lang.annotation.Target(java.lang.annotation.ElementType[] value=[METHOD])
intf java.lang.annotation.Annotation

CLSS public abstract interface !annotation jakarta.annotation.Priority
 anno 0 java.lang.annotation.Documented()
 anno 0 java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy value=RUNTIME)
 anno 0 java.lang.annotation.Target(java.lang.annotation.ElementType[] value=[TYPE, PARAMETER])
intf java.lang.annotation.Annotation
meth public abstract int value()

CLSS public abstract interface !annotation jakarta.annotation.Resource
 anno 0 java.lang.annotation.Repeatable(java.lang.Class<? extends java.lang.annotation.Annotation> value=class jakarta.annotation.Resources)
 anno 0 java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy value=RUNTIME)
 anno 0 java.lang.annotation.Target(java.lang.annotation.ElementType[] value=[TYPE, FIELD, METHOD])
innr public final static !enum AuthenticationType
intf java.lang.annotation.Annotation
meth public abstract !hasdefault boolean shareable() value= true
meth public abstract !hasdefault jakarta.annotation.Resource$AuthenticationType authenticationType() value= CONTAINER
meth public abstract !hasdefault java.lang.Class<?> type() value= class java.lang.Object
meth public abstract !hasdefault java.lang.String description() value= ""
meth public abstract !hasdefault java.lang.String lookup() value= ""
meth public abstract !hasdefault java.lang.String mappedName() value= ""
meth public abstract !hasdefault java.lang.String name() value= ""

CLSS public final static !enum jakarta.annotation.Resource$AuthenticationType
 outer jakarta.annotation.Resource
fld public final static jakarta.annotation.Resource$AuthenticationType APPLICATION
fld public final static jakarta.annotation.Resource$AuthenticationType CONTAINER
meth public static jakarta.annotation.Resource$AuthenticationType valueOf(java.lang.String)
meth public static jakarta.annotation.Resource$AuthenticationType[] values()
supr java.lang.Enum<jakarta.annotation.Resource$AuthenticationType>

CLSS public abstract interface !annotation jakarta.annotation.Resources
 anno 0 java.lang.annotation.Documented()
 anno 0 java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy value=RUNTIME)
 anno 0 java.lang.annotation.Target(java.lang.annotation.ElementType[] value=[TYPE])
intf java.lang.annotation.Annotation
meth public abstract jakarta.annotation.Resource[] value()

CLSS public abstract interface !annotation jakarta.annotation.security.DeclareRoles
 anno 0 java.lang.annotation.Documented()
 anno 0 java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy value=RUNTIME)
 anno 0 java.lang.annotation.Target(java.lang.annotation.ElementType[] value=[TYPE])
intf java.lang.annotation.Annotation
meth public abstract java.lang.String[] value()

CLSS public abstract interface !annotation jakarta.annotation.security.DenyAll
 anno 0 java.lang.annotation.Documented()
 anno 0 java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy value=RUNTIME)
 anno 0 java.lang.annotation.Target(java.lang.annotation.ElementType[] value=[TYPE, METHOD])
intf java.lang.annotation.Annotation

CLSS public abstract interface !annotation jakarta.annotation.security.PermitAll
 anno 0 java.lang.annotation.Documented()
 anno 0 java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy value=RUNTIME)
 anno 0 java.lang.annotation.Target(java.lang.annotation.ElementType[] value=[TYPE, METHOD])
intf java.lang.annotation.Annotation

CLSS public abstract interface !annotation jakarta.annotation.security.RolesAllowed
 anno 0 java.lang.annotation.Documented()
 anno 0 java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy value=RUNTIME)
 anno 0 java.lang.annotation.Target(java.lang.annotation.ElementType[] value=[TYPE, METHOD])
intf java.lang.annotation.Annotation
meth public abstract java.lang.String[] value()

CLSS public abstract interface !annotation jakarta.annotation.security.RunAs
 anno 0 java.lang.annotation.Documented()
 anno 0 java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy value=RUNTIME)
 anno 0 java.lang.annotation.Target(java.lang.annotation.ElementType[] value=[TYPE])
intf java.lang.annotation.Annotation
meth public abstract java.lang.String value()

CLSS public abstract interface !annotation jakarta.annotation.sql.DataSourceDefinition
 anno 0 java.lang.annotation.Repeatable(java.lang.Class<? extends java.lang.annotation.Annotation> value=class jakarta.annotation.sql.DataSourceDefinitions)
 anno 0 java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy value=RUNTIME)
 anno 0 java.lang.annotation.Target(java.lang.annotation.ElementType[] value=[TYPE])
intf java.lang.annotation.Annotation
meth public abstract !hasdefault boolean transactional() value= true
meth public abstract !hasdefault int initialPoolSize() value= -1
meth public abstract !hasdefault int isolationLevel() value= -1
meth public abstract !hasdefault int loginTimeout() value= 0
meth public abstract !hasdefault int maxIdleTime() value= -1
meth public abstract !hasdefault int maxPoolSize() value= -1
meth public abstract !hasdefault int maxStatements() value= -1
meth public abstract !hasdefault int minPoolSize() value= -1
meth public abstract !hasdefault int portNumber() value= -1
meth public abstract !hasdefault java.lang.String databaseName() value= ""
meth public abstract !hasdefault java.lang.String description() value= ""
meth public abstract !hasdefault java.lang.String password() value= ""
meth public abstract !hasdefault java.lang.String serverName() value= "localhost"
meth public abstract !hasdefault java.lang.String url() value= ""
meth public abstract !hasdefault java.lang.String user() value= ""
meth public abstract !hasdefault java.lang.String[] properties() value= []
meth public abstract java.lang.String className()
meth public abstract java.lang.String name()

CLSS public abstract interface !annotation jakarta.annotation.sql.DataSourceDefinitions
 anno 0 java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy value=RUNTIME)
 anno 0 java.lang.annotation.Target(java.lang.annotation.ElementType[] value=[TYPE])
intf java.lang.annotation.Annotation
meth public abstract jakarta.annotation.sql.DataSourceDefinition[] value()

CLSS public abstract jakarta.batch.api.AbstractBatchlet
cons public <init>()
intf jakarta.batch.api.Batchlet
meth public abstract java.lang.String process() throws java.lang.Exception
meth public void stop() throws java.lang.Exception
supr java.lang.Object

CLSS public abstract interface !annotation jakarta.batch.api.BatchProperty
 anno 0 jakarta.inject.Qualifier()
 anno 0 java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy value=RUNTIME)
 anno 0 java.lang.annotation.Target(java.lang.annotation.ElementType[] value=[FIELD, METHOD, PARAMETER])
intf java.lang.annotation.Annotation
meth public abstract !hasdefault java.lang.String name() value= ""

CLSS public abstract interface jakarta.batch.api.Batchlet
meth public abstract java.lang.String process() throws java.lang.Exception
meth public abstract void stop() throws java.lang.Exception

CLSS public abstract interface jakarta.batch.api.Decider
meth public abstract java.lang.String decide(jakarta.batch.runtime.StepExecution[]) throws java.lang.Exception

CLSS public abstract jakarta.batch.api.chunk.AbstractCheckpointAlgorithm
cons public <init>()
intf jakarta.batch.api.chunk.CheckpointAlgorithm
meth public abstract boolean isReadyToCheckpoint() throws java.lang.Exception
meth public int checkpointTimeout() throws java.lang.Exception
meth public void beginCheckpoint() throws java.lang.Exception
meth public void endCheckpoint() throws java.lang.Exception
supr java.lang.Object

CLSS public abstract jakarta.batch.api.chunk.AbstractItemReader
cons public <init>()
intf jakarta.batch.api.chunk.ItemReader
meth public abstract java.lang.Object readItem() throws java.lang.Exception
meth public java.io.Serializable checkpointInfo() throws java.lang.Exception
meth public void close() throws java.lang.Exception
meth public void open(java.io.Serializable) throws java.lang.Exception
supr java.lang.Object

CLSS public abstract jakarta.batch.api.chunk.AbstractItemWriter
cons public <init>()
intf jakarta.batch.api.chunk.ItemWriter
meth public abstract void writeItems(java.util.List<java.lang.Object>) throws java.lang.Exception
meth public java.io.Serializable checkpointInfo() throws java.lang.Exception
meth public void close() throws java.lang.Exception
meth public void open(java.io.Serializable) throws java.lang.Exception
supr java.lang.Object

CLSS public abstract interface jakarta.batch.api.chunk.CheckpointAlgorithm
meth public abstract boolean isReadyToCheckpoint() throws java.lang.Exception
meth public abstract int checkpointTimeout() throws java.lang.Exception
meth public abstract void beginCheckpoint() throws java.lang.Exception
meth public abstract void endCheckpoint() throws java.lang.Exception

CLSS public abstract interface jakarta.batch.api.chunk.ItemProcessor
meth public abstract java.lang.Object processItem(java.lang.Object) throws java.lang.Exception

CLSS public abstract interface jakarta.batch.api.chunk.ItemReader
meth public abstract java.io.Serializable checkpointInfo() throws java.lang.Exception
meth public abstract java.lang.Object readItem() throws java.lang.Exception
meth public abstract void close() throws java.lang.Exception
meth public abstract void open(java.io.Serializable) throws java.lang.Exception

CLSS public abstract interface jakarta.batch.api.chunk.ItemWriter
meth public abstract java.io.Serializable checkpointInfo() throws java.lang.Exception
meth public abstract void close() throws java.lang.Exception
meth public abstract void open(java.io.Serializable) throws java.lang.Exception
meth public abstract void writeItems(java.util.List<java.lang.Object>) throws java.lang.Exception

CLSS public abstract jakarta.batch.api.chunk.listener.AbstractChunkListener
cons public <init>()
intf jakarta.batch.api.chunk.listener.ChunkListener
meth public void afterChunk() throws java.lang.Exception
meth public void beforeChunk() throws java.lang.Exception
meth public void onError(java.lang.Exception) throws java.lang.Exception
supr java.lang.Object

CLSS public abstract jakarta.batch.api.chunk.listener.AbstractItemProcessListener
cons public <init>()
intf jakarta.batch.api.chunk.listener.ItemProcessListener
meth public void afterProcess(java.lang.Object,java.lang.Object) throws java.lang.Exception
meth public void beforeProcess(java.lang.Object) throws java.lang.Exception
meth public void onProcessError(java.lang.Object,java.lang.Exception) throws java.lang.Exception
supr java.lang.Object

CLSS public abstract jakarta.batch.api.chunk.listener.AbstractItemReadListener
cons public <init>()
intf jakarta.batch.api.chunk.listener.ItemReadListener
meth public void afterRead(java.lang.Object) throws java.lang.Exception
meth public void beforeRead() throws java.lang.Exception
meth public void onReadError(java.lang.Exception) throws java.lang.Exception
supr java.lang.Object

CLSS public abstract jakarta.batch.api.chunk.listener.AbstractItemWriteListener
cons public <init>()
intf jakarta.batch.api.chunk.listener.ItemWriteListener
meth public void afterWrite(java.util.List<java.lang.Object>) throws java.lang.Exception
meth public void beforeWrite(java.util.List<java.lang.Object>) throws java.lang.Exception
meth public void onWriteError(java.util.List<java.lang.Object>,java.lang.Exception) throws java.lang.Exception
supr java.lang.Object

CLSS public abstract interface jakarta.batch.api.chunk.listener.ChunkListener
meth public abstract void afterChunk() throws java.lang.Exception
meth public abstract void beforeChunk() throws java.lang.Exception
meth public abstract void onError(java.lang.Exception) throws java.lang.Exception

CLSS public abstract interface jakarta.batch.api.chunk.listener.ItemProcessListener
meth public abstract void afterProcess(java.lang.Object,java.lang.Object) throws java.lang.Exception
meth public abstract void beforeProcess(java.lang.Object) throws java.lang.Exception
meth public abstract void onProcessError(java.lang.Object,java.lang.Exception) throws java.lang.Exception

CLSS public abstract interface jakarta.batch.api.chunk.listener.ItemReadListener
meth public abstract void afterRead(java.lang.Object) throws java.lang.Exception
meth public abstract void beforeRead() throws java.lang.Exception
meth public abstract void onReadError(java.lang.Exception) throws java.lang.Exception

CLSS public abstract interface jakarta.batch.api.chunk.listener.ItemWriteListener
meth public abstract void afterWrite(java.util.List<java.lang.Object>) throws java.lang.Exception
meth public abstract void beforeWrite(java.util.List<java.lang.Object>) throws java.lang.Exception
meth public abstract void onWriteError(java.util.List<java.lang.Object>,java.lang.Exception) throws java.lang.Exception

CLSS public abstract interface jakarta.batch.api.chunk.listener.RetryProcessListener
meth public abstract void onRetryProcessException(java.lang.Object,java.lang.Exception) throws java.lang.Exception

CLSS public abstract interface jakarta.batch.api.chunk.listener.RetryReadListener
meth public abstract void onRetryReadException(java.lang.Exception) throws java.lang.Exception

CLSS public abstract interface jakarta.batch.api.chunk.listener.RetryWriteListener
meth public abstract void onRetryWriteException(java.util.List<java.lang.Object>,java.lang.Exception) throws java.lang.Exception

CLSS public abstract interface jakarta.batch.api.chunk.listener.SkipProcessListener
meth public abstract void onSkipProcessItem(java.lang.Object,java.lang.Exception) throws java.lang.Exception

CLSS public abstract interface jakarta.batch.api.chunk.listener.SkipReadListener
meth public abstract void onSkipReadItem(java.lang.Exception) throws java.lang.Exception

CLSS public abstract interface jakarta.batch.api.chunk.listener.SkipWriteListener
meth public abstract void onSkipWriteItem(java.util.List<java.lang.Object>,java.lang.Exception) throws java.lang.Exception

CLSS public abstract jakarta.batch.api.listener.AbstractJobListener
cons public <init>()
intf jakarta.batch.api.listener.JobListener
meth public void afterJob() throws java.lang.Exception
meth public void beforeJob() throws java.lang.Exception
supr java.lang.Object

CLSS public abstract jakarta.batch.api.listener.AbstractStepListener
cons public <init>()
intf jakarta.batch.api.listener.StepListener
meth public void afterStep() throws java.lang.Exception
meth public void beforeStep() throws java.lang.Exception
supr java.lang.Object

CLSS public abstract interface jakarta.batch.api.listener.JobListener
meth public abstract void afterJob() throws java.lang.Exception
meth public abstract void beforeJob() throws java.lang.Exception

CLSS public abstract interface jakarta.batch.api.listener.StepListener
meth public abstract void afterStep() throws java.lang.Exception
meth public abstract void beforeStep() throws java.lang.Exception

CLSS public abstract jakarta.batch.api.partition.AbstractPartitionAnalyzer
cons public <init>()
intf jakarta.batch.api.partition.PartitionAnalyzer
meth public void analyzeCollectorData(java.io.Serializable) throws java.lang.Exception
meth public void analyzeStatus(jakarta.batch.runtime.BatchStatus,java.lang.String) throws java.lang.Exception
supr java.lang.Object

CLSS public abstract jakarta.batch.api.partition.AbstractPartitionReducer
cons public <init>()
intf jakarta.batch.api.partition.PartitionReducer
meth public void afterPartitionedStepCompletion(jakarta.batch.api.partition.PartitionReducer$PartitionStatus) throws java.lang.Exception
meth public void beforePartitionedStepCompletion() throws java.lang.Exception
meth public void beginPartitionedStep() throws java.lang.Exception
meth public void rollbackPartitionedStep() throws java.lang.Exception
supr java.lang.Object

CLSS public abstract interface jakarta.batch.api.partition.PartitionAnalyzer
meth public abstract void analyzeCollectorData(java.io.Serializable) throws java.lang.Exception
meth public abstract void analyzeStatus(jakarta.batch.runtime.BatchStatus,java.lang.String) throws java.lang.Exception

CLSS public abstract interface jakarta.batch.api.partition.PartitionCollector
meth public abstract java.io.Serializable collectPartitionData() throws java.lang.Exception

CLSS public abstract interface jakarta.batch.api.partition.PartitionMapper
meth public abstract jakarta.batch.api.partition.PartitionPlan mapPartitions() throws java.lang.Exception

CLSS public abstract interface jakarta.batch.api.partition.PartitionPlan
meth public abstract boolean getPartitionsOverride()
meth public abstract int getPartitions()
meth public abstract int getThreads()
meth public abstract java.util.Properties[] getPartitionProperties()
meth public abstract void setPartitionProperties(java.util.Properties[])
meth public abstract void setPartitions(int)
meth public abstract void setPartitionsOverride(boolean)
meth public abstract void setThreads(int)

CLSS public jakarta.batch.api.partition.PartitionPlanImpl
cons public <init>()
intf jakarta.batch.api.partition.PartitionPlan
meth public boolean getPartitionsOverride()
meth public int getPartitions()
meth public int getThreads()
meth public java.util.Properties[] getPartitionProperties()
meth public void setPartitionProperties(java.util.Properties[])
meth public void setPartitions(int)
meth public void setPartitionsOverride(boolean)
meth public void setThreads(int)
supr java.lang.Object
hfds override,partitionProperties,partitions,threads

CLSS public abstract interface jakarta.batch.api.partition.PartitionReducer
innr public final static !enum PartitionStatus
meth public abstract void afterPartitionedStepCompletion(jakarta.batch.api.partition.PartitionReducer$PartitionStatus) throws java.lang.Exception
meth public abstract void beforePartitionedStepCompletion() throws java.lang.Exception
meth public abstract void beginPartitionedStep() throws java.lang.Exception
meth public abstract void rollbackPartitionedStep() throws java.lang.Exception

CLSS public final static !enum jakarta.batch.api.partition.PartitionReducer$PartitionStatus
 outer jakarta.batch.api.partition.PartitionReducer
fld public final static jakarta.batch.api.partition.PartitionReducer$PartitionStatus COMMIT
fld public final static jakarta.batch.api.partition.PartitionReducer$PartitionStatus ROLLBACK
meth public static jakarta.batch.api.partition.PartitionReducer$PartitionStatus valueOf(java.lang.String)
meth public static jakarta.batch.api.partition.PartitionReducer$PartitionStatus[] values()
supr java.lang.Enum<jakarta.batch.api.partition.PartitionReducer$PartitionStatus>

CLSS public jakarta.batch.operations.BatchRuntimeException
cons public <init>()
cons public <init>(java.lang.String)
cons public <init>(java.lang.String,java.lang.Throwable)
cons public <init>(java.lang.Throwable)
supr java.lang.RuntimeException
hfds serialVersionUID

CLSS public jakarta.batch.operations.JobExecutionAlreadyCompleteException
cons public <init>()
cons public <init>(java.lang.String)
cons public <init>(java.lang.String,java.lang.Throwable)
cons public <init>(java.lang.Throwable)
supr jakarta.batch.operations.BatchRuntimeException
hfds serialVersionUID

CLSS public jakarta.batch.operations.JobExecutionIsRunningException
cons public <init>()
cons public <init>(java.lang.String)
cons public <init>(java.lang.String,java.lang.Throwable)
cons public <init>(java.lang.Throwable)
supr jakarta.batch.operations.BatchRuntimeException
hfds serialVersionUID

CLSS public jakarta.batch.operations.JobExecutionNotMostRecentException
cons public <init>()
cons public <init>(java.lang.String)
cons public <init>(java.lang.String,java.lang.Throwable)
cons public <init>(java.lang.Throwable)
supr jakarta.batch.operations.BatchRuntimeException
hfds serialVersionUID

CLSS public jakarta.batch.operations.JobExecutionNotRunningException
cons public <init>()
cons public <init>(java.lang.String)
cons public <init>(java.lang.String,java.lang.Throwable)
cons public <init>(java.lang.Throwable)
supr jakarta.batch.operations.BatchRuntimeException
hfds serialVersionUID

CLSS public abstract interface jakarta.batch.operations.JobOperator
meth public abstract int getJobInstanceCount(java.lang.String)
meth public abstract jakarta.batch.runtime.JobExecution getJobExecution(long)
meth public abstract jakarta.batch.runtime.JobInstance getJobInstance(long)
meth public abstract java.util.List<jakarta.batch.runtime.JobExecution> getJobExecutions(jakarta.batch.runtime.JobInstance)
meth public abstract java.util.List<jakarta.batch.runtime.JobInstance> getJobInstances(java.lang.String,int,int)
meth public abstract java.util.List<jakarta.batch.runtime.StepExecution> getStepExecutions(long)
meth public abstract java.util.List<java.lang.Long> getRunningExecutions(java.lang.String)
meth public abstract java.util.Properties getParameters(long)
meth public abstract java.util.Set<java.lang.String> getJobNames()
meth public abstract long restart(long,java.util.Properties)
meth public abstract long start(java.lang.String,java.util.Properties)
meth public abstract void abandon(long)
meth public abstract void stop(long)

CLSS public jakarta.batch.operations.JobRestartException
cons public <init>()
cons public <init>(java.lang.String)
cons public <init>(java.lang.String,java.lang.Throwable)
cons public <init>(java.lang.Throwable)
supr jakarta.batch.operations.BatchRuntimeException
hfds serialVersionUID

CLSS public jakarta.batch.operations.JobSecurityException
cons public <init>()
cons public <init>(java.lang.String)
cons public <init>(java.lang.String,java.lang.Throwable)
cons public <init>(java.lang.Throwable)
supr jakarta.batch.operations.BatchRuntimeException
hfds serialVersionUID

CLSS public jakarta.batch.operations.JobStartException
cons public <init>()
cons public <init>(java.lang.String)
cons public <init>(java.lang.String,java.lang.Throwable)
cons public <init>(java.lang.Throwable)
supr jakarta.batch.operations.BatchRuntimeException
hfds serialVersionUID

CLSS public jakarta.batch.operations.NoSuchJobException
cons public <init>()
cons public <init>(java.lang.String)
cons public <init>(java.lang.String,java.lang.Throwable)
cons public <init>(java.lang.Throwable)
supr jakarta.batch.operations.BatchRuntimeException
hfds serialVersionUID

CLSS public jakarta.batch.operations.NoSuchJobExecutionException
cons public <init>()
cons public <init>(java.lang.String)
cons public <init>(java.lang.String,java.lang.Throwable)
cons public <init>(java.lang.Throwable)
supr jakarta.batch.operations.BatchRuntimeException
hfds serialVersionUID

CLSS public jakarta.batch.operations.NoSuchJobInstanceException
cons public <init>()
cons public <init>(java.lang.String)
cons public <init>(java.lang.String,java.lang.Throwable)
cons public <init>(java.lang.Throwable)
supr jakarta.batch.operations.BatchRuntimeException
hfds serialVersionUID

CLSS public jakarta.batch.runtime.BatchRuntime
cons public <init>()
meth public static jakarta.batch.operations.JobOperator getJobOperator()
supr java.lang.Object
hfds logger,sourceClass

CLSS public final !enum jakarta.batch.runtime.BatchStatus
fld public final static jakarta.batch.runtime.BatchStatus ABANDONED
fld public final static jakarta.batch.runtime.BatchStatus COMPLETED
fld public final static jakarta.batch.runtime.BatchStatus FAILED
fld public final static jakarta.batch.runtime.BatchStatus STARTED
fld public final static jakarta.batch.runtime.BatchStatus STARTING
fld public final static jakarta.batch.runtime.BatchStatus STOPPED
fld public final static jakarta.batch.runtime.BatchStatus STOPPING
meth public static jakarta.batch.runtime.BatchStatus valueOf(java.lang.String)
meth public static jakarta.batch.runtime.BatchStatus[] values()
supr java.lang.Enum<jakarta.batch.runtime.BatchStatus>

CLSS public abstract interface jakarta.batch.runtime.JobExecution
meth public abstract jakarta.batch.runtime.BatchStatus getBatchStatus()
meth public abstract java.lang.String getExitStatus()
meth public abstract java.lang.String getJobName()
meth public abstract java.util.Date getCreateTime()
meth public abstract java.util.Date getEndTime()
meth public abstract java.util.Date getLastUpdatedTime()
meth public abstract java.util.Date getStartTime()
meth public abstract java.util.Properties getJobParameters()
meth public abstract long getExecutionId()

CLSS public abstract interface jakarta.batch.runtime.JobInstance
meth public abstract java.lang.String getJobName()
meth public abstract long getInstanceId()

CLSS public abstract interface jakarta.batch.runtime.Metric
innr public final static !enum MetricType
meth public abstract jakarta.batch.runtime.Metric$MetricType getType()
meth public abstract long getValue()

CLSS public final static !enum jakarta.batch.runtime.Metric$MetricType
 outer jakarta.batch.runtime.Metric
fld public final static jakarta.batch.runtime.Metric$MetricType COMMIT_COUNT
fld public final static jakarta.batch.runtime.Metric$MetricType FILTER_COUNT
fld public final static jakarta.batch.runtime.Metric$MetricType PROCESS_SKIP_COUNT
fld public final static jakarta.batch.runtime.Metric$MetricType READ_COUNT
fld public final static jakarta.batch.runtime.Metric$MetricType READ_SKIP_COUNT
fld public final static jakarta.batch.runtime.Metric$MetricType ROLLBACK_COUNT
fld public final static jakarta.batch.runtime.Metric$MetricType WRITE_COUNT
fld public final static jakarta.batch.runtime.Metric$MetricType WRITE_SKIP_COUNT
meth public static jakarta.batch.runtime.Metric$MetricType valueOf(java.lang.String)
meth public static jakarta.batch.runtime.Metric$MetricType[] values()
supr java.lang.Enum<jakarta.batch.runtime.Metric$MetricType>

CLSS public abstract interface jakarta.batch.runtime.StepExecution
meth public abstract jakarta.batch.runtime.BatchStatus getBatchStatus()
meth public abstract jakarta.batch.runtime.Metric[] getMetrics()
meth public abstract java.io.Serializable getPersistentUserData()
meth public abstract java.lang.String getExitStatus()
meth public abstract java.lang.String getStepName()
meth public abstract java.util.Date getEndTime()
meth public abstract java.util.Date getStartTime()
meth public abstract long getStepExecutionId()

CLSS public abstract interface jakarta.batch.runtime.context.JobContext
meth public abstract jakarta.batch.runtime.BatchStatus getBatchStatus()
meth public abstract java.lang.Object getTransientUserData()
meth public abstract java.lang.String getExitStatus()
meth public abstract java.lang.String getJobName()
meth public abstract java.util.Properties getProperties()
meth public abstract long getExecutionId()
meth public abstract long getInstanceId()
meth public abstract void setExitStatus(java.lang.String)
meth public abstract void setTransientUserData(java.lang.Object)

CLSS public abstract interface jakarta.batch.runtime.context.StepContext
meth public abstract jakarta.batch.runtime.BatchStatus getBatchStatus()
meth public abstract jakarta.batch.runtime.Metric[] getMetrics()
meth public abstract java.io.Serializable getPersistentUserData()
meth public abstract java.lang.Exception getException()
meth public abstract java.lang.Object getTransientUserData()
meth public abstract java.lang.String getExitStatus()
meth public abstract java.lang.String getStepName()
meth public abstract java.util.Properties getProperties()
meth public abstract long getStepExecutionId()
meth public abstract void setExitStatus(java.lang.String)
meth public abstract void setPersistentUserData(java.io.Serializable)
meth public abstract void setTransientUserData(java.lang.Object)

CLSS public jakarta.ejb.AccessLocalException
cons public <init>()
cons public <init>(java.lang.String)
cons public <init>(java.lang.String,java.lang.Exception)
supr jakarta.ejb.EJBException
hfds serialVersionUID

CLSS public abstract interface !annotation jakarta.ejb.AccessTimeout
 anno 0 java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy value=RUNTIME)
 anno 0 java.lang.annotation.Target(java.lang.annotation.ElementType[] value=[METHOD, TYPE])
intf java.lang.annotation.Annotation
meth public abstract !hasdefault java.util.concurrent.TimeUnit unit() value= MILLISECONDS
meth public abstract long value()

CLSS public abstract interface !annotation jakarta.ejb.ActivationConfigProperty
 anno 0 java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy value=RUNTIME)
 anno 0 java.lang.annotation.Target(java.lang.annotation.ElementType[] value=[])
intf java.lang.annotation.Annotation
meth public abstract java.lang.String propertyName()
meth public abstract java.lang.String propertyValue()

CLSS public abstract interface !annotation jakarta.ejb.AfterBegin
 anno 0 java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy value=RUNTIME)
 anno 0 java.lang.annotation.Target(java.lang.annotation.ElementType[] value=[METHOD])
intf java.lang.annotation.Annotation

CLSS public abstract interface !annotation jakarta.ejb.AfterCompletion
 anno 0 java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy value=RUNTIME)
 anno 0 java.lang.annotation.Target(java.lang.annotation.ElementType[] value=[METHOD])
intf java.lang.annotation.Annotation

CLSS public abstract interface !annotation jakarta.ejb.ApplicationException
 anno 0 java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy value=RUNTIME)
 anno 0 java.lang.annotation.Target(java.lang.annotation.ElementType[] value=[TYPE])
intf java.lang.annotation.Annotation
meth public abstract !hasdefault boolean inherited() value= true
meth public abstract !hasdefault boolean rollback() value= false

CLSS public final jakarta.ejb.AsyncResult<%0 extends java.lang.Object>
cons public <init>({jakarta.ejb.AsyncResult%0})
intf java.util.concurrent.Future<{jakarta.ejb.AsyncResult%0}>
meth public boolean cancel(boolean)
meth public boolean isCancelled()
meth public boolean isDone()
meth public {jakarta.ejb.AsyncResult%0} get() throws java.lang.InterruptedException,java.util.concurrent.ExecutionException
meth public {jakarta.ejb.AsyncResult%0} get(long,java.util.concurrent.TimeUnit) throws java.lang.InterruptedException,java.util.concurrent.ExecutionException,java.util.concurrent.TimeoutException
supr java.lang.Object
hfds resultValue

CLSS public abstract interface !annotation jakarta.ejb.Asynchronous
 anno 0 java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy value=RUNTIME)
 anno 0 java.lang.annotation.Target(java.lang.annotation.ElementType[] value=[METHOD, TYPE])
intf java.lang.annotation.Annotation

CLSS public abstract interface !annotation jakarta.ejb.BeforeCompletion
 anno 0 java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy value=RUNTIME)
 anno 0 java.lang.annotation.Target(java.lang.annotation.ElementType[] value=[METHOD])
intf java.lang.annotation.Annotation

CLSS public abstract interface !annotation jakarta.ejb.ConcurrencyManagement
 anno 0 java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy value=RUNTIME)
 anno 0 java.lang.annotation.Target(java.lang.annotation.ElementType[] value=[TYPE])
intf java.lang.annotation.Annotation
meth public abstract !hasdefault jakarta.ejb.ConcurrencyManagementType value() value= CONTAINER

CLSS public final !enum jakarta.ejb.ConcurrencyManagementType
fld public final static jakarta.ejb.ConcurrencyManagementType BEAN
fld public final static jakarta.ejb.ConcurrencyManagementType CONTAINER
meth public static jakarta.ejb.ConcurrencyManagementType valueOf(java.lang.String)
meth public static jakarta.ejb.ConcurrencyManagementType[] values()
supr java.lang.Enum<jakarta.ejb.ConcurrencyManagementType>

CLSS public jakarta.ejb.ConcurrentAccessException
cons public <init>()
cons public <init>(java.lang.String)
cons public <init>(java.lang.String,java.lang.Exception)
supr jakarta.ejb.EJBException
hfds serialVersionUID

CLSS public jakarta.ejb.ConcurrentAccessTimeoutException
cons public <init>()
cons public <init>(java.lang.String)
supr jakarta.ejb.ConcurrentAccessException
hfds serialVersionUID

CLSS public jakarta.ejb.CreateException
cons public <init>()
cons public <init>(java.lang.String)
supr java.lang.Exception
hfds serialVersionUID

CLSS public abstract interface !annotation jakarta.ejb.DependsOn
 anno 0 java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy value=RUNTIME)
 anno 0 java.lang.annotation.Target(java.lang.annotation.ElementType[] value=[TYPE])
intf java.lang.annotation.Annotation
meth public abstract java.lang.String[] value()

CLSS public jakarta.ejb.DuplicateKeyException
cons public <init>()
cons public <init>(java.lang.String)
supr jakarta.ejb.CreateException
hfds serialVersionUID

CLSS public abstract interface !annotation jakarta.ejb.EJB
 anno 0 java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy value=RUNTIME)
 anno 0 java.lang.annotation.Target(java.lang.annotation.ElementType[] value=[TYPE, METHOD, FIELD])
intf java.lang.annotation.Annotation
meth public abstract !hasdefault java.lang.Class beanInterface() value= class java.lang.Object
meth public abstract !hasdefault java.lang.String beanName() value= ""
meth public abstract !hasdefault java.lang.String description() value= ""
meth public abstract !hasdefault java.lang.String lookup() value= ""
meth public abstract !hasdefault java.lang.String mappedName() value= ""
meth public abstract !hasdefault java.lang.String name() value= ""

CLSS public jakarta.ejb.EJBAccessException
cons public <init>()
cons public <init>(java.lang.String)
supr jakarta.ejb.EJBException
hfds serialVersionUID

CLSS public abstract interface jakarta.ejb.EJBContext
meth public abstract boolean getRollbackOnly()
meth public abstract boolean isCallerInRole(java.lang.String)
meth public abstract jakarta.ejb.EJBHome getEJBHome()
meth public abstract jakarta.ejb.EJBLocalHome getEJBLocalHome()
meth public abstract jakarta.ejb.TimerService getTimerService()
meth public abstract jakarta.transaction.UserTransaction getUserTransaction()
meth public abstract java.lang.Object lookup(java.lang.String)
meth public abstract java.security.Principal getCallerPrincipal()
meth public abstract java.util.Map<java.lang.String,java.lang.Object> getContextData()
meth public abstract void setRollbackOnly()

CLSS public jakarta.ejb.EJBException
cons public <init>()
cons public <init>(java.lang.Exception)
cons public <init>(java.lang.String)
cons public <init>(java.lang.String,java.lang.Exception)
meth public java.lang.Exception getCausedByException()
supr java.lang.RuntimeException
hfds serialVersionUID

CLSS public abstract interface jakarta.ejb.EJBHome
intf java.rmi.Remote
meth public abstract jakarta.ejb.EJBMetaData getEJBMetaData() throws java.rmi.RemoteException
meth public abstract jakarta.ejb.HomeHandle getHomeHandle() throws java.rmi.RemoteException
meth public abstract void remove(jakarta.ejb.Handle) throws jakarta.ejb.RemoveException,java.rmi.RemoteException
meth public abstract void remove(java.lang.Object) throws jakarta.ejb.RemoveException,java.rmi.RemoteException

CLSS public abstract interface jakarta.ejb.EJBLocalHome
meth public abstract void remove(java.lang.Object) throws jakarta.ejb.RemoveException

CLSS public abstract interface jakarta.ejb.EJBLocalObject
meth public abstract boolean isIdentical(jakarta.ejb.EJBLocalObject)
meth public abstract jakarta.ejb.EJBLocalHome getEJBLocalHome()
meth public abstract java.lang.Object getPrimaryKey()
meth public abstract void remove() throws jakarta.ejb.RemoveException

CLSS public abstract interface jakarta.ejb.EJBMetaData
meth public abstract boolean isSession()
meth public abstract boolean isStatelessSession()
meth public abstract jakarta.ejb.EJBHome getEJBHome()
meth public abstract java.lang.Class getHomeInterfaceClass()
meth public abstract java.lang.Class getPrimaryKeyClass()
meth public abstract java.lang.Class getRemoteInterfaceClass()

CLSS public abstract interface jakarta.ejb.EJBObject
intf java.rmi.Remote
meth public abstract boolean isIdentical(jakarta.ejb.EJBObject) throws java.rmi.RemoteException
meth public abstract jakarta.ejb.EJBHome getEJBHome() throws java.rmi.RemoteException
meth public abstract jakarta.ejb.Handle getHandle() throws java.rmi.RemoteException
meth public abstract java.lang.Object getPrimaryKey() throws java.rmi.RemoteException
meth public abstract void remove() throws jakarta.ejb.RemoveException,java.rmi.RemoteException

CLSS public jakarta.ejb.EJBTransactionRequiredException
cons public <init>()
cons public <init>(java.lang.String)
supr jakarta.ejb.EJBException
hfds serialVersionUID

CLSS public jakarta.ejb.EJBTransactionRolledbackException
cons public <init>()
cons public <init>(java.lang.String)
cons public <init>(java.lang.String,java.lang.Exception)
supr jakarta.ejb.EJBException
hfds serialVersionUID

CLSS public abstract interface !annotation jakarta.ejb.EJBs
 anno 0 java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy value=RUNTIME)
 anno 0 java.lang.annotation.Target(java.lang.annotation.ElementType[] value=[TYPE])
intf java.lang.annotation.Annotation
meth public abstract jakarta.ejb.EJB[] value()

CLSS public abstract interface jakarta.ejb.EnterpriseBean
intf java.io.Serializable

CLSS public abstract interface jakarta.ejb.EntityBean
intf jakarta.ejb.EnterpriseBean
meth public abstract void ejbActivate() throws java.rmi.RemoteException
meth public abstract void ejbLoad() throws java.rmi.RemoteException
meth public abstract void ejbPassivate() throws java.rmi.RemoteException
meth public abstract void ejbRemove() throws jakarta.ejb.RemoveException,java.rmi.RemoteException
meth public abstract void ejbStore() throws java.rmi.RemoteException
meth public abstract void setEntityContext(jakarta.ejb.EntityContext) throws java.rmi.RemoteException
meth public abstract void unsetEntityContext() throws java.rmi.RemoteException

CLSS public abstract interface jakarta.ejb.EntityContext
intf jakarta.ejb.EJBContext
meth public abstract jakarta.ejb.EJBLocalObject getEJBLocalObject()
meth public abstract jakarta.ejb.EJBObject getEJBObject()
meth public abstract java.lang.Object getPrimaryKey()

CLSS public jakarta.ejb.FinderException
cons public <init>()
cons public <init>(java.lang.String)
supr java.lang.Exception
hfds serialVersionUID

CLSS public abstract interface jakarta.ejb.Handle
intf java.io.Serializable
meth public abstract jakarta.ejb.EJBObject getEJBObject() throws java.rmi.RemoteException

CLSS public abstract interface jakarta.ejb.HomeHandle
intf java.io.Serializable
meth public abstract jakarta.ejb.EJBHome getEJBHome() throws java.rmi.RemoteException

CLSS public jakarta.ejb.IllegalLoopbackException
cons public <init>()
cons public <init>(java.lang.String)
supr jakarta.ejb.ConcurrentAccessException
hfds serialVersionUID

CLSS public abstract interface !annotation jakarta.ejb.Init
 anno 0 java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy value=RUNTIME)
 anno 0 java.lang.annotation.Target(java.lang.annotation.ElementType[] value=[METHOD])
intf java.lang.annotation.Annotation
meth public abstract !hasdefault java.lang.String value() value= ""

CLSS public abstract interface !annotation jakarta.ejb.Local
 anno 0 java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy value=RUNTIME)
 anno 0 java.lang.annotation.Target(java.lang.annotation.ElementType[] value=[TYPE])
intf java.lang.annotation.Annotation
meth public abstract !hasdefault java.lang.Class[] value() value= []

CLSS public abstract interface !annotation jakarta.ejb.LocalBean
 anno 0 java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy value=RUNTIME)
 anno 0 java.lang.annotation.Target(java.lang.annotation.ElementType[] value=[TYPE])
intf java.lang.annotation.Annotation

CLSS public abstract interface !annotation jakarta.ejb.LocalHome
 anno 0 java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy value=RUNTIME)
 anno 0 java.lang.annotation.Target(java.lang.annotation.ElementType[] value=[TYPE])
intf java.lang.annotation.Annotation
meth public abstract java.lang.Class value()

CLSS public abstract interface !annotation jakarta.ejb.Lock
 anno 0 java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy value=RUNTIME)
 anno 0 java.lang.annotation.Target(java.lang.annotation.ElementType[] value=[TYPE, METHOD])
intf java.lang.annotation.Annotation
meth public abstract !hasdefault jakarta.ejb.LockType value() value= WRITE

CLSS public final !enum jakarta.ejb.LockType
fld public final static jakarta.ejb.LockType READ
fld public final static jakarta.ejb.LockType WRITE
meth public static jakarta.ejb.LockType valueOf(java.lang.String)
meth public static jakarta.ejb.LockType[] values()
supr java.lang.Enum<jakarta.ejb.LockType>

CLSS public abstract interface !annotation jakarta.ejb.MessageDriven
 anno 0 java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy value=RUNTIME)
 anno 0 java.lang.annotation.Target(java.lang.annotation.ElementType[] value=[TYPE])
intf java.lang.annotation.Annotation
meth public abstract !hasdefault jakarta.ejb.ActivationConfigProperty[] activationConfig() value= []
meth public abstract !hasdefault java.lang.Class messageListenerInterface() value= class java.lang.Object
meth public abstract !hasdefault java.lang.String description() value= ""
meth public abstract !hasdefault java.lang.String mappedName() value= ""
meth public abstract !hasdefault java.lang.String name() value= ""

CLSS public abstract interface jakarta.ejb.MessageDrivenBean
intf jakarta.ejb.EnterpriseBean
meth public abstract void ejbRemove()
meth public abstract void setMessageDrivenContext(jakarta.ejb.MessageDrivenContext)

CLSS public abstract interface jakarta.ejb.MessageDrivenContext
intf jakarta.ejb.EJBContext

CLSS public jakarta.ejb.NoMoreTimeoutsException
cons public <init>()
cons public <init>(java.lang.String)
supr jakarta.ejb.EJBException
hfds serialVersionUID

CLSS public jakarta.ejb.NoSuchEJBException
cons public <init>()
cons public <init>(java.lang.String)
cons public <init>(java.lang.String,java.lang.Exception)
supr jakarta.ejb.EJBException
hfds serialVersionUID

CLSS public jakarta.ejb.NoSuchEntityException
cons public <init>()
cons public <init>(java.lang.Exception)
cons public <init>(java.lang.String)
supr jakarta.ejb.EJBException
hfds serialVersionUID

CLSS public jakarta.ejb.NoSuchObjectLocalException
cons public <init>()
cons public <init>(java.lang.String)
cons public <init>(java.lang.String,java.lang.Exception)
supr jakarta.ejb.EJBException
hfds serialVersionUID

CLSS public jakarta.ejb.ObjectNotFoundException
cons public <init>()
cons public <init>(java.lang.String)
supr jakarta.ejb.FinderException
hfds serialVersionUID

CLSS public abstract interface !annotation jakarta.ejb.PostActivate
 anno 0 java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy value=RUNTIME)
 anno 0 java.lang.annotation.Target(java.lang.annotation.ElementType[] value=[METHOD])
intf java.lang.annotation.Annotation

CLSS public abstract interface !annotation jakarta.ejb.PrePassivate
 anno 0 java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy value=RUNTIME)
 anno 0 java.lang.annotation.Target(java.lang.annotation.ElementType[] value=[METHOD])
intf java.lang.annotation.Annotation

CLSS public abstract interface !annotation jakarta.ejb.Remote
 anno 0 java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy value=RUNTIME)
 anno 0 java.lang.annotation.Target(java.lang.annotation.ElementType[] value=[TYPE])
intf java.lang.annotation.Annotation
meth public abstract !hasdefault java.lang.Class[] value() value= []

CLSS public abstract interface !annotation jakarta.ejb.RemoteHome
 anno 0 java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy value=RUNTIME)
 anno 0 java.lang.annotation.Target(java.lang.annotation.ElementType[] value=[TYPE])
intf java.lang.annotation.Annotation
meth public abstract java.lang.Class value()

CLSS public abstract interface !annotation jakarta.ejb.Remove
 anno 0 java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy value=RUNTIME)
 anno 0 java.lang.annotation.Target(java.lang.annotation.ElementType[] value=[METHOD])
intf java.lang.annotation.Annotation
meth public abstract !hasdefault boolean retainIfException() value= false

CLSS public jakarta.ejb.RemoveException
cons public <init>()
cons public <init>(java.lang.String)
supr java.lang.Exception
hfds serialVersionUID

CLSS public abstract interface !annotation jakarta.ejb.Schedule
 anno 0 java.lang.annotation.Repeatable(java.lang.Class<? extends java.lang.annotation.Annotation> value=class jakarta.ejb.Schedules)
 anno 0 java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy value=RUNTIME)
 anno 0 java.lang.annotation.Target(java.lang.annotation.ElementType[] value=[METHOD])
intf java.lang.annotation.Annotation
meth public abstract !hasdefault boolean persistent() value= true
meth public abstract !hasdefault java.lang.String dayOfMonth() value= "*"
meth public abstract !hasdefault java.lang.String dayOfWeek() value= "*"
meth public abstract !hasdefault java.lang.String hour() value= "0"
meth public abstract !hasdefault java.lang.String info() value= ""
meth public abstract !hasdefault java.lang.String minute() value= "0"
meth public abstract !hasdefault java.lang.String month() value= "*"
meth public abstract !hasdefault java.lang.String second() value= "0"
meth public abstract !hasdefault java.lang.String timezone() value= ""
meth public abstract !hasdefault java.lang.String year() value= "*"

CLSS public jakarta.ejb.ScheduleExpression
cons public <init>()
intf java.io.Serializable
meth public jakarta.ejb.ScheduleExpression dayOfMonth(int)
meth public jakarta.ejb.ScheduleExpression dayOfMonth(java.lang.String)
meth public jakarta.ejb.ScheduleExpression dayOfWeek(int)
meth public jakarta.ejb.ScheduleExpression dayOfWeek(java.lang.String)
meth public jakarta.ejb.ScheduleExpression end(java.util.Date)
meth public jakarta.ejb.ScheduleExpression hour(int)
meth public jakarta.ejb.ScheduleExpression hour(java.lang.String)
meth public jakarta.ejb.ScheduleExpression minute(int)
meth public jakarta.ejb.ScheduleExpression minute(java.lang.String)
meth public jakarta.ejb.ScheduleExpression month(int)
meth public jakarta.ejb.ScheduleExpression month(java.lang.String)
meth public jakarta.ejb.ScheduleExpression second(int)
meth public jakarta.ejb.ScheduleExpression second(java.lang.String)
meth public jakarta.ejb.ScheduleExpression start(java.util.Date)
meth public jakarta.ejb.ScheduleExpression timezone(java.lang.String)
meth public jakarta.ejb.ScheduleExpression year(int)
meth public jakarta.ejb.ScheduleExpression year(java.lang.String)
meth public java.lang.String getDayOfMonth()
meth public java.lang.String getDayOfWeek()
meth public java.lang.String getHour()
meth public java.lang.String getMinute()
meth public java.lang.String getMonth()
meth public java.lang.String getSecond()
meth public java.lang.String getTimezone()
meth public java.lang.String getYear()
meth public java.lang.String toString()
meth public java.util.Date getEnd()
meth public java.util.Date getStart()
supr java.lang.Object
hfds dayOfMonth_,dayOfWeek_,end_,hour_,minute_,month_,second_,serialVersionUID,start_,timezoneID_,year_

CLSS public abstract interface !annotation jakarta.ejb.Schedules
 anno 0 java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy value=RUNTIME)
 anno 0 java.lang.annotation.Target(java.lang.annotation.ElementType[] value=[METHOD])
intf java.lang.annotation.Annotation
meth public abstract jakarta.ejb.Schedule[] value()

CLSS public abstract interface jakarta.ejb.SessionBean
intf jakarta.ejb.EnterpriseBean
meth public abstract void ejbActivate() throws java.rmi.RemoteException
meth public abstract void ejbPassivate() throws java.rmi.RemoteException
meth public abstract void ejbRemove() throws java.rmi.RemoteException
meth public abstract void setSessionContext(jakarta.ejb.SessionContext) throws java.rmi.RemoteException

CLSS public abstract interface jakarta.ejb.SessionContext
intf jakarta.ejb.EJBContext
meth public abstract <%0 extends java.lang.Object> {%%0} getBusinessObject(java.lang.Class<{%%0}>)
meth public abstract boolean wasCancelCalled()
meth public abstract jakarta.ejb.EJBLocalObject getEJBLocalObject()
meth public abstract jakarta.ejb.EJBObject getEJBObject()
meth public abstract java.lang.Class getInvokedBusinessInterface()

CLSS public abstract interface jakarta.ejb.SessionSynchronization
meth public abstract void afterBegin() throws java.rmi.RemoteException
meth public abstract void afterCompletion(boolean) throws java.rmi.RemoteException
meth public abstract void beforeCompletion() throws java.rmi.RemoteException

CLSS public abstract interface !annotation jakarta.ejb.Singleton
 anno 0 java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy value=RUNTIME)
 anno 0 java.lang.annotation.Target(java.lang.annotation.ElementType[] value=[TYPE])
intf java.lang.annotation.Annotation
meth public abstract !hasdefault java.lang.String description() value= ""
meth public abstract !hasdefault java.lang.String mappedName() value= ""
meth public abstract !hasdefault java.lang.String name() value= ""

CLSS public abstract interface !annotation jakarta.ejb.Startup
 anno 0 java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy value=RUNTIME)
 anno 0 java.lang.annotation.Target(java.lang.annotation.ElementType[] value=[TYPE])
intf java.lang.annotation.Annotation

CLSS public abstract interface !annotation jakarta.ejb.Stateful
 anno 0 java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy value=RUNTIME)
 anno 0 java.lang.annotation.Target(java.lang.annotation.ElementType[] value=[TYPE])
intf java.lang.annotation.Annotation
meth public abstract !hasdefault boolean passivationCapable() value= true
meth public abstract !hasdefault java.lang.String description() value= ""
meth public abstract !hasdefault java.lang.String mappedName() value= ""
meth public abstract !hasdefault java.lang.String name() value= ""

CLSS public abstract interface !annotation jakarta.ejb.StatefulTimeout
 anno 0 java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy value=RUNTIME)
 anno 0 java.lang.annotation.Target(java.lang.annotation.ElementType[] value=[TYPE])
intf java.lang.annotation.Annotation
meth public abstract !hasdefault java.util.concurrent.TimeUnit unit() value= MINUTES
meth public abstract long value()

CLSS public abstract interface !annotation jakarta.ejb.Stateless
 anno 0 java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy value=RUNTIME)
 anno 0 java.lang.annotation.Target(java.lang.annotation.ElementType[] value=[TYPE])
intf java.lang.annotation.Annotation
meth public abstract !hasdefault java.lang.String description() value= ""
meth public abstract !hasdefault java.lang.String mappedName() value= ""
meth public abstract !hasdefault java.lang.String name() value= ""

CLSS public abstract interface jakarta.ejb.TimedObject
meth public abstract void ejbTimeout(jakarta.ejb.Timer)

CLSS public abstract interface !annotation jakarta.ejb.Timeout
 anno 0 java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy value=RUNTIME)
 anno 0 java.lang.annotation.Target(java.lang.annotation.ElementType[] value=[METHOD])
intf java.lang.annotation.Annotation

CLSS public abstract interface jakarta.ejb.Timer
meth public abstract boolean isCalendarTimer()
meth public abstract boolean isPersistent()
meth public abstract jakarta.ejb.ScheduleExpression getSchedule()
meth public abstract jakarta.ejb.TimerHandle getHandle()
meth public abstract java.io.Serializable getInfo()
meth public abstract java.util.Date getNextTimeout()
meth public abstract long getTimeRemaining()
meth public abstract void cancel()

CLSS public jakarta.ejb.TimerConfig
cons public <init>()
cons public <init>(java.io.Serializable,boolean)
meth public boolean isPersistent()
meth public java.io.Serializable getInfo()
meth public java.lang.String toString()
meth public void setInfo(java.io.Serializable)
meth public void setPersistent(boolean)
supr java.lang.Object
hfds info_,persistent_

CLSS public abstract interface jakarta.ejb.TimerHandle
intf java.io.Serializable
meth public abstract jakarta.ejb.Timer getTimer()

CLSS public abstract interface jakarta.ejb.TimerService
meth public abstract jakarta.ejb.Timer createCalendarTimer(jakarta.ejb.ScheduleExpression)
meth public abstract jakarta.ejb.Timer createCalendarTimer(jakarta.ejb.ScheduleExpression,jakarta.ejb.TimerConfig)
meth public abstract jakarta.ejb.Timer createIntervalTimer(java.util.Date,long,jakarta.ejb.TimerConfig)
meth public abstract jakarta.ejb.Timer createIntervalTimer(long,long,jakarta.ejb.TimerConfig)
meth public abstract jakarta.ejb.Timer createSingleActionTimer(java.util.Date,jakarta.ejb.TimerConfig)
meth public abstract jakarta.ejb.Timer createSingleActionTimer(long,jakarta.ejb.TimerConfig)
meth public abstract jakarta.ejb.Timer createTimer(java.util.Date,java.io.Serializable)
meth public abstract jakarta.ejb.Timer createTimer(java.util.Date,long,java.io.Serializable)
meth public abstract jakarta.ejb.Timer createTimer(long,java.io.Serializable)
meth public abstract jakarta.ejb.Timer createTimer(long,long,java.io.Serializable)
meth public abstract java.util.Collection<jakarta.ejb.Timer> getAllTimers()
meth public abstract java.util.Collection<jakarta.ejb.Timer> getTimers()

CLSS public abstract interface !annotation jakarta.ejb.TransactionAttribute
 anno 0 java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy value=RUNTIME)
 anno 0 java.lang.annotation.Target(java.lang.annotation.ElementType[] value=[METHOD, TYPE])
intf java.lang.annotation.Annotation
meth public abstract !hasdefault jakarta.ejb.TransactionAttributeType value() value= REQUIRED

CLSS public final !enum jakarta.ejb.TransactionAttributeType
fld public final static jakarta.ejb.TransactionAttributeType MANDATORY
fld public final static jakarta.ejb.TransactionAttributeType NEVER
fld public final static jakarta.ejb.TransactionAttributeType NOT_SUPPORTED
fld public final static jakarta.ejb.TransactionAttributeType REQUIRED
fld public final static jakarta.ejb.TransactionAttributeType REQUIRES_NEW
fld public final static jakarta.ejb.TransactionAttributeType SUPPORTS
meth public static jakarta.ejb.TransactionAttributeType valueOf(java.lang.String)
meth public static jakarta.ejb.TransactionAttributeType[] values()
supr java.lang.Enum<jakarta.ejb.TransactionAttributeType>

CLSS public abstract interface !annotation jakarta.ejb.TransactionManagement
 anno 0 java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy value=RUNTIME)
 anno 0 java.lang.annotation.Target(java.lang.annotation.ElementType[] value=[TYPE])
intf java.lang.annotation.Annotation
meth public abstract !hasdefault jakarta.ejb.TransactionManagementType value() value= CONTAINER

CLSS public final !enum jakarta.ejb.TransactionManagementType
fld public final static jakarta.ejb.TransactionManagementType BEAN
fld public final static jakarta.ejb.TransactionManagementType CONTAINER
meth public static jakarta.ejb.TransactionManagementType valueOf(java.lang.String)
meth public static jakarta.ejb.TransactionManagementType[] values()
supr java.lang.Enum<jakarta.ejb.TransactionManagementType>

CLSS public jakarta.ejb.TransactionRequiredLocalException
cons public <init>()
cons public <init>(java.lang.String)
supr jakarta.ejb.EJBException
hfds serialVersionUID

CLSS public jakarta.ejb.TransactionRolledbackLocalException
cons public <init>()
cons public <init>(java.lang.String)
cons public <init>(java.lang.String,java.lang.Exception)
supr jakarta.ejb.EJBException
hfds serialVersionUID

CLSS public abstract jakarta.ejb.embeddable.EJBContainer
cons public <init>()
fld public final static java.lang.String APP_NAME = "jakarta.ejb.embeddable.appName"
fld public final static java.lang.String MODULES = "jakarta.ejb.embeddable.modules"
fld public final static java.lang.String PROVIDER = "jakarta.ejb.embeddable.provider"
intf java.lang.AutoCloseable
meth public abstract javax.naming.Context getContext()
meth public abstract void close()
meth public static jakarta.ejb.embeddable.EJBContainer createEJBContainer()
meth public static jakarta.ejb.embeddable.EJBContainer createEJBContainer(java.util.Map<?,?>)
supr java.lang.Object
hfds newLine,providers

CLSS public abstract interface jakarta.ejb.spi.EJBContainerProvider
meth public abstract jakarta.ejb.embeddable.EJBContainer createEJBContainer(java.util.Map<?,?>)

CLSS public abstract interface jakarta.ejb.spi.HandleDelegate
meth public abstract jakarta.ejb.EJBHome readEJBHome(java.io.ObjectInputStream) throws java.io.IOException,java.lang.ClassNotFoundException
meth public abstract jakarta.ejb.EJBObject readEJBObject(java.io.ObjectInputStream) throws java.io.IOException,java.lang.ClassNotFoundException
meth public abstract void writeEJBHome(jakarta.ejb.EJBHome,java.io.ObjectOutputStream) throws java.io.IOException
meth public abstract void writeEJBObject(jakarta.ejb.EJBObject,java.io.ObjectOutputStream) throws java.io.IOException

CLSS public abstract jakarta.el.ELResolver
cons public <init>()
fld public final static java.lang.String RESOLVABLE_AT_DESIGN_TIME = "resolvableAtDesignTime"
fld public final static java.lang.String TYPE = "type"
meth public abstract boolean isReadOnly(jakarta.el.ELContext,java.lang.Object,java.lang.Object)
meth public abstract java.lang.Class<?> getCommonPropertyType(jakarta.el.ELContext,java.lang.Object)
meth public abstract java.lang.Class<?> getType(jakarta.el.ELContext,java.lang.Object,java.lang.Object)
meth public abstract java.lang.Object getValue(jakarta.el.ELContext,java.lang.Object,java.lang.Object)
meth public abstract java.util.Iterator<java.beans.FeatureDescriptor> getFeatureDescriptors(jakarta.el.ELContext,java.lang.Object)
meth public abstract void setValue(jakarta.el.ELContext,java.lang.Object,java.lang.Object,java.lang.Object)
meth public java.lang.Object convertToType(jakarta.el.ELContext,java.lang.Object,java.lang.Class<?>)
meth public java.lang.Object invoke(jakarta.el.ELContext,java.lang.Object,java.lang.Object,java.lang.Class<?>[],java.lang.Object[])
supr java.lang.Object

CLSS public abstract jakarta.el.Expression
cons public <init>()
intf java.io.Serializable
meth public abstract boolean equals(java.lang.Object)
meth public abstract boolean isLiteralText()
meth public abstract int hashCode()
meth public abstract java.lang.String getExpressionString()
supr java.lang.Object
hfds serialVersionUID

CLSS public abstract jakarta.el.ValueExpression
cons public <init>()
meth public abstract boolean isReadOnly(jakarta.el.ELContext)
meth public abstract java.lang.Class<?> getExpectedType()
meth public abstract java.lang.Class<?> getType(jakarta.el.ELContext)
meth public abstract java.lang.Object getValue(jakarta.el.ELContext)
meth public abstract void setValue(jakarta.el.ELContext,java.lang.Object)
meth public jakarta.el.ValueReference getValueReference(jakarta.el.ELContext)
supr jakarta.el.Expression
hfds serialVersionUID

CLSS public jakarta.enterprise.concurrent.AbortedException
cons public <init>()
cons public <init>(java.lang.String)
cons public <init>(java.lang.String,java.lang.Throwable)
cons public <init>(java.lang.Throwable)
intf java.io.Serializable
supr java.util.concurrent.ExecutionException
hfds serialVersionUID

CLSS public abstract interface jakarta.enterprise.concurrent.ContextService
meth public abstract !varargs java.lang.Object createContextualProxy(java.lang.Object,java.lang.Class<?>[])
meth public abstract !varargs java.lang.Object createContextualProxy(java.lang.Object,java.util.Map<java.lang.String,java.lang.String>,java.lang.Class<?>[])
meth public abstract <%0 extends java.lang.Object> {%%0} createContextualProxy({%%0},java.lang.Class<{%%0}>)
meth public abstract <%0 extends java.lang.Object> {%%0} createContextualProxy({%%0},java.util.Map<java.lang.String,java.lang.String>,java.lang.Class<{%%0}>)
meth public abstract java.util.Map<java.lang.String,java.lang.String> getExecutionProperties(java.lang.Object)

CLSS public abstract interface jakarta.enterprise.concurrent.LastExecution
meth public abstract java.lang.Object getResult()
meth public abstract java.lang.String getIdentityName()
meth public abstract java.util.Date getRunEnd()
meth public abstract java.util.Date getRunStart()
meth public abstract java.util.Date getScheduledStart()

CLSS public abstract interface jakarta.enterprise.concurrent.ManageableThread
meth public abstract boolean isShutdown()

CLSS public abstract interface jakarta.enterprise.concurrent.ManagedExecutorService
intf java.util.concurrent.ExecutorService

CLSS public jakarta.enterprise.concurrent.ManagedExecutors
meth public static <%0 extends java.lang.Object> java.util.concurrent.Callable<{%%0}> managedTask(java.util.concurrent.Callable<{%%0}>,jakarta.enterprise.concurrent.ManagedTaskListener)
meth public static <%0 extends java.lang.Object> java.util.concurrent.Callable<{%%0}> managedTask(java.util.concurrent.Callable<{%%0}>,java.util.Map<java.lang.String,java.lang.String>,jakarta.enterprise.concurrent.ManagedTaskListener)
meth public static boolean isCurrentThreadShutdown()
meth public static java.lang.Runnable managedTask(java.lang.Runnable,jakarta.enterprise.concurrent.ManagedTaskListener)
meth public static java.lang.Runnable managedTask(java.lang.Runnable,java.util.Map<java.lang.String,java.lang.String>,jakarta.enterprise.concurrent.ManagedTaskListener)
supr java.lang.Object
hfds NULL_TASK_ERROR_MSG
hcls Adapter,CallableAdapter,RunnableAdapter

CLSS public abstract interface jakarta.enterprise.concurrent.ManagedScheduledExecutorService
intf jakarta.enterprise.concurrent.ManagedExecutorService
intf java.util.concurrent.ScheduledExecutorService
meth public abstract <%0 extends java.lang.Object> java.util.concurrent.ScheduledFuture<{%%0}> schedule(java.util.concurrent.Callable<{%%0}>,jakarta.enterprise.concurrent.Trigger)
meth public abstract java.util.concurrent.ScheduledFuture<?> schedule(java.lang.Runnable,jakarta.enterprise.concurrent.Trigger)

CLSS public abstract interface jakarta.enterprise.concurrent.ManagedTask
fld public final static java.lang.String IDENTITY_NAME = "javax.enterprise.concurrent.IDENTITY_NAME"
fld public final static java.lang.String LONGRUNNING_HINT = "javax.enterprise.concurrent.LONGRUNNING_HINT"
fld public final static java.lang.String SUSPEND = "SUSPEND"
fld public final static java.lang.String TRANSACTION = "javax.enterprise.concurrent.TRANSACTION"
fld public final static java.lang.String USE_TRANSACTION_OF_EXECUTION_THREAD = "USE_TRANSACTION_OF_EXECUTION_THREAD"
meth public abstract jakarta.enterprise.concurrent.ManagedTaskListener getManagedTaskListener()
meth public abstract java.util.Map<java.lang.String,java.lang.String> getExecutionProperties()

CLSS public abstract interface jakarta.enterprise.concurrent.ManagedTaskListener
meth public abstract void taskAborted(java.util.concurrent.Future<?>,jakarta.enterprise.concurrent.ManagedExecutorService,java.lang.Object,java.lang.Throwable)
meth public abstract void taskDone(java.util.concurrent.Future<?>,jakarta.enterprise.concurrent.ManagedExecutorService,java.lang.Object,java.lang.Throwable)
meth public abstract void taskStarting(java.util.concurrent.Future<?>,jakarta.enterprise.concurrent.ManagedExecutorService,java.lang.Object)
meth public abstract void taskSubmitted(java.util.concurrent.Future<?>,jakarta.enterprise.concurrent.ManagedExecutorService,java.lang.Object)

CLSS public abstract interface jakarta.enterprise.concurrent.ManagedThreadFactory
intf java.util.concurrent.ThreadFactory

CLSS public jakarta.enterprise.concurrent.SkippedException
cons public <init>()
cons public <init>(java.lang.String)
cons public <init>(java.lang.String,java.lang.Throwable)
cons public <init>(java.lang.Throwable)
intf java.io.Serializable
supr java.util.concurrent.ExecutionException
hfds serialVersionUID

CLSS public abstract interface jakarta.enterprise.concurrent.Trigger
meth public abstract boolean skipRun(jakarta.enterprise.concurrent.LastExecution,java.util.Date)
meth public abstract java.util.Date getNextRunTime(jakarta.enterprise.concurrent.LastExecution,java.util.Date)

CLSS public abstract interface !annotation jakarta.enterprise.context.ApplicationScoped
 anno 0 jakarta.enterprise.context.NormalScope(boolean passivating=false)
 anno 0 java.lang.annotation.Documented()
 anno 0 java.lang.annotation.Inherited()
 anno 0 java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy value=RUNTIME)
 anno 0 java.lang.annotation.Target(java.lang.annotation.ElementType[] value=[TYPE, METHOD, FIELD])
innr public final static Literal
intf java.lang.annotation.Annotation

CLSS public final static jakarta.enterprise.context.ApplicationScoped$Literal
 outer jakarta.enterprise.context.ApplicationScoped
cons public <init>()
fld public final static jakarta.enterprise.context.ApplicationScoped$Literal INSTANCE
intf jakarta.enterprise.context.ApplicationScoped
supr jakarta.enterprise.util.AnnotationLiteral<jakarta.enterprise.context.ApplicationScoped>
hfds serialVersionUID

CLSS public abstract interface !annotation jakarta.enterprise.context.BeforeDestroyed
 anno 0 jakarta.inject.Qualifier()
 anno 0 java.lang.annotation.Documented()
 anno 0 java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy value=RUNTIME)
 anno 0 java.lang.annotation.Target(java.lang.annotation.ElementType[] value=[TYPE, METHOD, PARAMETER, FIELD])
innr public final static Literal
intf java.lang.annotation.Annotation
meth public abstract java.lang.Class<? extends java.lang.annotation.Annotation> value()

CLSS public final static jakarta.enterprise.context.BeforeDestroyed$Literal
 outer jakarta.enterprise.context.BeforeDestroyed
fld public final static jakarta.enterprise.context.BeforeDestroyed$Literal APPLICATION
fld public final static jakarta.enterprise.context.BeforeDestroyed$Literal CONVERSATION
fld public final static jakarta.enterprise.context.BeforeDestroyed$Literal REQUEST
fld public final static jakarta.enterprise.context.BeforeDestroyed$Literal SESSION
intf jakarta.enterprise.context.BeforeDestroyed
meth public java.lang.Class<? extends java.lang.annotation.Annotation> value()
meth public static jakarta.enterprise.context.BeforeDestroyed$Literal of(java.lang.Class<? extends java.lang.annotation.Annotation>)
supr jakarta.enterprise.util.AnnotationLiteral<jakarta.enterprise.context.BeforeDestroyed>
hfds serialVersionUID,value

CLSS public jakarta.enterprise.context.BusyConversationException
cons public <init>()
cons public <init>(java.lang.String)
cons public <init>(java.lang.String,java.lang.Throwable)
cons public <init>(java.lang.Throwable)
supr jakarta.enterprise.context.ContextException
hfds serialVersionUID

CLSS public jakarta.enterprise.context.ContextException
cons public <init>()
cons public <init>(java.lang.String)
cons public <init>(java.lang.String,java.lang.Throwable)
cons public <init>(java.lang.Throwable)
supr java.lang.RuntimeException
hfds serialVersionUID

CLSS public jakarta.enterprise.context.ContextNotActiveException
cons public <init>()
cons public <init>(java.lang.String)
cons public <init>(java.lang.String,java.lang.Throwable)
cons public <init>(java.lang.Throwable)
supr jakarta.enterprise.context.ContextException
hfds serialVersionUID

CLSS public abstract interface jakarta.enterprise.context.Conversation
meth public abstract boolean isTransient()
meth public abstract java.lang.String getId()
meth public abstract long getTimeout()
meth public abstract void begin()
meth public abstract void begin(java.lang.String)
meth public abstract void end()
meth public abstract void setTimeout(long)

CLSS public abstract interface !annotation jakarta.enterprise.context.ConversationScoped
 anno 0 jakarta.enterprise.context.NormalScope(boolean passivating=true)
 anno 0 java.lang.annotation.Documented()
 anno 0 java.lang.annotation.Inherited()
 anno 0 java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy value=RUNTIME)
 anno 0 java.lang.annotation.Target(java.lang.annotation.ElementType[] value=[TYPE, METHOD, FIELD])
innr public final static Literal
intf java.lang.annotation.Annotation

CLSS public final static jakarta.enterprise.context.ConversationScoped$Literal
 outer jakarta.enterprise.context.ConversationScoped
cons public <init>()
fld public final static jakarta.enterprise.context.ConversationScoped$Literal INSTANCE
intf jakarta.enterprise.context.ConversationScoped
supr jakarta.enterprise.util.AnnotationLiteral<jakarta.enterprise.context.ConversationScoped>
hfds serialVersionUID

CLSS public abstract interface !annotation jakarta.enterprise.context.Dependent
 anno 0 jakarta.inject.Scope()
 anno 0 java.lang.annotation.Documented()
 anno 0 java.lang.annotation.Inherited()
 anno 0 java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy value=RUNTIME)
 anno 0 java.lang.annotation.Target(java.lang.annotation.ElementType[] value=[METHOD, TYPE, FIELD])
innr public final static Literal
intf java.lang.annotation.Annotation

CLSS public final static jakarta.enterprise.context.Dependent$Literal
 outer jakarta.enterprise.context.Dependent
cons public <init>()
fld public final static jakarta.enterprise.context.Dependent$Literal INSTANCE
intf jakarta.enterprise.context.Dependent
supr jakarta.enterprise.util.AnnotationLiteral<jakarta.enterprise.context.Dependent>
hfds serialVersionUID

CLSS public abstract interface !annotation jakarta.enterprise.context.Destroyed
 anno 0 jakarta.inject.Qualifier()
 anno 0 java.lang.annotation.Documented()
 anno 0 java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy value=RUNTIME)
 anno 0 java.lang.annotation.Target(java.lang.annotation.ElementType[] value=[TYPE, METHOD, PARAMETER, FIELD])
innr public final static Literal
intf java.lang.annotation.Annotation
meth public abstract java.lang.Class<? extends java.lang.annotation.Annotation> value()

CLSS public final static jakarta.enterprise.context.Destroyed$Literal
 outer jakarta.enterprise.context.Destroyed
fld public final static jakarta.enterprise.context.Destroyed$Literal APPLICATION
fld public final static jakarta.enterprise.context.Destroyed$Literal CONVERSATION
fld public final static jakarta.enterprise.context.Destroyed$Literal REQUEST
fld public final static jakarta.enterprise.context.Destroyed$Literal SESSION
intf jakarta.enterprise.context.Destroyed
meth public java.lang.Class<? extends java.lang.annotation.Annotation> value()
meth public static jakarta.enterprise.context.Destroyed$Literal of(java.lang.Class<? extends java.lang.annotation.Annotation>)
supr jakarta.enterprise.util.AnnotationLiteral<jakarta.enterprise.context.Destroyed>
hfds serialVersionUID,value

CLSS public abstract interface !annotation jakarta.enterprise.context.Initialized
 anno 0 jakarta.inject.Qualifier()
 anno 0 java.lang.annotation.Documented()
 anno 0 java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy value=RUNTIME)
 anno 0 java.lang.annotation.Target(java.lang.annotation.ElementType[] value=[TYPE, METHOD, PARAMETER, FIELD])
innr public final static Literal
intf java.lang.annotation.Annotation
meth public abstract java.lang.Class<? extends java.lang.annotation.Annotation> value()

CLSS public final static jakarta.enterprise.context.Initialized$Literal
 outer jakarta.enterprise.context.Initialized
fld public final static jakarta.enterprise.context.Initialized$Literal APPLICATION
fld public final static jakarta.enterprise.context.Initialized$Literal CONVERSATION
fld public final static jakarta.enterprise.context.Initialized$Literal REQUEST
fld public final static jakarta.enterprise.context.Initialized$Literal SESSION
intf jakarta.enterprise.context.Initialized
meth public java.lang.Class<? extends java.lang.annotation.Annotation> value()
meth public static jakarta.enterprise.context.Initialized$Literal of(java.lang.Class<? extends java.lang.annotation.Annotation>)
supr jakarta.enterprise.util.AnnotationLiteral<jakarta.enterprise.context.Initialized>
hfds serialVersionUID,value

CLSS public jakarta.enterprise.context.NonexistentConversationException
cons public <init>()
cons public <init>(java.lang.String)
cons public <init>(java.lang.String,java.lang.Throwable)
cons public <init>(java.lang.Throwable)
supr jakarta.enterprise.context.ContextException
hfds serialVersionUID

CLSS public abstract interface !annotation jakarta.enterprise.context.NormalScope
 anno 0 java.lang.annotation.Documented()
 anno 0 java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy value=RUNTIME)
 anno 0 java.lang.annotation.Target(java.lang.annotation.ElementType[] value=[ANNOTATION_TYPE])
intf java.lang.annotation.Annotation
meth public abstract !hasdefault boolean passivating() value= false

CLSS public abstract interface !annotation jakarta.enterprise.context.RequestScoped
 anno 0 jakarta.enterprise.context.NormalScope(boolean passivating=false)
 anno 0 java.lang.annotation.Documented()
 anno 0 java.lang.annotation.Inherited()
 anno 0 java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy value=RUNTIME)
 anno 0 java.lang.annotation.Target(java.lang.annotation.ElementType[] value=[TYPE, METHOD, FIELD])
innr public final static Literal
intf java.lang.annotation.Annotation

CLSS public final static jakarta.enterprise.context.RequestScoped$Literal
 outer jakarta.enterprise.context.RequestScoped
cons public <init>()
fld public final static jakarta.enterprise.context.RequestScoped$Literal INSTANCE
intf jakarta.enterprise.context.RequestScoped
supr jakarta.enterprise.util.AnnotationLiteral<jakarta.enterprise.context.RequestScoped>
hfds serialVersionUID

CLSS public abstract interface !annotation jakarta.enterprise.context.SessionScoped
 anno 0 jakarta.enterprise.context.NormalScope(boolean passivating=true)
 anno 0 java.lang.annotation.Documented()
 anno 0 java.lang.annotation.Inherited()
 anno 0 java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy value=RUNTIME)
 anno 0 java.lang.annotation.Target(java.lang.annotation.ElementType[] value=[TYPE, METHOD, FIELD])
innr public final static Literal
intf java.lang.annotation.Annotation

CLSS public final static jakarta.enterprise.context.SessionScoped$Literal
 outer jakarta.enterprise.context.SessionScoped
cons public <init>()
fld public final static jakarta.enterprise.context.SessionScoped$Literal INSTANCE
intf jakarta.enterprise.context.SessionScoped
supr jakarta.enterprise.util.AnnotationLiteral<jakarta.enterprise.context.SessionScoped>
hfds serialVersionUID

CLSS public abstract interface !annotation jakarta.enterprise.context.control.ActivateRequestContext
 anno 0 jakarta.interceptor.InterceptorBinding()
 anno 0 java.lang.annotation.Documented()
 anno 0 java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy value=RUNTIME)
 anno 0 java.lang.annotation.Target(java.lang.annotation.ElementType[] value=[METHOD, TYPE])
intf java.lang.annotation.Annotation

CLSS public abstract interface jakarta.enterprise.context.control.RequestContextController
meth public abstract boolean activate()
meth public abstract void deactivate()

CLSS public abstract interface jakarta.enterprise.context.spi.AlterableContext
intf jakarta.enterprise.context.spi.Context
meth public abstract void destroy(jakarta.enterprise.context.spi.Contextual<?>)

CLSS public abstract interface jakarta.enterprise.context.spi.Context
meth public abstract <%0 extends java.lang.Object> {%%0} get(jakarta.enterprise.context.spi.Contextual<{%%0}>)
meth public abstract <%0 extends java.lang.Object> {%%0} get(jakarta.enterprise.context.spi.Contextual<{%%0}>,jakarta.enterprise.context.spi.CreationalContext<{%%0}>)
meth public abstract boolean isActive()
meth public abstract java.lang.Class<? extends java.lang.annotation.Annotation> getScope()

CLSS public abstract interface jakarta.enterprise.context.spi.Contextual<%0 extends java.lang.Object>
meth public abstract void destroy({jakarta.enterprise.context.spi.Contextual%0},jakarta.enterprise.context.spi.CreationalContext<{jakarta.enterprise.context.spi.Contextual%0}>)
meth public abstract {jakarta.enterprise.context.spi.Contextual%0} create(jakarta.enterprise.context.spi.CreationalContext<{jakarta.enterprise.context.spi.Contextual%0}>)

CLSS public abstract interface jakarta.enterprise.context.spi.CreationalContext<%0 extends java.lang.Object>
meth public abstract void push({jakarta.enterprise.context.spi.CreationalContext%0})
meth public abstract void release()

CLSS public abstract interface jakarta.enterprise.event.Event<%0 extends java.lang.Object>
meth public abstract !varargs <%0 extends {jakarta.enterprise.event.Event%0}> jakarta.enterprise.event.Event<{%%0}> select(jakarta.enterprise.util.TypeLiteral<{%%0}>,java.lang.annotation.Annotation[])
meth public abstract !varargs <%0 extends {jakarta.enterprise.event.Event%0}> jakarta.enterprise.event.Event<{%%0}> select(java.lang.Class<{%%0}>,java.lang.annotation.Annotation[])
meth public abstract !varargs jakarta.enterprise.event.Event<{jakarta.enterprise.event.Event%0}> select(java.lang.annotation.Annotation[])
meth public abstract <%0 extends {jakarta.enterprise.event.Event%0}> java.util.concurrent.CompletionStage<{%%0}> fireAsync({%%0})
meth public abstract <%0 extends {jakarta.enterprise.event.Event%0}> java.util.concurrent.CompletionStage<{%%0}> fireAsync({%%0},jakarta.enterprise.event.NotificationOptions)
meth public abstract void fire({jakarta.enterprise.event.Event%0})

CLSS public abstract interface jakarta.enterprise.event.NotificationOptions
innr public abstract interface static Builder
meth public abstract java.lang.Object get(java.lang.String)
meth public abstract java.util.concurrent.Executor getExecutor()
meth public static jakarta.enterprise.event.NotificationOptions of(java.lang.String,java.lang.Object)
meth public static jakarta.enterprise.event.NotificationOptions ofExecutor(java.util.concurrent.Executor)
meth public static jakarta.enterprise.event.NotificationOptions$Builder builder()

CLSS public abstract interface static jakarta.enterprise.event.NotificationOptions$Builder
 outer jakarta.enterprise.event.NotificationOptions
meth public abstract jakarta.enterprise.event.NotificationOptions build()
meth public abstract jakarta.enterprise.event.NotificationOptions$Builder set(java.lang.String,java.lang.Object)
meth public abstract jakarta.enterprise.event.NotificationOptions$Builder setExecutor(java.util.concurrent.Executor)

CLSS public jakarta.enterprise.event.ObserverException
cons public <init>()
cons public <init>(java.lang.String)
cons public <init>(java.lang.String,java.lang.Throwable)
cons public <init>(java.lang.Throwable)
supr java.lang.RuntimeException
hfds serialVersionUID

CLSS public abstract interface !annotation jakarta.enterprise.event.Observes
 anno 0 java.lang.annotation.Documented()
 anno 0 java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy value=RUNTIME)
 anno 0 java.lang.annotation.Target(java.lang.annotation.ElementType[] value=[PARAMETER])
intf java.lang.annotation.Annotation
meth public abstract !hasdefault jakarta.enterprise.event.Reception notifyObserver() value= ALWAYS
meth public abstract !hasdefault jakarta.enterprise.event.TransactionPhase during() value= IN_PROGRESS

CLSS public abstract interface !annotation jakarta.enterprise.event.ObservesAsync
 anno 0 java.lang.annotation.Documented()
 anno 0 java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy value=RUNTIME)
 anno 0 java.lang.annotation.Target(java.lang.annotation.ElementType[] value=[PARAMETER])
intf java.lang.annotation.Annotation
meth public abstract !hasdefault jakarta.enterprise.event.Reception notifyObserver() value= ALWAYS

CLSS public final !enum jakarta.enterprise.event.Reception
fld public final static jakarta.enterprise.event.Reception ALWAYS
fld public final static jakarta.enterprise.event.Reception IF_EXISTS
meth public static jakarta.enterprise.event.Reception valueOf(java.lang.String)
meth public static jakarta.enterprise.event.Reception[] values()
supr java.lang.Enum<jakarta.enterprise.event.Reception>

CLSS public final !enum jakarta.enterprise.event.TransactionPhase
fld public final static jakarta.enterprise.event.TransactionPhase AFTER_COMPLETION
fld public final static jakarta.enterprise.event.TransactionPhase AFTER_FAILURE
fld public final static jakarta.enterprise.event.TransactionPhase AFTER_SUCCESS
fld public final static jakarta.enterprise.event.TransactionPhase BEFORE_COMPLETION
fld public final static jakarta.enterprise.event.TransactionPhase IN_PROGRESS
meth public static jakarta.enterprise.event.TransactionPhase valueOf(java.lang.String)
meth public static jakarta.enterprise.event.TransactionPhase[] values()
supr java.lang.Enum<jakarta.enterprise.event.TransactionPhase>

CLSS public abstract interface !annotation jakarta.enterprise.inject.Alternative
 anno 0 java.lang.annotation.Documented()
 anno 0 java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy value=RUNTIME)
 anno 0 java.lang.annotation.Target(java.lang.annotation.ElementType[] value=[TYPE, METHOD, FIELD])
innr public final static Literal
intf java.lang.annotation.Annotation

CLSS public final static jakarta.enterprise.inject.Alternative$Literal
 outer jakarta.enterprise.inject.Alternative
cons public <init>()
fld public final static jakarta.enterprise.inject.Alternative$Literal INSTANCE
intf jakarta.enterprise.inject.Alternative
supr jakarta.enterprise.util.AnnotationLiteral<jakarta.enterprise.inject.Alternative>
hfds serialVersionUID

CLSS public jakarta.enterprise.inject.AmbiguousResolutionException
cons public <init>()
cons public <init>(java.lang.String)
cons public <init>(java.lang.String,java.lang.Throwable)
cons public <init>(java.lang.Throwable)
supr jakarta.enterprise.inject.ResolutionException
hfds serialVersionUID

CLSS public abstract interface !annotation jakarta.enterprise.inject.Any
 anno 0 jakarta.inject.Qualifier()
 anno 0 java.lang.annotation.Documented()
 anno 0 java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy value=RUNTIME)
 anno 0 java.lang.annotation.Target(java.lang.annotation.ElementType[] value=[TYPE, METHOD, FIELD, PARAMETER])
innr public final static Literal
intf java.lang.annotation.Annotation

CLSS public final static jakarta.enterprise.inject.Any$Literal
 outer jakarta.enterprise.inject.Any
cons public <init>()
fld public final static jakarta.enterprise.inject.Any$Literal INSTANCE
intf jakarta.enterprise.inject.Any
supr jakarta.enterprise.util.AnnotationLiteral<jakarta.enterprise.inject.Any>
hfds serialVersionUID

CLSS public jakarta.enterprise.inject.CreationException
cons public <init>()
cons public <init>(java.lang.String)
cons public <init>(java.lang.String,java.lang.Throwable)
cons public <init>(java.lang.Throwable)
supr jakarta.enterprise.inject.InjectionException
hfds serialVersionUID

CLSS public abstract interface !annotation jakarta.enterprise.inject.Decorated
 anno 0 jakarta.inject.Qualifier()
 anno 0 java.lang.annotation.Documented()
 anno 0 java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy value=RUNTIME)
 anno 0 java.lang.annotation.Target(java.lang.annotation.ElementType[] value=[PARAMETER, FIELD])
intf java.lang.annotation.Annotation

CLSS public abstract interface !annotation jakarta.enterprise.inject.Default
 anno 0 jakarta.inject.Qualifier()
 anno 0 java.lang.annotation.Documented()
 anno 0 java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy value=RUNTIME)
 anno 0 java.lang.annotation.Target(java.lang.annotation.ElementType[] value=[TYPE, METHOD, PARAMETER, FIELD])
innr public final static Literal
intf java.lang.annotation.Annotation

CLSS public final static jakarta.enterprise.inject.Default$Literal
 outer jakarta.enterprise.inject.Default
cons public <init>()
fld public final static jakarta.enterprise.inject.Default$Literal INSTANCE
intf jakarta.enterprise.inject.Default
supr jakarta.enterprise.util.AnnotationLiteral<jakarta.enterprise.inject.Default>
hfds serialVersionUID

CLSS public abstract interface !annotation jakarta.enterprise.inject.Disposes
 anno 0 java.lang.annotation.Documented()
 anno 0 java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy value=RUNTIME)
 anno 0 java.lang.annotation.Target(java.lang.annotation.ElementType[] value=[PARAMETER])
intf java.lang.annotation.Annotation

CLSS public jakarta.enterprise.inject.IllegalProductException
cons public <init>()
cons public <init>(java.lang.String)
cons public <init>(java.lang.String,java.lang.Throwable)
cons public <init>(java.lang.Throwable)
supr jakarta.enterprise.inject.InjectionException
hfds serialVersionUID

CLSS public jakarta.enterprise.inject.InjectionException
cons public <init>()
cons public <init>(java.lang.String)
cons public <init>(java.lang.String,java.lang.Throwable)
cons public <init>(java.lang.Throwable)
supr java.lang.RuntimeException
hfds serialVersionUID

CLSS public abstract interface jakarta.enterprise.inject.Instance<%0 extends java.lang.Object>
intf jakarta.inject.Provider<{jakarta.enterprise.inject.Instance%0}>
intf java.lang.Iterable<{jakarta.enterprise.inject.Instance%0}>
meth public abstract !varargs <%0 extends {jakarta.enterprise.inject.Instance%0}> jakarta.enterprise.inject.Instance<{%%0}> select(jakarta.enterprise.util.TypeLiteral<{%%0}>,java.lang.annotation.Annotation[])
meth public abstract !varargs <%0 extends {jakarta.enterprise.inject.Instance%0}> jakarta.enterprise.inject.Instance<{%%0}> select(java.lang.Class<{%%0}>,java.lang.annotation.Annotation[])
meth public abstract !varargs jakarta.enterprise.inject.Instance<{jakarta.enterprise.inject.Instance%0}> select(java.lang.annotation.Annotation[])
meth public abstract boolean isAmbiguous()
meth public abstract boolean isUnsatisfied()
meth public abstract void destroy({jakarta.enterprise.inject.Instance%0})
meth public boolean isResolvable()
meth public java.util.stream.Stream<{jakarta.enterprise.inject.Instance%0}> stream()

CLSS public abstract interface !annotation jakarta.enterprise.inject.Intercepted
 anno 0 jakarta.inject.Qualifier()
 anno 0 java.lang.annotation.Documented()
 anno 0 java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy value=RUNTIME)
 anno 0 java.lang.annotation.Target(java.lang.annotation.ElementType[] value=[PARAMETER, FIELD])
intf java.lang.annotation.Annotation

CLSS public abstract interface !annotation jakarta.enterprise.inject.Model
 anno 0 jakarta.enterprise.context.RequestScoped()
 anno 0 jakarta.enterprise.inject.Stereotype()
 anno 0 jakarta.inject.Named(java.lang.String value="")
 anno 0 java.lang.annotation.Documented()
 anno 0 java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy value=RUNTIME)
 anno 0 java.lang.annotation.Target(java.lang.annotation.ElementType[] value=[TYPE, METHOD, FIELD])
intf java.lang.annotation.Annotation

CLSS public abstract interface !annotation jakarta.enterprise.inject.New
 anno 0 jakarta.inject.Qualifier()
 anno 0 java.lang.annotation.Documented()
 anno 0 java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy value=RUNTIME)
 anno 0 java.lang.annotation.Target(java.lang.annotation.ElementType[] value=[FIELD, PARAMETER, METHOD, TYPE])
innr public final static Literal
intf java.lang.annotation.Annotation
meth public abstract !hasdefault java.lang.Class<?> value() value= class jakarta.enterprise.inject.New

CLSS public final static jakarta.enterprise.inject.New$Literal
 outer jakarta.enterprise.inject.New
fld public final static jakarta.enterprise.inject.New$Literal INSTANCE
intf jakarta.enterprise.inject.New
meth public java.lang.Class<?> value()
meth public static jakarta.enterprise.inject.New$Literal of(java.lang.Class<?>)
supr jakarta.enterprise.util.AnnotationLiteral<jakarta.enterprise.inject.New>
hfds serialVersionUID,value

CLSS public abstract interface !annotation jakarta.enterprise.inject.Produces
 anno 0 java.lang.annotation.Documented()
 anno 0 java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy value=RUNTIME)
 anno 0 java.lang.annotation.Target(java.lang.annotation.ElementType[] value=[METHOD, FIELD])
intf java.lang.annotation.Annotation

CLSS public jakarta.enterprise.inject.ResolutionException
cons public <init>()
cons public <init>(java.lang.String)
cons public <init>(java.lang.String,java.lang.Throwable)
cons public <init>(java.lang.Throwable)
supr jakarta.enterprise.inject.InjectionException
hfds serialVersionUID

CLSS public abstract interface !annotation jakarta.enterprise.inject.Specializes
 anno 0 java.lang.annotation.Documented()
 anno 0 java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy value=RUNTIME)
 anno 0 java.lang.annotation.Target(java.lang.annotation.ElementType[] value=[TYPE, METHOD])
innr public final static Literal
intf java.lang.annotation.Annotation

CLSS public final static jakarta.enterprise.inject.Specializes$Literal
 outer jakarta.enterprise.inject.Specializes
cons public <init>()
fld public final static jakarta.enterprise.inject.Specializes$Literal INSTANCE
intf jakarta.enterprise.inject.Specializes
supr jakarta.enterprise.util.AnnotationLiteral<jakarta.enterprise.inject.Specializes>
hfds serialVersionUID

CLSS public abstract interface !annotation jakarta.enterprise.inject.Stereotype
 anno 0 java.lang.annotation.Documented()
 anno 0 java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy value=RUNTIME)
 anno 0 java.lang.annotation.Target(java.lang.annotation.ElementType[] value=[ANNOTATION_TYPE])
intf java.lang.annotation.Annotation

CLSS public abstract interface !annotation jakarta.enterprise.inject.TransientReference
 anno 0 java.lang.annotation.Documented()
 anno 0 java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy value=RUNTIME)
 anno 0 java.lang.annotation.Target(java.lang.annotation.ElementType[] value=[PARAMETER])
innr public final static Literal
intf java.lang.annotation.Annotation

CLSS public final static jakarta.enterprise.inject.TransientReference$Literal
 outer jakarta.enterprise.inject.TransientReference
cons public <init>()
fld public final static jakarta.enterprise.inject.TransientReference$Literal INSTANCE
intf jakarta.enterprise.inject.TransientReference
supr jakarta.enterprise.util.AnnotationLiteral<jakarta.enterprise.inject.TransientReference>
hfds serialVersionUID

CLSS public abstract interface !annotation jakarta.enterprise.inject.Typed
 anno 0 java.lang.annotation.Documented()
 anno 0 java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy value=RUNTIME)
 anno 0 java.lang.annotation.Target(java.lang.annotation.ElementType[] value=[FIELD, METHOD, TYPE])
innr public final static Literal
intf java.lang.annotation.Annotation
meth public abstract !hasdefault java.lang.Class<?>[] value() value= []

CLSS public final static jakarta.enterprise.inject.Typed$Literal
 outer jakarta.enterprise.inject.Typed
fld public final static jakarta.enterprise.inject.Typed$Literal INSTANCE
intf jakarta.enterprise.inject.Typed
meth public java.lang.Class<?>[] value()
meth public static jakarta.enterprise.inject.Typed$Literal of(java.lang.Class<?>[])
supr jakarta.enterprise.util.AnnotationLiteral<jakarta.enterprise.inject.Typed>
hfds serialVersionUID,value

CLSS public jakarta.enterprise.inject.UnproxyableResolutionException
cons public <init>()
cons public <init>(java.lang.String)
cons public <init>(java.lang.String,java.lang.Throwable)
cons public <init>(java.lang.Throwable)
supr jakarta.enterprise.inject.ResolutionException
hfds serialVersionUID

CLSS public jakarta.enterprise.inject.UnsatisfiedResolutionException
cons public <init>()
cons public <init>(java.lang.String)
cons public <init>(java.lang.String,java.lang.Throwable)
cons public <init>(java.lang.Throwable)
supr jakarta.enterprise.inject.ResolutionException
hfds serialVersionUID

CLSS public abstract interface !annotation jakarta.enterprise.inject.Vetoed
 anno 0 java.lang.annotation.Documented()
 anno 0 java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy value=RUNTIME)
 anno 0 java.lang.annotation.Target(java.lang.annotation.ElementType[] value=[TYPE, PACKAGE])
innr public final static Literal
intf java.lang.annotation.Annotation

CLSS public final static jakarta.enterprise.inject.Vetoed$Literal
 outer jakarta.enterprise.inject.Vetoed
cons public <init>()
fld public final static jakarta.enterprise.inject.Vetoed$Literal INSTANCE
intf jakarta.enterprise.inject.Vetoed
supr jakarta.enterprise.util.AnnotationLiteral<jakarta.enterprise.inject.Vetoed>
hfds serialVersionUID

CLSS public final jakarta.enterprise.inject.literal.InjectLiteral
cons public <init>()
fld public final static jakarta.enterprise.inject.literal.InjectLiteral INSTANCE
intf jakarta.inject.Inject
supr jakarta.enterprise.util.AnnotationLiteral<jakarta.inject.Inject>
hfds serialVersionUID

CLSS public final jakarta.enterprise.inject.literal.NamedLiteral
fld public final static jakarta.inject.Named INSTANCE
intf jakarta.inject.Named
meth public java.lang.String value()
meth public static jakarta.enterprise.inject.literal.NamedLiteral of(java.lang.String)
supr jakarta.enterprise.util.AnnotationLiteral<jakarta.inject.Named>
hfds serialVersionUID,value

CLSS public final jakarta.enterprise.inject.literal.QualifierLiteral
cons public <init>()
fld public final static jakarta.enterprise.inject.literal.QualifierLiteral INSTANCE
intf jakarta.inject.Qualifier
supr jakarta.enterprise.util.AnnotationLiteral<jakarta.inject.Qualifier>
hfds serialVersionUID

CLSS public final jakarta.enterprise.inject.literal.SingletonLiteral
cons public <init>()
fld public final static jakarta.enterprise.inject.literal.SingletonLiteral INSTANCE
intf jakarta.inject.Singleton
supr jakarta.enterprise.util.AnnotationLiteral<jakarta.inject.Singleton>
hfds serialVersionUID

CLSS public abstract interface jakarta.enterprise.inject.se.SeContainer
intf jakarta.enterprise.inject.Instance<java.lang.Object>
intf java.lang.AutoCloseable
meth public abstract boolean isRunning()
meth public abstract jakarta.enterprise.inject.spi.BeanManager getBeanManager()
meth public abstract void close()

CLSS public abstract jakarta.enterprise.inject.se.SeContainerInitializer
cons public <init>()
meth public abstract !varargs jakarta.enterprise.inject.se.SeContainerInitializer addBeanClasses(java.lang.Class<?>[])
meth public abstract !varargs jakarta.enterprise.inject.se.SeContainerInitializer addExtensions(jakarta.enterprise.inject.spi.Extension[])
meth public abstract !varargs jakarta.enterprise.inject.se.SeContainerInitializer addExtensions(java.lang.Class<? extends jakarta.enterprise.inject.spi.Extension>[])
meth public abstract !varargs jakarta.enterprise.inject.se.SeContainerInitializer addPackages(boolean,java.lang.Class<?>[])
meth public abstract !varargs jakarta.enterprise.inject.se.SeContainerInitializer addPackages(boolean,java.lang.Package[])
meth public abstract !varargs jakarta.enterprise.inject.se.SeContainerInitializer addPackages(java.lang.Class<?>[])
meth public abstract !varargs jakarta.enterprise.inject.se.SeContainerInitializer addPackages(java.lang.Package[])
meth public abstract !varargs jakarta.enterprise.inject.se.SeContainerInitializer enableDecorators(java.lang.Class<?>[])
meth public abstract !varargs jakarta.enterprise.inject.se.SeContainerInitializer enableInterceptors(java.lang.Class<?>[])
meth public abstract !varargs jakarta.enterprise.inject.se.SeContainerInitializer selectAlternativeStereotypes(java.lang.Class<? extends java.lang.annotation.Annotation>[])
meth public abstract !varargs jakarta.enterprise.inject.se.SeContainerInitializer selectAlternatives(java.lang.Class<?>[])
meth public abstract jakarta.enterprise.inject.se.SeContainer initialize()
meth public abstract jakarta.enterprise.inject.se.SeContainerInitializer addProperty(java.lang.String,java.lang.Object)
meth public abstract jakarta.enterprise.inject.se.SeContainerInitializer disableDiscovery()
meth public abstract jakarta.enterprise.inject.se.SeContainerInitializer setClassLoader(java.lang.ClassLoader)
meth public abstract jakarta.enterprise.inject.se.SeContainerInitializer setProperties(java.util.Map<java.lang.String,java.lang.Object>)
meth public static jakarta.enterprise.inject.se.SeContainerInitializer newInstance()
supr java.lang.Object

CLSS public abstract interface jakarta.enterprise.inject.spi.AfterBeanDiscovery
meth public abstract <%0 extends java.lang.Object> jakarta.enterprise.inject.spi.AnnotatedType<{%%0}> getAnnotatedType(java.lang.Class<{%%0}>,java.lang.String)
meth public abstract <%0 extends java.lang.Object> jakarta.enterprise.inject.spi.configurator.BeanConfigurator<{%%0}> addBean()
meth public abstract <%0 extends java.lang.Object> jakarta.enterprise.inject.spi.configurator.ObserverMethodConfigurator<{%%0}> addObserverMethod()
meth public abstract <%0 extends java.lang.Object> java.lang.Iterable<jakarta.enterprise.inject.spi.AnnotatedType<{%%0}>> getAnnotatedTypes(java.lang.Class<{%%0}>)
meth public abstract void addBean(jakarta.enterprise.inject.spi.Bean<?>)
meth public abstract void addContext(jakarta.enterprise.context.spi.Context)
meth public abstract void addDefinitionError(java.lang.Throwable)
meth public abstract void addObserverMethod(jakarta.enterprise.inject.spi.ObserverMethod<?>)

CLSS public abstract interface jakarta.enterprise.inject.spi.AfterDeploymentValidation
meth public abstract void addDeploymentProblem(java.lang.Throwable)

CLSS public abstract interface jakarta.enterprise.inject.spi.AfterTypeDiscovery
meth public abstract <%0 extends java.lang.Object> jakarta.enterprise.inject.spi.configurator.AnnotatedTypeConfigurator<{%%0}> addAnnotatedType(java.lang.Class<{%%0}>,java.lang.String)
meth public abstract java.util.List<java.lang.Class<?>> getAlternatives()
meth public abstract java.util.List<java.lang.Class<?>> getDecorators()
meth public abstract java.util.List<java.lang.Class<?>> getInterceptors()
meth public abstract void addAnnotatedType(jakarta.enterprise.inject.spi.AnnotatedType<?>,java.lang.String)

CLSS public abstract interface jakarta.enterprise.inject.spi.Annotated
meth public abstract <%0 extends java.lang.annotation.Annotation> java.util.Set<{%%0}> getAnnotations(java.lang.Class<{%%0}>)
meth public abstract <%0 extends java.lang.annotation.Annotation> {%%0} getAnnotation(java.lang.Class<{%%0}>)
meth public abstract boolean isAnnotationPresent(java.lang.Class<? extends java.lang.annotation.Annotation>)
meth public abstract java.lang.reflect.Type getBaseType()
meth public abstract java.util.Set<java.lang.annotation.Annotation> getAnnotations()
meth public abstract java.util.Set<java.lang.reflect.Type> getTypeClosure()

CLSS public abstract interface jakarta.enterprise.inject.spi.AnnotatedCallable<%0 extends java.lang.Object>
intf jakarta.enterprise.inject.spi.AnnotatedMember<{jakarta.enterprise.inject.spi.AnnotatedCallable%0}>
meth public abstract java.util.List<jakarta.enterprise.inject.spi.AnnotatedParameter<{jakarta.enterprise.inject.spi.AnnotatedCallable%0}>> getParameters()

CLSS public abstract interface jakarta.enterprise.inject.spi.AnnotatedConstructor<%0 extends java.lang.Object>
intf jakarta.enterprise.inject.spi.AnnotatedCallable<{jakarta.enterprise.inject.spi.AnnotatedConstructor%0}>
meth public <%0 extends java.lang.annotation.Annotation> java.util.Set<{%%0}> getAnnotations(java.lang.Class<{%%0}>)
meth public abstract java.lang.reflect.Constructor<{jakarta.enterprise.inject.spi.AnnotatedConstructor%0}> getJavaMember()

CLSS public abstract interface jakarta.enterprise.inject.spi.AnnotatedField<%0 extends java.lang.Object>
intf jakarta.enterprise.inject.spi.AnnotatedMember<{jakarta.enterprise.inject.spi.AnnotatedField%0}>
meth public <%0 extends java.lang.annotation.Annotation> java.util.Set<{%%0}> getAnnotations(java.lang.Class<{%%0}>)
meth public abstract java.lang.reflect.Field getJavaMember()

CLSS public abstract interface jakarta.enterprise.inject.spi.AnnotatedMember<%0 extends java.lang.Object>
intf jakarta.enterprise.inject.spi.Annotated
meth public abstract boolean isStatic()
meth public abstract jakarta.enterprise.inject.spi.AnnotatedType<{jakarta.enterprise.inject.spi.AnnotatedMember%0}> getDeclaringType()
meth public abstract java.lang.reflect.Member getJavaMember()

CLSS public abstract interface jakarta.enterprise.inject.spi.AnnotatedMethod<%0 extends java.lang.Object>
intf jakarta.enterprise.inject.spi.AnnotatedCallable<{jakarta.enterprise.inject.spi.AnnotatedMethod%0}>
meth public <%0 extends java.lang.annotation.Annotation> java.util.Set<{%%0}> getAnnotations(java.lang.Class<{%%0}>)
meth public abstract java.lang.reflect.Method getJavaMember()

CLSS public abstract interface jakarta.enterprise.inject.spi.AnnotatedParameter<%0 extends java.lang.Object>
intf jakarta.enterprise.inject.spi.Annotated
meth public <%0 extends java.lang.annotation.Annotation> java.util.Set<{%%0}> getAnnotations(java.lang.Class<{%%0}>)
meth public abstract int getPosition()
meth public abstract jakarta.enterprise.inject.spi.AnnotatedCallable<{jakarta.enterprise.inject.spi.AnnotatedParameter%0}> getDeclaringCallable()
meth public java.lang.reflect.Parameter getJavaParameter()

CLSS public abstract interface jakarta.enterprise.inject.spi.AnnotatedType<%0 extends java.lang.Object>
intf jakarta.enterprise.inject.spi.Annotated
meth public <%0 extends java.lang.annotation.Annotation> java.util.Set<{%%0}> getAnnotations(java.lang.Class<{%%0}>)
meth public abstract java.lang.Class<{jakarta.enterprise.inject.spi.AnnotatedType%0}> getJavaClass()
meth public abstract java.util.Set<jakarta.enterprise.inject.spi.AnnotatedConstructor<{jakarta.enterprise.inject.spi.AnnotatedType%0}>> getConstructors()
meth public abstract java.util.Set<jakarta.enterprise.inject.spi.AnnotatedField<? super {jakarta.enterprise.inject.spi.AnnotatedType%0}>> getFields()
meth public abstract java.util.Set<jakarta.enterprise.inject.spi.AnnotatedMethod<? super {jakarta.enterprise.inject.spi.AnnotatedType%0}>> getMethods()

CLSS public abstract interface jakarta.enterprise.inject.spi.Bean<%0 extends java.lang.Object>
intf jakarta.enterprise.context.spi.Contextual<{jakarta.enterprise.inject.spi.Bean%0}>
intf jakarta.enterprise.inject.spi.BeanAttributes<{jakarta.enterprise.inject.spi.Bean%0}>
meth public abstract boolean isNullable()
meth public abstract java.lang.Class<?> getBeanClass()
meth public abstract java.util.Set<jakarta.enterprise.inject.spi.InjectionPoint> getInjectionPoints()

CLSS public abstract interface jakarta.enterprise.inject.spi.BeanAttributes<%0 extends java.lang.Object>
meth public abstract boolean isAlternative()
meth public abstract java.lang.Class<? extends java.lang.annotation.Annotation> getScope()
meth public abstract java.lang.String getName()
meth public abstract java.util.Set<java.lang.Class<? extends java.lang.annotation.Annotation>> getStereotypes()
meth public abstract java.util.Set<java.lang.annotation.Annotation> getQualifiers()
meth public abstract java.util.Set<java.lang.reflect.Type> getTypes()

CLSS public abstract interface jakarta.enterprise.inject.spi.BeanManager
meth public abstract !varargs <%0 extends java.lang.Object> java.util.Set<jakarta.enterprise.inject.spi.ObserverMethod<? super {%%0}>> resolveObserverMethods({%%0},java.lang.annotation.Annotation[])
meth public abstract !varargs java.util.List<jakarta.enterprise.inject.spi.Decorator<?>> resolveDecorators(java.util.Set<java.lang.reflect.Type>,java.lang.annotation.Annotation[])
meth public abstract !varargs java.util.List<jakarta.enterprise.inject.spi.Interceptor<?>> resolveInterceptors(jakarta.enterprise.inject.spi.InterceptionType,java.lang.annotation.Annotation[])
meth public abstract !varargs java.util.Set<jakarta.enterprise.inject.spi.Bean<?>> getBeans(java.lang.reflect.Type,java.lang.annotation.Annotation[])
meth public abstract !varargs void fireEvent(java.lang.Object,java.lang.annotation.Annotation[])
meth public abstract <%0 extends jakarta.enterprise.inject.spi.Extension> {%%0} getExtension(java.lang.Class<{%%0}>)
meth public abstract <%0 extends java.lang.Object, %1 extends java.lang.Object> jakarta.enterprise.inject.spi.Bean<{%%0}> createBean(jakarta.enterprise.inject.spi.BeanAttributes<{%%0}>,java.lang.Class<{%%1}>,jakarta.enterprise.inject.spi.ProducerFactory<{%%1}>)
meth public abstract <%0 extends java.lang.Object> jakarta.enterprise.context.spi.CreationalContext<{%%0}> createCreationalContext(jakarta.enterprise.context.spi.Contextual<{%%0}>)
meth public abstract <%0 extends java.lang.Object> jakarta.enterprise.inject.spi.AnnotatedType<{%%0}> createAnnotatedType(java.lang.Class<{%%0}>)
meth public abstract <%0 extends java.lang.Object> jakarta.enterprise.inject.spi.Bean<? extends {%%0}> resolve(java.util.Set<jakarta.enterprise.inject.spi.Bean<? extends {%%0}>>)
meth public abstract <%0 extends java.lang.Object> jakarta.enterprise.inject.spi.Bean<{%%0}> createBean(jakarta.enterprise.inject.spi.BeanAttributes<{%%0}>,java.lang.Class<{%%0}>,jakarta.enterprise.inject.spi.InjectionTargetFactory<{%%0}>)
meth public abstract <%0 extends java.lang.Object> jakarta.enterprise.inject.spi.BeanAttributes<{%%0}> createBeanAttributes(jakarta.enterprise.inject.spi.AnnotatedType<{%%0}>)
meth public abstract <%0 extends java.lang.Object> jakarta.enterprise.inject.spi.InjectionTarget<{%%0}> createInjectionTarget(jakarta.enterprise.inject.spi.AnnotatedType<{%%0}>)
meth public abstract <%0 extends java.lang.Object> jakarta.enterprise.inject.spi.InjectionTargetFactory<{%%0}> getInjectionTargetFactory(jakarta.enterprise.inject.spi.AnnotatedType<{%%0}>)
meth public abstract <%0 extends java.lang.Object> jakarta.enterprise.inject.spi.InterceptionFactory<{%%0}> createInterceptionFactory(jakarta.enterprise.context.spi.CreationalContext<{%%0}>,java.lang.Class<{%%0}>)
meth public abstract <%0 extends java.lang.Object> jakarta.enterprise.inject.spi.ProducerFactory<{%%0}> getProducerFactory(jakarta.enterprise.inject.spi.AnnotatedField<? super {%%0}>,jakarta.enterprise.inject.spi.Bean<{%%0}>)
meth public abstract <%0 extends java.lang.Object> jakarta.enterprise.inject.spi.ProducerFactory<{%%0}> getProducerFactory(jakarta.enterprise.inject.spi.AnnotatedMethod<? super {%%0}>,jakarta.enterprise.inject.spi.Bean<{%%0}>)
meth public abstract boolean areInterceptorBindingsEquivalent(java.lang.annotation.Annotation,java.lang.annotation.Annotation)
meth public abstract boolean areQualifiersEquivalent(java.lang.annotation.Annotation,java.lang.annotation.Annotation)
meth public abstract boolean isInterceptorBinding(java.lang.Class<? extends java.lang.annotation.Annotation>)
meth public abstract boolean isNormalScope(java.lang.Class<? extends java.lang.annotation.Annotation>)
meth public abstract boolean isPassivatingScope(java.lang.Class<? extends java.lang.annotation.Annotation>)
meth public abstract boolean isQualifier(java.lang.Class<? extends java.lang.annotation.Annotation>)
meth public abstract boolean isScope(java.lang.Class<? extends java.lang.annotation.Annotation>)
meth public abstract boolean isStereotype(java.lang.Class<? extends java.lang.annotation.Annotation>)
meth public abstract int getInterceptorBindingHashCode(java.lang.annotation.Annotation)
meth public abstract int getQualifierHashCode(java.lang.annotation.Annotation)
meth public abstract jakarta.el.ELResolver getELResolver()
meth public abstract jakarta.el.ExpressionFactory wrapExpressionFactory(jakarta.el.ExpressionFactory)
meth public abstract jakarta.enterprise.context.spi.Context getContext(java.lang.Class<? extends java.lang.annotation.Annotation>)
meth public abstract jakarta.enterprise.event.Event<java.lang.Object> getEvent()
meth public abstract jakarta.enterprise.inject.Instance<java.lang.Object> createInstance()
meth public abstract jakarta.enterprise.inject.spi.Bean<?> getPassivationCapableBean(java.lang.String)
meth public abstract jakarta.enterprise.inject.spi.BeanAttributes<?> createBeanAttributes(jakarta.enterprise.inject.spi.AnnotatedMember<?>)
meth public abstract jakarta.enterprise.inject.spi.InjectionPoint createInjectionPoint(jakarta.enterprise.inject.spi.AnnotatedField<?>)
meth public abstract jakarta.enterprise.inject.spi.InjectionPoint createInjectionPoint(jakarta.enterprise.inject.spi.AnnotatedParameter<?>)
meth public abstract java.lang.Object getInjectableReference(jakarta.enterprise.inject.spi.InjectionPoint,jakarta.enterprise.context.spi.CreationalContext<?>)
meth public abstract java.lang.Object getReference(jakarta.enterprise.inject.spi.Bean<?>,java.lang.reflect.Type,jakarta.enterprise.context.spi.CreationalContext<?>)
meth public abstract java.util.Set<jakarta.enterprise.inject.spi.Bean<?>> getBeans(java.lang.String)
meth public abstract java.util.Set<java.lang.annotation.Annotation> getInterceptorBindingDefinition(java.lang.Class<? extends java.lang.annotation.Annotation>)
meth public abstract java.util.Set<java.lang.annotation.Annotation> getStereotypeDefinition(java.lang.Class<? extends java.lang.annotation.Annotation>)
meth public abstract void validate(jakarta.enterprise.inject.spi.InjectionPoint)

CLSS public abstract interface jakarta.enterprise.inject.spi.BeforeBeanDiscovery
meth public abstract !varargs void addInterceptorBinding(java.lang.Class<? extends java.lang.annotation.Annotation>,java.lang.annotation.Annotation[])
meth public abstract !varargs void addStereotype(java.lang.Class<? extends java.lang.annotation.Annotation>,java.lang.annotation.Annotation[])
meth public abstract <%0 extends java.lang.Object> jakarta.enterprise.inject.spi.configurator.AnnotatedTypeConfigurator<{%%0}> addAnnotatedType(java.lang.Class<{%%0}>,java.lang.String)
meth public abstract <%0 extends java.lang.annotation.Annotation> jakarta.enterprise.inject.spi.configurator.AnnotatedTypeConfigurator<{%%0}> configureInterceptorBinding(java.lang.Class<{%%0}>)
meth public abstract <%0 extends java.lang.annotation.Annotation> jakarta.enterprise.inject.spi.configurator.AnnotatedTypeConfigurator<{%%0}> configureQualifier(java.lang.Class<{%%0}>)
meth public abstract void addAnnotatedType(jakarta.enterprise.inject.spi.AnnotatedType<?>)
meth public abstract void addAnnotatedType(jakarta.enterprise.inject.spi.AnnotatedType<?>,java.lang.String)
meth public abstract void addInterceptorBinding(jakarta.enterprise.inject.spi.AnnotatedType<? extends java.lang.annotation.Annotation>)
meth public abstract void addQualifier(jakarta.enterprise.inject.spi.AnnotatedType<? extends java.lang.annotation.Annotation>)
meth public abstract void addQualifier(java.lang.Class<? extends java.lang.annotation.Annotation>)
meth public abstract void addScope(java.lang.Class<? extends java.lang.annotation.Annotation>,boolean,boolean)

CLSS public abstract interface jakarta.enterprise.inject.spi.BeforeShutdown

CLSS public abstract jakarta.enterprise.inject.spi.CDI<%0 extends java.lang.Object>
cons public <init>()
fld protected static volatile jakarta.enterprise.inject.spi.CDIProvider configuredProvider
fld protected static volatile java.util.Set<jakarta.enterprise.inject.spi.CDIProvider> discoveredProviders
intf jakarta.enterprise.inject.Instance<{jakarta.enterprise.inject.spi.CDI%0}>
meth public abstract jakarta.enterprise.inject.spi.BeanManager getBeanManager()
meth public static jakarta.enterprise.inject.spi.CDI<java.lang.Object> current()
meth public static void setCDIProvider(jakarta.enterprise.inject.spi.CDIProvider)
supr java.lang.Object
hfds lock

CLSS public abstract interface jakarta.enterprise.inject.spi.CDIProvider
fld public final static int DEFAULT_CDI_PROVIDER_PRIORITY = 0
intf jakarta.enterprise.inject.spi.Prioritized
meth public abstract jakarta.enterprise.inject.spi.CDI<java.lang.Object> getCDI()
meth public int getPriority()

CLSS public abstract interface jakarta.enterprise.inject.spi.Decorator<%0 extends java.lang.Object>
intf jakarta.enterprise.inject.spi.Bean<{jakarta.enterprise.inject.spi.Decorator%0}>
meth public abstract java.lang.reflect.Type getDelegateType()
meth public abstract java.util.Set<java.lang.annotation.Annotation> getDelegateQualifiers()
meth public abstract java.util.Set<java.lang.reflect.Type> getDecoratedTypes()

CLSS public jakarta.enterprise.inject.spi.DefinitionException
cons public <init>(java.lang.String)
cons public <init>(java.lang.String,java.lang.Throwable)
cons public <init>(java.lang.Throwable)
supr java.lang.RuntimeException
hfds serialVersionUID

CLSS public jakarta.enterprise.inject.spi.DeploymentException
cons public <init>(java.lang.String)
cons public <init>(java.lang.String,java.lang.Throwable)
cons public <init>(java.lang.Throwable)
supr java.lang.RuntimeException
hfds serialVersionUID

CLSS public abstract interface jakarta.enterprise.inject.spi.EventContext<%0 extends java.lang.Object>
meth public abstract jakarta.enterprise.inject.spi.EventMetadata getMetadata()
meth public abstract {jakarta.enterprise.inject.spi.EventContext%0} getEvent()

CLSS public abstract interface jakarta.enterprise.inject.spi.EventMetadata
meth public abstract jakarta.enterprise.inject.spi.InjectionPoint getInjectionPoint()
meth public abstract java.lang.reflect.Type getType()
meth public abstract java.util.Set<java.lang.annotation.Annotation> getQualifiers()

CLSS public abstract interface jakarta.enterprise.inject.spi.Extension

CLSS public abstract interface jakarta.enterprise.inject.spi.InjectionPoint
meth public abstract boolean isDelegate()
meth public abstract boolean isTransient()
meth public abstract jakarta.enterprise.inject.spi.Annotated getAnnotated()
meth public abstract jakarta.enterprise.inject.spi.Bean<?> getBean()
meth public abstract java.lang.reflect.Member getMember()
meth public abstract java.lang.reflect.Type getType()
meth public abstract java.util.Set<java.lang.annotation.Annotation> getQualifiers()

CLSS public abstract interface jakarta.enterprise.inject.spi.InjectionTarget<%0 extends java.lang.Object>
intf jakarta.enterprise.inject.spi.Producer<{jakarta.enterprise.inject.spi.InjectionTarget%0}>
meth public abstract void inject({jakarta.enterprise.inject.spi.InjectionTarget%0},jakarta.enterprise.context.spi.CreationalContext<{jakarta.enterprise.inject.spi.InjectionTarget%0}>)
meth public abstract void postConstruct({jakarta.enterprise.inject.spi.InjectionTarget%0})
meth public abstract void preDestroy({jakarta.enterprise.inject.spi.InjectionTarget%0})

CLSS public abstract interface jakarta.enterprise.inject.spi.InjectionTargetFactory<%0 extends java.lang.Object>
meth public abstract jakarta.enterprise.inject.spi.InjectionTarget<{jakarta.enterprise.inject.spi.InjectionTargetFactory%0}> createInjectionTarget(jakarta.enterprise.inject.spi.Bean<{jakarta.enterprise.inject.spi.InjectionTargetFactory%0}>)
meth public jakarta.enterprise.inject.spi.configurator.AnnotatedTypeConfigurator<{jakarta.enterprise.inject.spi.InjectionTargetFactory%0}> configure()

CLSS public abstract interface jakarta.enterprise.inject.spi.InterceptionFactory<%0 extends java.lang.Object>
meth public abstract jakarta.enterprise.inject.spi.InterceptionFactory<{jakarta.enterprise.inject.spi.InterceptionFactory%0}> ignoreFinalMethods()
meth public abstract jakarta.enterprise.inject.spi.configurator.AnnotatedTypeConfigurator<{jakarta.enterprise.inject.spi.InterceptionFactory%0}> configure()
meth public abstract {jakarta.enterprise.inject.spi.InterceptionFactory%0} createInterceptedInstance({jakarta.enterprise.inject.spi.InterceptionFactory%0})

CLSS public final !enum jakarta.enterprise.inject.spi.InterceptionType
fld public final static jakarta.enterprise.inject.spi.InterceptionType AROUND_CONSTRUCT
fld public final static jakarta.enterprise.inject.spi.InterceptionType AROUND_INVOKE
fld public final static jakarta.enterprise.inject.spi.InterceptionType AROUND_TIMEOUT
fld public final static jakarta.enterprise.inject.spi.InterceptionType POST_ACTIVATE
fld public final static jakarta.enterprise.inject.spi.InterceptionType POST_CONSTRUCT
fld public final static jakarta.enterprise.inject.spi.InterceptionType PRE_DESTROY
fld public final static jakarta.enterprise.inject.spi.InterceptionType PRE_PASSIVATE
meth public static jakarta.enterprise.inject.spi.InterceptionType valueOf(java.lang.String)
meth public static jakarta.enterprise.inject.spi.InterceptionType[] values()
supr java.lang.Enum<jakarta.enterprise.inject.spi.InterceptionType>

CLSS public abstract interface jakarta.enterprise.inject.spi.Interceptor<%0 extends java.lang.Object>
intf jakarta.enterprise.inject.spi.Bean<{jakarta.enterprise.inject.spi.Interceptor%0}>
meth public abstract boolean intercepts(jakarta.enterprise.inject.spi.InterceptionType)
meth public abstract java.lang.Object intercept(jakarta.enterprise.inject.spi.InterceptionType,{jakarta.enterprise.inject.spi.Interceptor%0},jakarta.interceptor.InvocationContext) throws java.lang.Exception
meth public abstract java.util.Set<java.lang.annotation.Annotation> getInterceptorBindings()

CLSS public abstract interface jakarta.enterprise.inject.spi.ObserverMethod<%0 extends java.lang.Object>
fld public final static int DEFAULT_PRIORITY = 2500
intf jakarta.enterprise.inject.spi.Prioritized
meth public abstract jakarta.enterprise.event.Reception getReception()
meth public abstract jakarta.enterprise.event.TransactionPhase getTransactionPhase()
meth public abstract java.lang.Class<?> getBeanClass()
meth public abstract java.lang.reflect.Type getObservedType()
meth public abstract java.util.Set<java.lang.annotation.Annotation> getObservedQualifiers()
meth public boolean isAsync()
meth public int getPriority()
meth public void notify(jakarta.enterprise.inject.spi.EventContext<{jakarta.enterprise.inject.spi.ObserverMethod%0}>)
meth public void notify({jakarta.enterprise.inject.spi.ObserverMethod%0})

CLSS public abstract interface jakarta.enterprise.inject.spi.PassivationCapable
meth public abstract java.lang.String getId()

CLSS public abstract interface jakarta.enterprise.inject.spi.Prioritized
meth public abstract int getPriority()

CLSS public abstract interface jakarta.enterprise.inject.spi.ProcessAnnotatedType<%0 extends java.lang.Object>
meth public abstract jakarta.enterprise.inject.spi.AnnotatedType<{jakarta.enterprise.inject.spi.ProcessAnnotatedType%0}> getAnnotatedType()
meth public abstract jakarta.enterprise.inject.spi.configurator.AnnotatedTypeConfigurator<{jakarta.enterprise.inject.spi.ProcessAnnotatedType%0}> configureAnnotatedType()
meth public abstract void setAnnotatedType(jakarta.enterprise.inject.spi.AnnotatedType<{jakarta.enterprise.inject.spi.ProcessAnnotatedType%0}>)
meth public abstract void veto()

CLSS public abstract interface jakarta.enterprise.inject.spi.ProcessBean<%0 extends java.lang.Object>
meth public abstract jakarta.enterprise.inject.spi.Annotated getAnnotated()
meth public abstract jakarta.enterprise.inject.spi.Bean<{jakarta.enterprise.inject.spi.ProcessBean%0}> getBean()
meth public abstract void addDefinitionError(java.lang.Throwable)

CLSS public abstract interface jakarta.enterprise.inject.spi.ProcessBeanAttributes<%0 extends java.lang.Object>
meth public abstract jakarta.enterprise.inject.spi.Annotated getAnnotated()
meth public abstract jakarta.enterprise.inject.spi.BeanAttributes<{jakarta.enterprise.inject.spi.ProcessBeanAttributes%0}> getBeanAttributes()
meth public abstract jakarta.enterprise.inject.spi.configurator.BeanAttributesConfigurator<{jakarta.enterprise.inject.spi.ProcessBeanAttributes%0}> configureBeanAttributes()
meth public abstract void addDefinitionError(java.lang.Throwable)
meth public abstract void ignoreFinalMethods()
meth public abstract void setBeanAttributes(jakarta.enterprise.inject.spi.BeanAttributes<{jakarta.enterprise.inject.spi.ProcessBeanAttributes%0}>)
meth public abstract void veto()

CLSS public abstract interface jakarta.enterprise.inject.spi.ProcessInjectionPoint<%0 extends java.lang.Object, %1 extends java.lang.Object>
meth public abstract jakarta.enterprise.inject.spi.InjectionPoint getInjectionPoint()
meth public abstract jakarta.enterprise.inject.spi.configurator.InjectionPointConfigurator configureInjectionPoint()
meth public abstract void addDefinitionError(java.lang.Throwable)
meth public abstract void setInjectionPoint(jakarta.enterprise.inject.spi.InjectionPoint)

CLSS public abstract interface jakarta.enterprise.inject.spi.ProcessInjectionTarget<%0 extends java.lang.Object>
meth public abstract jakarta.enterprise.inject.spi.AnnotatedType<{jakarta.enterprise.inject.spi.ProcessInjectionTarget%0}> getAnnotatedType()
meth public abstract jakarta.enterprise.inject.spi.InjectionTarget<{jakarta.enterprise.inject.spi.ProcessInjectionTarget%0}> getInjectionTarget()
meth public abstract void addDefinitionError(java.lang.Throwable)
meth public abstract void setInjectionTarget(jakarta.enterprise.inject.spi.InjectionTarget<{jakarta.enterprise.inject.spi.ProcessInjectionTarget%0}>)

CLSS public abstract interface jakarta.enterprise.inject.spi.ProcessManagedBean<%0 extends java.lang.Object>
intf jakarta.enterprise.inject.spi.ProcessBean<{jakarta.enterprise.inject.spi.ProcessManagedBean%0}>
meth public abstract jakarta.enterprise.inject.spi.AnnotatedType<{jakarta.enterprise.inject.spi.ProcessManagedBean%0}> getAnnotatedBeanClass()

CLSS public abstract interface jakarta.enterprise.inject.spi.ProcessObserverMethod<%0 extends java.lang.Object, %1 extends java.lang.Object>
meth public abstract jakarta.enterprise.inject.spi.AnnotatedMethod<{jakarta.enterprise.inject.spi.ProcessObserverMethod%1}> getAnnotatedMethod()
meth public abstract jakarta.enterprise.inject.spi.ObserverMethod<{jakarta.enterprise.inject.spi.ProcessObserverMethod%0}> getObserverMethod()
meth public abstract jakarta.enterprise.inject.spi.configurator.ObserverMethodConfigurator<{jakarta.enterprise.inject.spi.ProcessObserverMethod%0}> configureObserverMethod()
meth public abstract void addDefinitionError(java.lang.Throwable)
meth public abstract void setObserverMethod(jakarta.enterprise.inject.spi.ObserverMethod<{jakarta.enterprise.inject.spi.ProcessObserverMethod%0}>)
meth public abstract void veto()

CLSS public abstract interface jakarta.enterprise.inject.spi.ProcessProducer<%0 extends java.lang.Object, %1 extends java.lang.Object>
meth public abstract jakarta.enterprise.inject.spi.AnnotatedMember<{jakarta.enterprise.inject.spi.ProcessProducer%0}> getAnnotatedMember()
meth public abstract jakarta.enterprise.inject.spi.Producer<{jakarta.enterprise.inject.spi.ProcessProducer%1}> getProducer()
meth public abstract jakarta.enterprise.inject.spi.configurator.ProducerConfigurator<{jakarta.enterprise.inject.spi.ProcessProducer%1}> configureProducer()
meth public abstract void addDefinitionError(java.lang.Throwable)
meth public abstract void setProducer(jakarta.enterprise.inject.spi.Producer<{jakarta.enterprise.inject.spi.ProcessProducer%1}>)

CLSS public abstract interface jakarta.enterprise.inject.spi.ProcessProducerField<%0 extends java.lang.Object, %1 extends java.lang.Object>
intf jakarta.enterprise.inject.spi.ProcessBean<{jakarta.enterprise.inject.spi.ProcessProducerField%1}>
meth public abstract jakarta.enterprise.inject.spi.AnnotatedField<{jakarta.enterprise.inject.spi.ProcessProducerField%0}> getAnnotatedProducerField()
meth public abstract jakarta.enterprise.inject.spi.AnnotatedParameter<{jakarta.enterprise.inject.spi.ProcessProducerField%0}> getAnnotatedDisposedParameter()

CLSS public abstract interface jakarta.enterprise.inject.spi.ProcessProducerMethod<%0 extends java.lang.Object, %1 extends java.lang.Object>
intf jakarta.enterprise.inject.spi.ProcessBean<{jakarta.enterprise.inject.spi.ProcessProducerMethod%1}>
meth public abstract jakarta.enterprise.inject.spi.AnnotatedMethod<{jakarta.enterprise.inject.spi.ProcessProducerMethod%0}> getAnnotatedProducerMethod()
meth public abstract jakarta.enterprise.inject.spi.AnnotatedParameter<{jakarta.enterprise.inject.spi.ProcessProducerMethod%0}> getAnnotatedDisposedParameter()

CLSS public abstract interface jakarta.enterprise.inject.spi.ProcessSessionBean<%0 extends java.lang.Object>
intf jakarta.enterprise.inject.spi.ProcessManagedBean<java.lang.Object>
meth public abstract jakarta.enterprise.inject.spi.SessionBeanType getSessionBeanType()
meth public abstract java.lang.String getEjbName()

CLSS public abstract interface jakarta.enterprise.inject.spi.ProcessSyntheticAnnotatedType<%0 extends java.lang.Object>
intf jakarta.enterprise.inject.spi.ProcessAnnotatedType<{jakarta.enterprise.inject.spi.ProcessSyntheticAnnotatedType%0}>
meth public abstract jakarta.enterprise.inject.spi.Extension getSource()

CLSS public abstract interface jakarta.enterprise.inject.spi.ProcessSyntheticBean<%0 extends java.lang.Object>
intf jakarta.enterprise.inject.spi.ProcessBean<{jakarta.enterprise.inject.spi.ProcessSyntheticBean%0}>
meth public abstract jakarta.enterprise.inject.spi.Extension getSource()

CLSS public abstract interface jakarta.enterprise.inject.spi.ProcessSyntheticObserverMethod<%0 extends java.lang.Object, %1 extends java.lang.Object>
intf jakarta.enterprise.inject.spi.ProcessObserverMethod<{jakarta.enterprise.inject.spi.ProcessSyntheticObserverMethod%0},{jakarta.enterprise.inject.spi.ProcessSyntheticObserverMethod%1}>
meth public abstract jakarta.enterprise.inject.spi.Extension getSource()

CLSS public abstract interface jakarta.enterprise.inject.spi.Producer<%0 extends java.lang.Object>
meth public abstract java.util.Set<jakarta.enterprise.inject.spi.InjectionPoint> getInjectionPoints()
meth public abstract void dispose({jakarta.enterprise.inject.spi.Producer%0})
meth public abstract {jakarta.enterprise.inject.spi.Producer%0} produce(jakarta.enterprise.context.spi.CreationalContext<{jakarta.enterprise.inject.spi.Producer%0}>)

CLSS public abstract interface jakarta.enterprise.inject.spi.ProducerFactory<%0 extends java.lang.Object>
meth public abstract <%0 extends java.lang.Object> jakarta.enterprise.inject.spi.Producer<{%%0}> createProducer(jakarta.enterprise.inject.spi.Bean<{%%0}>)

CLSS public final !enum jakarta.enterprise.inject.spi.SessionBeanType
fld public final static jakarta.enterprise.inject.spi.SessionBeanType SINGLETON
fld public final static jakarta.enterprise.inject.spi.SessionBeanType STATEFUL
fld public final static jakarta.enterprise.inject.spi.SessionBeanType STATELESS
meth public static jakarta.enterprise.inject.spi.SessionBeanType valueOf(java.lang.String)
meth public static jakarta.enterprise.inject.spi.SessionBeanType[] values()
supr java.lang.Enum<jakarta.enterprise.inject.spi.SessionBeanType>

CLSS public jakarta.enterprise.inject.spi.Unmanaged<%0 extends java.lang.Object>
cons public <init>(jakarta.enterprise.inject.spi.BeanManager,java.lang.Class<{jakarta.enterprise.inject.spi.Unmanaged%0}>)
cons public <init>(java.lang.Class<{jakarta.enterprise.inject.spi.Unmanaged%0}>)
innr public static UnmanagedInstance
meth public jakarta.enterprise.inject.spi.Unmanaged$UnmanagedInstance<{jakarta.enterprise.inject.spi.Unmanaged%0}> newInstance()
supr java.lang.Object
hfds beanManager,injectionTarget

CLSS public static jakarta.enterprise.inject.spi.Unmanaged$UnmanagedInstance<%0 extends java.lang.Object>
 outer jakarta.enterprise.inject.spi.Unmanaged
meth public jakarta.enterprise.inject.spi.Unmanaged$UnmanagedInstance<{jakarta.enterprise.inject.spi.Unmanaged$UnmanagedInstance%0}> dispose()
meth public jakarta.enterprise.inject.spi.Unmanaged$UnmanagedInstance<{jakarta.enterprise.inject.spi.Unmanaged$UnmanagedInstance%0}> inject()
meth public jakarta.enterprise.inject.spi.Unmanaged$UnmanagedInstance<{jakarta.enterprise.inject.spi.Unmanaged$UnmanagedInstance%0}> postConstruct()
meth public jakarta.enterprise.inject.spi.Unmanaged$UnmanagedInstance<{jakarta.enterprise.inject.spi.Unmanaged$UnmanagedInstance%0}> preDestroy()
meth public jakarta.enterprise.inject.spi.Unmanaged$UnmanagedInstance<{jakarta.enterprise.inject.spi.Unmanaged$UnmanagedInstance%0}> produce()
meth public {jakarta.enterprise.inject.spi.Unmanaged$UnmanagedInstance%0} get()
supr java.lang.Object
hfds ctx,disposed,injectionTarget,instance

CLSS public abstract interface !annotation jakarta.enterprise.inject.spi.WithAnnotations
 anno 0 java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy value=RUNTIME)
 anno 0 java.lang.annotation.Target(java.lang.annotation.ElementType[] value=[PARAMETER])
intf java.lang.annotation.Annotation
meth public abstract java.lang.Class<? extends java.lang.annotation.Annotation>[] value()

CLSS public abstract interface jakarta.enterprise.inject.spi.configurator.AnnotatedConstructorConfigurator<%0 extends java.lang.Object>
meth public abstract jakarta.enterprise.inject.spi.AnnotatedConstructor<{jakarta.enterprise.inject.spi.configurator.AnnotatedConstructorConfigurator%0}> getAnnotated()
meth public abstract jakarta.enterprise.inject.spi.configurator.AnnotatedConstructorConfigurator<{jakarta.enterprise.inject.spi.configurator.AnnotatedConstructorConfigurator%0}> add(java.lang.annotation.Annotation)
meth public abstract jakarta.enterprise.inject.spi.configurator.AnnotatedConstructorConfigurator<{jakarta.enterprise.inject.spi.configurator.AnnotatedConstructorConfigurator%0}> remove(java.util.function.Predicate<java.lang.annotation.Annotation>)
meth public abstract java.util.List<jakarta.enterprise.inject.spi.configurator.AnnotatedParameterConfigurator<{jakarta.enterprise.inject.spi.configurator.AnnotatedConstructorConfigurator%0}>> params()
meth public jakarta.enterprise.inject.spi.configurator.AnnotatedConstructorConfigurator<{jakarta.enterprise.inject.spi.configurator.AnnotatedConstructorConfigurator%0}> removeAll()
meth public java.util.stream.Stream<jakarta.enterprise.inject.spi.configurator.AnnotatedParameterConfigurator<{jakarta.enterprise.inject.spi.configurator.AnnotatedConstructorConfigurator%0}>> filterParams(java.util.function.Predicate<jakarta.enterprise.inject.spi.AnnotatedParameter<{jakarta.enterprise.inject.spi.configurator.AnnotatedConstructorConfigurator%0}>>)

CLSS public abstract interface jakarta.enterprise.inject.spi.configurator.AnnotatedFieldConfigurator<%0 extends java.lang.Object>
meth public abstract jakarta.enterprise.inject.spi.AnnotatedField<{jakarta.enterprise.inject.spi.configurator.AnnotatedFieldConfigurator%0}> getAnnotated()
meth public abstract jakarta.enterprise.inject.spi.configurator.AnnotatedFieldConfigurator<{jakarta.enterprise.inject.spi.configurator.AnnotatedFieldConfigurator%0}> add(java.lang.annotation.Annotation)
meth public abstract jakarta.enterprise.inject.spi.configurator.AnnotatedFieldConfigurator<{jakarta.enterprise.inject.spi.configurator.AnnotatedFieldConfigurator%0}> remove(java.util.function.Predicate<java.lang.annotation.Annotation>)
meth public jakarta.enterprise.inject.spi.configurator.AnnotatedFieldConfigurator<{jakarta.enterprise.inject.spi.configurator.AnnotatedFieldConfigurator%0}> removeAll()

CLSS public abstract interface jakarta.enterprise.inject.spi.configurator.AnnotatedMethodConfigurator<%0 extends java.lang.Object>
meth public abstract jakarta.enterprise.inject.spi.AnnotatedMethod<{jakarta.enterprise.inject.spi.configurator.AnnotatedMethodConfigurator%0}> getAnnotated()
meth public abstract jakarta.enterprise.inject.spi.configurator.AnnotatedMethodConfigurator<{jakarta.enterprise.inject.spi.configurator.AnnotatedMethodConfigurator%0}> add(java.lang.annotation.Annotation)
meth public abstract jakarta.enterprise.inject.spi.configurator.AnnotatedMethodConfigurator<{jakarta.enterprise.inject.spi.configurator.AnnotatedMethodConfigurator%0}> remove(java.util.function.Predicate<java.lang.annotation.Annotation>)
meth public abstract java.util.List<jakarta.enterprise.inject.spi.configurator.AnnotatedParameterConfigurator<{jakarta.enterprise.inject.spi.configurator.AnnotatedMethodConfigurator%0}>> params()
meth public jakarta.enterprise.inject.spi.configurator.AnnotatedMethodConfigurator<{jakarta.enterprise.inject.spi.configurator.AnnotatedMethodConfigurator%0}> removeAll()
meth public java.util.stream.Stream<jakarta.enterprise.inject.spi.configurator.AnnotatedParameterConfigurator<{jakarta.enterprise.inject.spi.configurator.AnnotatedMethodConfigurator%0}>> filterParams(java.util.function.Predicate<jakarta.enterprise.inject.spi.AnnotatedParameter<{jakarta.enterprise.inject.spi.configurator.AnnotatedMethodConfigurator%0}>>)

CLSS public abstract interface jakarta.enterprise.inject.spi.configurator.AnnotatedParameterConfigurator<%0 extends java.lang.Object>
meth public abstract jakarta.enterprise.inject.spi.AnnotatedParameter<{jakarta.enterprise.inject.spi.configurator.AnnotatedParameterConfigurator%0}> getAnnotated()
meth public abstract jakarta.enterprise.inject.spi.configurator.AnnotatedParameterConfigurator<{jakarta.enterprise.inject.spi.configurator.AnnotatedParameterConfigurator%0}> add(java.lang.annotation.Annotation)
meth public abstract jakarta.enterprise.inject.spi.configurator.AnnotatedParameterConfigurator<{jakarta.enterprise.inject.spi.configurator.AnnotatedParameterConfigurator%0}> remove(java.util.function.Predicate<java.lang.annotation.Annotation>)
meth public jakarta.enterprise.inject.spi.configurator.AnnotatedParameterConfigurator<{jakarta.enterprise.inject.spi.configurator.AnnotatedParameterConfigurator%0}> removeAll()

CLSS public abstract interface jakarta.enterprise.inject.spi.configurator.AnnotatedTypeConfigurator<%0 extends java.lang.Object>
meth public abstract jakarta.enterprise.inject.spi.AnnotatedType<{jakarta.enterprise.inject.spi.configurator.AnnotatedTypeConfigurator%0}> getAnnotated()
meth public abstract jakarta.enterprise.inject.spi.configurator.AnnotatedTypeConfigurator<{jakarta.enterprise.inject.spi.configurator.AnnotatedTypeConfigurator%0}> add(java.lang.annotation.Annotation)
meth public abstract jakarta.enterprise.inject.spi.configurator.AnnotatedTypeConfigurator<{jakarta.enterprise.inject.spi.configurator.AnnotatedTypeConfigurator%0}> remove(java.util.function.Predicate<java.lang.annotation.Annotation>)
meth public abstract java.util.Set<jakarta.enterprise.inject.spi.configurator.AnnotatedConstructorConfigurator<{jakarta.enterprise.inject.spi.configurator.AnnotatedTypeConfigurator%0}>> constructors()
meth public abstract java.util.Set<jakarta.enterprise.inject.spi.configurator.AnnotatedFieldConfigurator<? super {jakarta.enterprise.inject.spi.configurator.AnnotatedTypeConfigurator%0}>> fields()
meth public abstract java.util.Set<jakarta.enterprise.inject.spi.configurator.AnnotatedMethodConfigurator<? super {jakarta.enterprise.inject.spi.configurator.AnnotatedTypeConfigurator%0}>> methods()
meth public jakarta.enterprise.inject.spi.configurator.AnnotatedTypeConfigurator<{jakarta.enterprise.inject.spi.configurator.AnnotatedTypeConfigurator%0}> removeAll()
meth public java.util.stream.Stream<jakarta.enterprise.inject.spi.configurator.AnnotatedConstructorConfigurator<{jakarta.enterprise.inject.spi.configurator.AnnotatedTypeConfigurator%0}>> filterConstructors(java.util.function.Predicate<jakarta.enterprise.inject.spi.AnnotatedConstructor<{jakarta.enterprise.inject.spi.configurator.AnnotatedTypeConfigurator%0}>>)
meth public java.util.stream.Stream<jakarta.enterprise.inject.spi.configurator.AnnotatedFieldConfigurator<? super {jakarta.enterprise.inject.spi.configurator.AnnotatedTypeConfigurator%0}>> filterFields(java.util.function.Predicate<jakarta.enterprise.inject.spi.AnnotatedField<? super {jakarta.enterprise.inject.spi.configurator.AnnotatedTypeConfigurator%0}>>)
meth public java.util.stream.Stream<jakarta.enterprise.inject.spi.configurator.AnnotatedMethodConfigurator<? super {jakarta.enterprise.inject.spi.configurator.AnnotatedTypeConfigurator%0}>> filterMethods(java.util.function.Predicate<jakarta.enterprise.inject.spi.AnnotatedMethod<? super {jakarta.enterprise.inject.spi.configurator.AnnotatedTypeConfigurator%0}>>)

CLSS public abstract interface jakarta.enterprise.inject.spi.configurator.BeanAttributesConfigurator<%0 extends java.lang.Object>
meth public abstract !varargs jakarta.enterprise.inject.spi.configurator.BeanAttributesConfigurator<{jakarta.enterprise.inject.spi.configurator.BeanAttributesConfigurator%0}> addQualifiers(java.lang.annotation.Annotation[])
meth public abstract !varargs jakarta.enterprise.inject.spi.configurator.BeanAttributesConfigurator<{jakarta.enterprise.inject.spi.configurator.BeanAttributesConfigurator%0}> addTypes(java.lang.reflect.Type[])
meth public abstract !varargs jakarta.enterprise.inject.spi.configurator.BeanAttributesConfigurator<{jakarta.enterprise.inject.spi.configurator.BeanAttributesConfigurator%0}> qualifiers(java.lang.annotation.Annotation[])
meth public abstract !varargs jakarta.enterprise.inject.spi.configurator.BeanAttributesConfigurator<{jakarta.enterprise.inject.spi.configurator.BeanAttributesConfigurator%0}> types(java.lang.reflect.Type[])
meth public abstract jakarta.enterprise.inject.spi.configurator.BeanAttributesConfigurator<{jakarta.enterprise.inject.spi.configurator.BeanAttributesConfigurator%0}> addQualifier(java.lang.annotation.Annotation)
meth public abstract jakarta.enterprise.inject.spi.configurator.BeanAttributesConfigurator<{jakarta.enterprise.inject.spi.configurator.BeanAttributesConfigurator%0}> addQualifiers(java.util.Set<java.lang.annotation.Annotation>)
meth public abstract jakarta.enterprise.inject.spi.configurator.BeanAttributesConfigurator<{jakarta.enterprise.inject.spi.configurator.BeanAttributesConfigurator%0}> addStereotype(java.lang.Class<? extends java.lang.annotation.Annotation>)
meth public abstract jakarta.enterprise.inject.spi.configurator.BeanAttributesConfigurator<{jakarta.enterprise.inject.spi.configurator.BeanAttributesConfigurator%0}> addStereotypes(java.util.Set<java.lang.Class<? extends java.lang.annotation.Annotation>>)
meth public abstract jakarta.enterprise.inject.spi.configurator.BeanAttributesConfigurator<{jakarta.enterprise.inject.spi.configurator.BeanAttributesConfigurator%0}> addTransitiveTypeClosure(java.lang.reflect.Type)
meth public abstract jakarta.enterprise.inject.spi.configurator.BeanAttributesConfigurator<{jakarta.enterprise.inject.spi.configurator.BeanAttributesConfigurator%0}> addType(jakarta.enterprise.util.TypeLiteral<?>)
meth public abstract jakarta.enterprise.inject.spi.configurator.BeanAttributesConfigurator<{jakarta.enterprise.inject.spi.configurator.BeanAttributesConfigurator%0}> addType(java.lang.reflect.Type)
meth public abstract jakarta.enterprise.inject.spi.configurator.BeanAttributesConfigurator<{jakarta.enterprise.inject.spi.configurator.BeanAttributesConfigurator%0}> addTypes(java.util.Set<java.lang.reflect.Type>)
meth public abstract jakarta.enterprise.inject.spi.configurator.BeanAttributesConfigurator<{jakarta.enterprise.inject.spi.configurator.BeanAttributesConfigurator%0}> alternative(boolean)
meth public abstract jakarta.enterprise.inject.spi.configurator.BeanAttributesConfigurator<{jakarta.enterprise.inject.spi.configurator.BeanAttributesConfigurator%0}> name(java.lang.String)
meth public abstract jakarta.enterprise.inject.spi.configurator.BeanAttributesConfigurator<{jakarta.enterprise.inject.spi.configurator.BeanAttributesConfigurator%0}> qualifiers(java.util.Set<java.lang.annotation.Annotation>)
meth public abstract jakarta.enterprise.inject.spi.configurator.BeanAttributesConfigurator<{jakarta.enterprise.inject.spi.configurator.BeanAttributesConfigurator%0}> scope(java.lang.Class<? extends java.lang.annotation.Annotation>)
meth public abstract jakarta.enterprise.inject.spi.configurator.BeanAttributesConfigurator<{jakarta.enterprise.inject.spi.configurator.BeanAttributesConfigurator%0}> stereotypes(java.util.Set<java.lang.Class<? extends java.lang.annotation.Annotation>>)
meth public abstract jakarta.enterprise.inject.spi.configurator.BeanAttributesConfigurator<{jakarta.enterprise.inject.spi.configurator.BeanAttributesConfigurator%0}> types(java.util.Set<java.lang.reflect.Type>)

CLSS public abstract interface jakarta.enterprise.inject.spi.configurator.BeanConfigurator<%0 extends java.lang.Object>
meth public abstract !varargs jakarta.enterprise.inject.spi.configurator.BeanConfigurator<{jakarta.enterprise.inject.spi.configurator.BeanConfigurator%0}> addInjectionPoints(jakarta.enterprise.inject.spi.InjectionPoint[])
meth public abstract !varargs jakarta.enterprise.inject.spi.configurator.BeanConfigurator<{jakarta.enterprise.inject.spi.configurator.BeanConfigurator%0}> addQualifiers(java.lang.annotation.Annotation[])
meth public abstract !varargs jakarta.enterprise.inject.spi.configurator.BeanConfigurator<{jakarta.enterprise.inject.spi.configurator.BeanConfigurator%0}> addTypes(java.lang.reflect.Type[])
meth public abstract !varargs jakarta.enterprise.inject.spi.configurator.BeanConfigurator<{jakarta.enterprise.inject.spi.configurator.BeanConfigurator%0}> injectionPoints(jakarta.enterprise.inject.spi.InjectionPoint[])
meth public abstract !varargs jakarta.enterprise.inject.spi.configurator.BeanConfigurator<{jakarta.enterprise.inject.spi.configurator.BeanConfigurator%0}> qualifiers(java.lang.annotation.Annotation[])
meth public abstract !varargs jakarta.enterprise.inject.spi.configurator.BeanConfigurator<{jakarta.enterprise.inject.spi.configurator.BeanConfigurator%0}> types(java.lang.reflect.Type[])
meth public abstract <%0 extends {jakarta.enterprise.inject.spi.configurator.BeanConfigurator%0}> jakarta.enterprise.inject.spi.configurator.BeanConfigurator<{%%0}> createWith(java.util.function.Function<jakarta.enterprise.context.spi.CreationalContext<{%%0}>,{%%0}>)
meth public abstract <%0 extends {jakarta.enterprise.inject.spi.configurator.BeanConfigurator%0}> jakarta.enterprise.inject.spi.configurator.BeanConfigurator<{%%0}> produceWith(java.util.function.Function<jakarta.enterprise.inject.Instance<java.lang.Object>,{%%0}>)
meth public abstract <%0 extends {jakarta.enterprise.inject.spi.configurator.BeanConfigurator%0}> jakarta.enterprise.inject.spi.configurator.BeanConfigurator<{%%0}> read(jakarta.enterprise.inject.spi.AnnotatedType<{%%0}>)
meth public abstract jakarta.enterprise.inject.spi.configurator.BeanConfigurator<{jakarta.enterprise.inject.spi.configurator.BeanConfigurator%0}> addInjectionPoint(jakarta.enterprise.inject.spi.InjectionPoint)
meth public abstract jakarta.enterprise.inject.spi.configurator.BeanConfigurator<{jakarta.enterprise.inject.spi.configurator.BeanConfigurator%0}> addInjectionPoints(java.util.Set<jakarta.enterprise.inject.spi.InjectionPoint>)
meth public abstract jakarta.enterprise.inject.spi.configurator.BeanConfigurator<{jakarta.enterprise.inject.spi.configurator.BeanConfigurator%0}> addQualifier(java.lang.annotation.Annotation)
meth public abstract jakarta.enterprise.inject.spi.configurator.BeanConfigurator<{jakarta.enterprise.inject.spi.configurator.BeanConfigurator%0}> addQualifiers(java.util.Set<java.lang.annotation.Annotation>)
meth public abstract jakarta.enterprise.inject.spi.configurator.BeanConfigurator<{jakarta.enterprise.inject.spi.configurator.BeanConfigurator%0}> addStereotype(java.lang.Class<? extends java.lang.annotation.Annotation>)
meth public abstract jakarta.enterprise.inject.spi.configurator.BeanConfigurator<{jakarta.enterprise.inject.spi.configurator.BeanConfigurator%0}> addStereotypes(java.util.Set<java.lang.Class<? extends java.lang.annotation.Annotation>>)
meth public abstract jakarta.enterprise.inject.spi.configurator.BeanConfigurator<{jakarta.enterprise.inject.spi.configurator.BeanConfigurator%0}> addTransitiveTypeClosure(java.lang.reflect.Type)
meth public abstract jakarta.enterprise.inject.spi.configurator.BeanConfigurator<{jakarta.enterprise.inject.spi.configurator.BeanConfigurator%0}> addType(jakarta.enterprise.util.TypeLiteral<?>)
meth public abstract jakarta.enterprise.inject.spi.configurator.BeanConfigurator<{jakarta.enterprise.inject.spi.configurator.BeanConfigurator%0}> addType(java.lang.reflect.Type)
meth public abstract jakarta.enterprise.inject.spi.configurator.BeanConfigurator<{jakarta.enterprise.inject.spi.configurator.BeanConfigurator%0}> addTypes(java.util.Set<java.lang.reflect.Type>)
meth public abstract jakarta.enterprise.inject.spi.configurator.BeanConfigurator<{jakarta.enterprise.inject.spi.configurator.BeanConfigurator%0}> alternative(boolean)
meth public abstract jakarta.enterprise.inject.spi.configurator.BeanConfigurator<{jakarta.enterprise.inject.spi.configurator.BeanConfigurator%0}> beanClass(java.lang.Class<?>)
meth public abstract jakarta.enterprise.inject.spi.configurator.BeanConfigurator<{jakarta.enterprise.inject.spi.configurator.BeanConfigurator%0}> destroyWith(java.util.function.BiConsumer<{jakarta.enterprise.inject.spi.configurator.BeanConfigurator%0},jakarta.enterprise.context.spi.CreationalContext<{jakarta.enterprise.inject.spi.configurator.BeanConfigurator%0}>>)
meth public abstract jakarta.enterprise.inject.spi.configurator.BeanConfigurator<{jakarta.enterprise.inject.spi.configurator.BeanConfigurator%0}> disposeWith(java.util.function.BiConsumer<{jakarta.enterprise.inject.spi.configurator.BeanConfigurator%0},jakarta.enterprise.inject.Instance<java.lang.Object>>)
meth public abstract jakarta.enterprise.inject.spi.configurator.BeanConfigurator<{jakarta.enterprise.inject.spi.configurator.BeanConfigurator%0}> id(java.lang.String)
meth public abstract jakarta.enterprise.inject.spi.configurator.BeanConfigurator<{jakarta.enterprise.inject.spi.configurator.BeanConfigurator%0}> injectionPoints(java.util.Set<jakarta.enterprise.inject.spi.InjectionPoint>)
meth public abstract jakarta.enterprise.inject.spi.configurator.BeanConfigurator<{jakarta.enterprise.inject.spi.configurator.BeanConfigurator%0}> name(java.lang.String)
meth public abstract jakarta.enterprise.inject.spi.configurator.BeanConfigurator<{jakarta.enterprise.inject.spi.configurator.BeanConfigurator%0}> qualifiers(java.util.Set<java.lang.annotation.Annotation>)
meth public abstract jakarta.enterprise.inject.spi.configurator.BeanConfigurator<{jakarta.enterprise.inject.spi.configurator.BeanConfigurator%0}> read(jakarta.enterprise.inject.spi.BeanAttributes<?>)
meth public abstract jakarta.enterprise.inject.spi.configurator.BeanConfigurator<{jakarta.enterprise.inject.spi.configurator.BeanConfigurator%0}> scope(java.lang.Class<? extends java.lang.annotation.Annotation>)
meth public abstract jakarta.enterprise.inject.spi.configurator.BeanConfigurator<{jakarta.enterprise.inject.spi.configurator.BeanConfigurator%0}> stereotypes(java.util.Set<java.lang.Class<? extends java.lang.annotation.Annotation>>)
meth public abstract jakarta.enterprise.inject.spi.configurator.BeanConfigurator<{jakarta.enterprise.inject.spi.configurator.BeanConfigurator%0}> types(java.util.Set<java.lang.reflect.Type>)

CLSS public abstract interface jakarta.enterprise.inject.spi.configurator.InjectionPointConfigurator
meth public abstract !varargs jakarta.enterprise.inject.spi.configurator.InjectionPointConfigurator addQualifiers(java.lang.annotation.Annotation[])
meth public abstract !varargs jakarta.enterprise.inject.spi.configurator.InjectionPointConfigurator qualifiers(java.lang.annotation.Annotation[])
meth public abstract jakarta.enterprise.inject.spi.configurator.InjectionPointConfigurator addQualifier(java.lang.annotation.Annotation)
meth public abstract jakarta.enterprise.inject.spi.configurator.InjectionPointConfigurator addQualifiers(java.util.Set<java.lang.annotation.Annotation>)
meth public abstract jakarta.enterprise.inject.spi.configurator.InjectionPointConfigurator delegate(boolean)
meth public abstract jakarta.enterprise.inject.spi.configurator.InjectionPointConfigurator qualifiers(java.util.Set<java.lang.annotation.Annotation>)
meth public abstract jakarta.enterprise.inject.spi.configurator.InjectionPointConfigurator transientField(boolean)
meth public abstract jakarta.enterprise.inject.spi.configurator.InjectionPointConfigurator type(java.lang.reflect.Type)

CLSS public abstract interface jakarta.enterprise.inject.spi.configurator.ObserverMethodConfigurator<%0 extends java.lang.Object>
innr public abstract interface static EventConsumer
meth public abstract !varargs jakarta.enterprise.inject.spi.configurator.ObserverMethodConfigurator<{jakarta.enterprise.inject.spi.configurator.ObserverMethodConfigurator%0}> addQualifiers(java.lang.annotation.Annotation[])
meth public abstract !varargs jakarta.enterprise.inject.spi.configurator.ObserverMethodConfigurator<{jakarta.enterprise.inject.spi.configurator.ObserverMethodConfigurator%0}> qualifiers(java.lang.annotation.Annotation[])
meth public abstract jakarta.enterprise.inject.spi.configurator.ObserverMethodConfigurator<{jakarta.enterprise.inject.spi.configurator.ObserverMethodConfigurator%0}> addQualifier(java.lang.annotation.Annotation)
meth public abstract jakarta.enterprise.inject.spi.configurator.ObserverMethodConfigurator<{jakarta.enterprise.inject.spi.configurator.ObserverMethodConfigurator%0}> addQualifiers(java.util.Set<java.lang.annotation.Annotation>)
meth public abstract jakarta.enterprise.inject.spi.configurator.ObserverMethodConfigurator<{jakarta.enterprise.inject.spi.configurator.ObserverMethodConfigurator%0}> async(boolean)
meth public abstract jakarta.enterprise.inject.spi.configurator.ObserverMethodConfigurator<{jakarta.enterprise.inject.spi.configurator.ObserverMethodConfigurator%0}> beanClass(java.lang.Class<?>)
meth public abstract jakarta.enterprise.inject.spi.configurator.ObserverMethodConfigurator<{jakarta.enterprise.inject.spi.configurator.ObserverMethodConfigurator%0}> notifyWith(jakarta.enterprise.inject.spi.configurator.ObserverMethodConfigurator$EventConsumer<{jakarta.enterprise.inject.spi.configurator.ObserverMethodConfigurator%0}>)
meth public abstract jakarta.enterprise.inject.spi.configurator.ObserverMethodConfigurator<{jakarta.enterprise.inject.spi.configurator.ObserverMethodConfigurator%0}> observedType(java.lang.reflect.Type)
meth public abstract jakarta.enterprise.inject.spi.configurator.ObserverMethodConfigurator<{jakarta.enterprise.inject.spi.configurator.ObserverMethodConfigurator%0}> priority(int)
meth public abstract jakarta.enterprise.inject.spi.configurator.ObserverMethodConfigurator<{jakarta.enterprise.inject.spi.configurator.ObserverMethodConfigurator%0}> qualifiers(java.util.Set<java.lang.annotation.Annotation>)
meth public abstract jakarta.enterprise.inject.spi.configurator.ObserverMethodConfigurator<{jakarta.enterprise.inject.spi.configurator.ObserverMethodConfigurator%0}> read(jakarta.enterprise.inject.spi.AnnotatedMethod<?>)
meth public abstract jakarta.enterprise.inject.spi.configurator.ObserverMethodConfigurator<{jakarta.enterprise.inject.spi.configurator.ObserverMethodConfigurator%0}> read(jakarta.enterprise.inject.spi.ObserverMethod<{jakarta.enterprise.inject.spi.configurator.ObserverMethodConfigurator%0}>)
meth public abstract jakarta.enterprise.inject.spi.configurator.ObserverMethodConfigurator<{jakarta.enterprise.inject.spi.configurator.ObserverMethodConfigurator%0}> read(java.lang.reflect.Method)
meth public abstract jakarta.enterprise.inject.spi.configurator.ObserverMethodConfigurator<{jakarta.enterprise.inject.spi.configurator.ObserverMethodConfigurator%0}> reception(jakarta.enterprise.event.Reception)
meth public abstract jakarta.enterprise.inject.spi.configurator.ObserverMethodConfigurator<{jakarta.enterprise.inject.spi.configurator.ObserverMethodConfigurator%0}> transactionPhase(jakarta.enterprise.event.TransactionPhase)

CLSS public abstract interface static jakarta.enterprise.inject.spi.configurator.ObserverMethodConfigurator$EventConsumer<%0 extends java.lang.Object>
 outer jakarta.enterprise.inject.spi.configurator.ObserverMethodConfigurator
 anno 0 java.lang.FunctionalInterface()
meth public abstract void accept(jakarta.enterprise.inject.spi.EventContext<{jakarta.enterprise.inject.spi.configurator.ObserverMethodConfigurator$EventConsumer%0}>) throws java.lang.Exception

CLSS public abstract interface jakarta.enterprise.inject.spi.configurator.ProducerConfigurator<%0 extends java.lang.Object>
meth public abstract <%0 extends {jakarta.enterprise.inject.spi.configurator.ProducerConfigurator%0}> jakarta.enterprise.inject.spi.configurator.ProducerConfigurator<{jakarta.enterprise.inject.spi.configurator.ProducerConfigurator%0}> produceWith(java.util.function.Function<jakarta.enterprise.context.spi.CreationalContext<{%%0}>,{%%0}>)
meth public abstract jakarta.enterprise.inject.spi.configurator.ProducerConfigurator<{jakarta.enterprise.inject.spi.configurator.ProducerConfigurator%0}> disposeWith(java.util.function.Consumer<{jakarta.enterprise.inject.spi.configurator.ProducerConfigurator%0}>)

CLSS public abstract jakarta.enterprise.util.AnnotationLiteral<%0 extends java.lang.annotation.Annotation>
cons protected <init>()
intf java.io.Serializable
intf java.lang.annotation.Annotation
meth public boolean equals(java.lang.Object)
meth public int hashCode()
meth public java.lang.Class<? extends java.lang.annotation.Annotation> annotationType()
meth public java.lang.String toString()
supr java.lang.Object
hfds annotationType,cachedHashCode,members,serialVersionUID

CLSS public abstract interface !annotation jakarta.enterprise.util.Nonbinding
 anno 0 java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy value=RUNTIME)
 anno 0 java.lang.annotation.Target(java.lang.annotation.ElementType[] value=[METHOD])
innr public final static Literal
intf java.lang.annotation.Annotation

CLSS public final static jakarta.enterprise.util.Nonbinding$Literal
 outer jakarta.enterprise.util.Nonbinding
cons public <init>()
fld public final static jakarta.enterprise.util.Nonbinding$Literal INSTANCE
intf jakarta.enterprise.util.Nonbinding
supr jakarta.enterprise.util.AnnotationLiteral<jakarta.enterprise.util.Nonbinding>
hfds serialVersionUID

CLSS public abstract jakarta.enterprise.util.TypeLiteral<%0 extends java.lang.Object>
cons protected <init>()
intf java.io.Serializable
meth public boolean equals(java.lang.Object)
meth public final java.lang.Class<{jakarta.enterprise.util.TypeLiteral%0}> getRawType()
meth public final java.lang.reflect.Type getType()
meth public int hashCode()
meth public java.lang.String toString()
supr java.lang.Object
hfds actualType,serialVersionUID

CLSS public abstract interface !annotation jakarta.inject.Inject
 anno 0 java.lang.annotation.Documented()
 anno 0 java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy value=RUNTIME)
 anno 0 java.lang.annotation.Target(java.lang.annotation.ElementType[] value=[METHOD, CONSTRUCTOR, FIELD])
intf java.lang.annotation.Annotation

CLSS public abstract interface !annotation jakarta.inject.Named
 anno 0 jakarta.inject.Qualifier()
 anno 0 java.lang.annotation.Documented()
 anno 0 java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy value=RUNTIME)
intf java.lang.annotation.Annotation
meth public abstract !hasdefault java.lang.String value() value= ""

CLSS public abstract interface jakarta.inject.Provider<%0 extends java.lang.Object>
meth public abstract {jakarta.inject.Provider%0} get()

CLSS public abstract interface !annotation jakarta.inject.Qualifier
 anno 0 java.lang.annotation.Documented()
 anno 0 java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy value=RUNTIME)
 anno 0 java.lang.annotation.Target(java.lang.annotation.ElementType[] value=[ANNOTATION_TYPE])
intf java.lang.annotation.Annotation

CLSS public abstract interface !annotation jakarta.inject.Scope
 anno 0 java.lang.annotation.Documented()
 anno 0 java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy value=RUNTIME)
 anno 0 java.lang.annotation.Target(java.lang.annotation.ElementType[] value=[ANNOTATION_TYPE])
intf java.lang.annotation.Annotation

CLSS public abstract interface !annotation jakarta.inject.Singleton
 anno 0 jakarta.inject.Scope()
 anno 0 java.lang.annotation.Documented()
 anno 0 java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy value=RUNTIME)
intf java.lang.annotation.Annotation

CLSS public abstract interface !annotation jakarta.interceptor.AroundConstruct
 anno 0 java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy value=RUNTIME)
 anno 0 java.lang.annotation.Target(java.lang.annotation.ElementType[] value=[METHOD])
intf java.lang.annotation.Annotation

CLSS public abstract interface !annotation jakarta.interceptor.AroundInvoke
 anno 0 java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy value=RUNTIME)
 anno 0 java.lang.annotation.Target(java.lang.annotation.ElementType[] value=[METHOD])
intf java.lang.annotation.Annotation

CLSS public abstract interface !annotation jakarta.interceptor.AroundTimeout
 anno 0 java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy value=RUNTIME)
 anno 0 java.lang.annotation.Target(java.lang.annotation.ElementType[] value=[METHOD])
intf java.lang.annotation.Annotation

CLSS public abstract interface !annotation jakarta.interceptor.ExcludeClassInterceptors
 anno 0 java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy value=RUNTIME)
 anno 0 java.lang.annotation.Target(java.lang.annotation.ElementType[] value=[METHOD, CONSTRUCTOR])
intf java.lang.annotation.Annotation

CLSS public abstract interface !annotation jakarta.interceptor.ExcludeDefaultInterceptors
 anno 0 java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy value=RUNTIME)
 anno 0 java.lang.annotation.Target(java.lang.annotation.ElementType[] value=[TYPE, METHOD, CONSTRUCTOR])
intf java.lang.annotation.Annotation

CLSS public abstract interface !annotation jakarta.interceptor.Interceptor
 anno 0 java.lang.annotation.Documented()
 anno 0 java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy value=RUNTIME)
 anno 0 java.lang.annotation.Target(java.lang.annotation.ElementType[] value=[TYPE])
innr public static Priority
intf java.lang.annotation.Annotation

CLSS public static jakarta.interceptor.Interceptor$Priority
 outer jakarta.interceptor.Interceptor
fld public final static int APPLICATION = 2000
fld public final static int LIBRARY_AFTER = 3000
fld public final static int LIBRARY_BEFORE = 1000
fld public final static int PLATFORM_AFTER = 4000
fld public final static int PLATFORM_BEFORE = 0
supr java.lang.Object

CLSS public abstract interface !annotation jakarta.interceptor.InterceptorBinding
 anno 0 java.lang.annotation.Documented()
 anno 0 java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy value=RUNTIME)
 anno 0 java.lang.annotation.Target(java.lang.annotation.ElementType[] value=[ANNOTATION_TYPE])
intf java.lang.annotation.Annotation

CLSS public abstract interface !annotation jakarta.interceptor.Interceptors
 anno 0 java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy value=RUNTIME)
 anno 0 java.lang.annotation.Target(java.lang.annotation.ElementType[] value=[TYPE, METHOD, CONSTRUCTOR])
intf java.lang.annotation.Annotation
meth public abstract java.lang.Class[] value()

CLSS public abstract interface jakarta.interceptor.InvocationContext
meth public abstract java.lang.Object getTarget()
meth public abstract java.lang.Object getTimer()
meth public abstract java.lang.Object proceed() throws java.lang.Exception
meth public abstract java.lang.Object[] getParameters()
meth public abstract java.lang.reflect.Constructor<?> getConstructor()
meth public abstract java.lang.reflect.Method getMethod()
meth public abstract java.util.Map<java.lang.String,java.lang.Object> getContextData()
meth public abstract void setParameters(java.lang.Object[])

CLSS public final jakarta.json.Json
meth public static jakarta.json.JsonArrayBuilder createArrayBuilder()
meth public static jakarta.json.JsonArrayBuilder createArrayBuilder(jakarta.json.JsonArray)
meth public static jakarta.json.JsonArrayBuilder createArrayBuilder(java.util.Collection<?>)
meth public static jakarta.json.JsonBuilderFactory createBuilderFactory(java.util.Map<java.lang.String,?>)
meth public static jakarta.json.JsonMergePatch createMergeDiff(jakarta.json.JsonValue,jakarta.json.JsonValue)
meth public static jakarta.json.JsonMergePatch createMergePatch(jakarta.json.JsonValue)
meth public static jakarta.json.JsonNumber createValue(double)
meth public static jakarta.json.JsonNumber createValue(int)
meth public static jakarta.json.JsonNumber createValue(java.math.BigDecimal)
meth public static jakarta.json.JsonNumber createValue(java.math.BigInteger)
meth public static jakarta.json.JsonNumber createValue(long)
meth public static jakarta.json.JsonObjectBuilder createObjectBuilder()
meth public static jakarta.json.JsonObjectBuilder createObjectBuilder(jakarta.json.JsonObject)
meth public static jakarta.json.JsonObjectBuilder createObjectBuilder(java.util.Map<java.lang.String,java.lang.Object>)
meth public static jakarta.json.JsonPatch createDiff(jakarta.json.JsonStructure,jakarta.json.JsonStructure)
meth public static jakarta.json.JsonPatch createPatch(jakarta.json.JsonArray)
meth public static jakarta.json.JsonPatchBuilder createPatchBuilder()
meth public static jakarta.json.JsonPatchBuilder createPatchBuilder(jakarta.json.JsonArray)
meth public static jakarta.json.JsonPointer createPointer(java.lang.String)
meth public static jakarta.json.JsonReader createReader(java.io.InputStream)
meth public static jakarta.json.JsonReader createReader(java.io.Reader)
meth public static jakarta.json.JsonReaderFactory createReaderFactory(java.util.Map<java.lang.String,?>)
meth public static jakarta.json.JsonString createValue(java.lang.String)
meth public static jakarta.json.JsonWriter createWriter(java.io.OutputStream)
meth public static jakarta.json.JsonWriter createWriter(java.io.Writer)
meth public static jakarta.json.JsonWriterFactory createWriterFactory(java.util.Map<java.lang.String,?>)
meth public static jakarta.json.stream.JsonGenerator createGenerator(java.io.OutputStream)
meth public static jakarta.json.stream.JsonGenerator createGenerator(java.io.Writer)
meth public static jakarta.json.stream.JsonGeneratorFactory createGeneratorFactory(java.util.Map<java.lang.String,?>)
meth public static jakarta.json.stream.JsonParser createParser(java.io.InputStream)
meth public static jakarta.json.stream.JsonParser createParser(java.io.Reader)
meth public static jakarta.json.stream.JsonParserFactory createParserFactory(java.util.Map<java.lang.String,?>)
meth public static java.lang.String decodePointer(java.lang.String)
meth public static java.lang.String encodePointer(java.lang.String)
supr java.lang.Object

CLSS public abstract interface jakarta.json.JsonArray
intf jakarta.json.JsonStructure
intf java.util.List<jakarta.json.JsonValue>
meth public <%0 extends java.lang.Object, %1 extends jakarta.json.JsonValue> java.util.List<{%%0}> getValuesAs(java.util.function.Function<{%%1},{%%0}>)
meth public abstract <%0 extends jakarta.json.JsonValue> java.util.List<{%%0}> getValuesAs(java.lang.Class<{%%0}>)
meth public abstract boolean getBoolean(int)
meth public abstract boolean getBoolean(int,boolean)
meth public abstract boolean isNull(int)
meth public abstract int getInt(int)
meth public abstract int getInt(int,int)
meth public abstract jakarta.json.JsonArray getJsonArray(int)
meth public abstract jakarta.json.JsonNumber getJsonNumber(int)
meth public abstract jakarta.json.JsonObject getJsonObject(int)
meth public abstract jakarta.json.JsonString getJsonString(int)
meth public abstract java.lang.String getString(int)
meth public abstract java.lang.String getString(int,java.lang.String)

CLSS public abstract interface jakarta.json.JsonArrayBuilder
meth public abstract jakarta.json.JsonArray build()
meth public abstract jakarta.json.JsonArrayBuilder add(boolean)
meth public abstract jakarta.json.JsonArrayBuilder add(double)
meth public abstract jakarta.json.JsonArrayBuilder add(int)
meth public abstract jakarta.json.JsonArrayBuilder add(jakarta.json.JsonArrayBuilder)
meth public abstract jakarta.json.JsonArrayBuilder add(jakarta.json.JsonObjectBuilder)
meth public abstract jakarta.json.JsonArrayBuilder add(jakarta.json.JsonValue)
meth public abstract jakarta.json.JsonArrayBuilder add(java.lang.String)
meth public abstract jakarta.json.JsonArrayBuilder add(java.math.BigDecimal)
meth public abstract jakarta.json.JsonArrayBuilder add(java.math.BigInteger)
meth public abstract jakarta.json.JsonArrayBuilder add(long)
meth public abstract jakarta.json.JsonArrayBuilder addNull()
meth public jakarta.json.JsonArrayBuilder add(int,boolean)
meth public jakarta.json.JsonArrayBuilder add(int,double)
meth public jakarta.json.JsonArrayBuilder add(int,int)
meth public jakarta.json.JsonArrayBuilder add(int,jakarta.json.JsonArrayBuilder)
meth public jakarta.json.JsonArrayBuilder add(int,jakarta.json.JsonObjectBuilder)
meth public jakarta.json.JsonArrayBuilder add(int,jakarta.json.JsonValue)
meth public jakarta.json.JsonArrayBuilder add(int,java.lang.String)
meth public jakarta.json.JsonArrayBuilder add(int,java.math.BigDecimal)
meth public jakarta.json.JsonArrayBuilder add(int,java.math.BigInteger)
meth public jakarta.json.JsonArrayBuilder add(int,long)
meth public jakarta.json.JsonArrayBuilder addAll(jakarta.json.JsonArrayBuilder)
meth public jakarta.json.JsonArrayBuilder addNull(int)
meth public jakarta.json.JsonArrayBuilder remove(int)
meth public jakarta.json.JsonArrayBuilder set(int,boolean)
meth public jakarta.json.JsonArrayBuilder set(int,double)
meth public jakarta.json.JsonArrayBuilder set(int,int)
meth public jakarta.json.JsonArrayBuilder set(int,jakarta.json.JsonArrayBuilder)
meth public jakarta.json.JsonArrayBuilder set(int,jakarta.json.JsonObjectBuilder)
meth public jakarta.json.JsonArrayBuilder set(int,jakarta.json.JsonValue)
meth public jakarta.json.JsonArrayBuilder set(int,java.lang.String)
meth public jakarta.json.JsonArrayBuilder set(int,java.math.BigDecimal)
meth public jakarta.json.JsonArrayBuilder set(int,java.math.BigInteger)
meth public jakarta.json.JsonArrayBuilder set(int,long)
meth public jakarta.json.JsonArrayBuilder setNull(int)

CLSS public abstract interface jakarta.json.JsonBuilderFactory
meth public abstract jakarta.json.JsonArrayBuilder createArrayBuilder()
meth public abstract jakarta.json.JsonObjectBuilder createObjectBuilder()
meth public abstract java.util.Map<java.lang.String,?> getConfigInUse()
meth public jakarta.json.JsonArrayBuilder createArrayBuilder(jakarta.json.JsonArray)
meth public jakarta.json.JsonArrayBuilder createArrayBuilder(java.util.Collection<?>)
meth public jakarta.json.JsonObjectBuilder createObjectBuilder(jakarta.json.JsonObject)
meth public jakarta.json.JsonObjectBuilder createObjectBuilder(java.util.Map<java.lang.String,java.lang.Object>)

CLSS public jakarta.json.JsonException
cons public <init>(java.lang.String)
cons public <init>(java.lang.String,java.lang.Throwable)
supr java.lang.RuntimeException

CLSS public abstract interface jakarta.json.JsonMergePatch
meth public abstract jakarta.json.JsonValue apply(jakarta.json.JsonValue)
meth public abstract jakarta.json.JsonValue toJsonValue()

CLSS public abstract interface jakarta.json.JsonNumber
intf jakarta.json.JsonValue
meth public abstract boolean equals(java.lang.Object)
meth public abstract boolean isIntegral()
meth public abstract double doubleValue()
meth public abstract int hashCode()
meth public abstract int intValue()
meth public abstract int intValueExact()
meth public abstract java.lang.String toString()
meth public abstract java.math.BigDecimal bigDecimalValue()
meth public abstract java.math.BigInteger bigIntegerValue()
meth public abstract java.math.BigInteger bigIntegerValueExact()
meth public abstract long longValue()
meth public abstract long longValueExact()
meth public java.lang.Number numberValue()

CLSS public abstract interface jakarta.json.JsonObject
intf jakarta.json.JsonStructure
intf java.util.Map<java.lang.String,jakarta.json.JsonValue>
meth public abstract boolean getBoolean(java.lang.String)
meth public abstract boolean getBoolean(java.lang.String,boolean)
meth public abstract boolean isNull(java.lang.String)
meth public abstract int getInt(java.lang.String)
meth public abstract int getInt(java.lang.String,int)
meth public abstract jakarta.json.JsonArray getJsonArray(java.lang.String)
meth public abstract jakarta.json.JsonNumber getJsonNumber(java.lang.String)
meth public abstract jakarta.json.JsonObject getJsonObject(java.lang.String)
meth public abstract jakarta.json.JsonString getJsonString(java.lang.String)
meth public abstract java.lang.String getString(java.lang.String)
meth public abstract java.lang.String getString(java.lang.String,java.lang.String)

CLSS public abstract interface jakarta.json.JsonObjectBuilder
meth public abstract jakarta.json.JsonObject build()
meth public abstract jakarta.json.JsonObjectBuilder add(java.lang.String,boolean)
meth public abstract jakarta.json.JsonObjectBuilder add(java.lang.String,double)
meth public abstract jakarta.json.JsonObjectBuilder add(java.lang.String,int)
meth public abstract jakarta.json.JsonObjectBuilder add(java.lang.String,jakarta.json.JsonArrayBuilder)
meth public abstract jakarta.json.JsonObjectBuilder add(java.lang.String,jakarta.json.JsonObjectBuilder)
meth public abstract jakarta.json.JsonObjectBuilder add(java.lang.String,jakarta.json.JsonValue)
meth public abstract jakarta.json.JsonObjectBuilder add(java.lang.String,java.lang.String)
meth public abstract jakarta.json.JsonObjectBuilder add(java.lang.String,java.math.BigDecimal)
meth public abstract jakarta.json.JsonObjectBuilder add(java.lang.String,java.math.BigInteger)
meth public abstract jakarta.json.JsonObjectBuilder add(java.lang.String,long)
meth public abstract jakarta.json.JsonObjectBuilder addNull(java.lang.String)
meth public jakarta.json.JsonObjectBuilder addAll(jakarta.json.JsonObjectBuilder)
meth public jakarta.json.JsonObjectBuilder remove(java.lang.String)

CLSS public abstract interface jakarta.json.JsonPatch
innr public final static !enum Operation
meth public abstract <%0 extends jakarta.json.JsonStructure> {%%0} apply({%%0})
meth public abstract jakarta.json.JsonArray toJsonArray()

CLSS public final static !enum jakarta.json.JsonPatch$Operation
 outer jakarta.json.JsonPatch
fld public final static jakarta.json.JsonPatch$Operation ADD
fld public final static jakarta.json.JsonPatch$Operation COPY
fld public final static jakarta.json.JsonPatch$Operation MOVE
fld public final static jakarta.json.JsonPatch$Operation REMOVE
fld public final static jakarta.json.JsonPatch$Operation REPLACE
fld public final static jakarta.json.JsonPatch$Operation TEST
meth public java.lang.String operationName()
meth public static jakarta.json.JsonPatch$Operation fromOperationName(java.lang.String)
meth public static jakarta.json.JsonPatch$Operation valueOf(java.lang.String)
meth public static jakarta.json.JsonPatch$Operation[] values()
supr java.lang.Enum<jakarta.json.JsonPatch$Operation>
hfds operationName

CLSS public abstract interface jakarta.json.JsonPatchBuilder
meth public abstract jakarta.json.JsonPatch build()
meth public abstract jakarta.json.JsonPatchBuilder add(java.lang.String,boolean)
meth public abstract jakarta.json.JsonPatchBuilder add(java.lang.String,int)
meth public abstract jakarta.json.JsonPatchBuilder add(java.lang.String,jakarta.json.JsonValue)
meth public abstract jakarta.json.JsonPatchBuilder add(java.lang.String,java.lang.String)
meth public abstract jakarta.json.JsonPatchBuilder copy(java.lang.String,java.lang.String)
meth public abstract jakarta.json.JsonPatchBuilder move(java.lang.String,java.lang.String)
meth public abstract jakarta.json.JsonPatchBuilder remove(java.lang.String)
meth public abstract jakarta.json.JsonPatchBuilder replace(java.lang.String,boolean)
meth public abstract jakarta.json.JsonPatchBuilder replace(java.lang.String,int)
meth public abstract jakarta.json.JsonPatchBuilder replace(java.lang.String,jakarta.json.JsonValue)
meth public abstract jakarta.json.JsonPatchBuilder replace(java.lang.String,java.lang.String)
meth public abstract jakarta.json.JsonPatchBuilder test(java.lang.String,boolean)
meth public abstract jakarta.json.JsonPatchBuilder test(java.lang.String,int)
meth public abstract jakarta.json.JsonPatchBuilder test(java.lang.String,jakarta.json.JsonValue)
meth public abstract jakarta.json.JsonPatchBuilder test(java.lang.String,java.lang.String)

CLSS public abstract interface jakarta.json.JsonPointer
meth public abstract <%0 extends jakarta.json.JsonStructure> {%%0} add({%%0},jakarta.json.JsonValue)
meth public abstract <%0 extends jakarta.json.JsonStructure> {%%0} remove({%%0})
meth public abstract <%0 extends jakarta.json.JsonStructure> {%%0} replace({%%0},jakarta.json.JsonValue)
meth public abstract boolean containsValue(jakarta.json.JsonStructure)
meth public abstract jakarta.json.JsonValue getValue(jakarta.json.JsonStructure)
meth public abstract java.lang.String toString()

CLSS public abstract interface jakarta.json.JsonReader
intf java.io.Closeable
meth public abstract jakarta.json.JsonArray readArray()
meth public abstract jakarta.json.JsonObject readObject()
meth public abstract jakarta.json.JsonStructure read()
meth public abstract void close()
meth public jakarta.json.JsonValue readValue()

CLSS public abstract interface jakarta.json.JsonReaderFactory
meth public abstract jakarta.json.JsonReader createReader(java.io.InputStream)
meth public abstract jakarta.json.JsonReader createReader(java.io.InputStream,java.nio.charset.Charset)
meth public abstract jakarta.json.JsonReader createReader(java.io.Reader)
meth public abstract java.util.Map<java.lang.String,?> getConfigInUse()

CLSS public abstract interface jakarta.json.JsonString
intf jakarta.json.JsonValue
meth public abstract boolean equals(java.lang.Object)
meth public abstract int hashCode()
meth public abstract java.lang.CharSequence getChars()
meth public abstract java.lang.String getString()

CLSS public abstract interface jakarta.json.JsonStructure
intf jakarta.json.JsonValue
meth public jakarta.json.JsonValue getValue(java.lang.String)

CLSS public abstract interface jakarta.json.JsonValue
fld public final static jakarta.json.JsonArray EMPTY_JSON_ARRAY
fld public final static jakarta.json.JsonObject EMPTY_JSON_OBJECT
fld public final static jakarta.json.JsonValue FALSE
fld public final static jakarta.json.JsonValue NULL
fld public final static jakarta.json.JsonValue TRUE
innr public final static !enum ValueType
meth public abstract jakarta.json.JsonValue$ValueType getValueType()
meth public abstract java.lang.String toString()
meth public jakarta.json.JsonArray asJsonArray()
meth public jakarta.json.JsonObject asJsonObject()

CLSS public final static !enum jakarta.json.JsonValue$ValueType
 outer jakarta.json.JsonValue
fld public final static jakarta.json.JsonValue$ValueType ARRAY
fld public final static jakarta.json.JsonValue$ValueType FALSE
fld public final static jakarta.json.JsonValue$ValueType NULL
fld public final static jakarta.json.JsonValue$ValueType NUMBER
fld public final static jakarta.json.JsonValue$ValueType OBJECT
fld public final static jakarta.json.JsonValue$ValueType STRING
fld public final static jakarta.json.JsonValue$ValueType TRUE
meth public static jakarta.json.JsonValue$ValueType valueOf(java.lang.String)
meth public static jakarta.json.JsonValue$ValueType[] values()
supr java.lang.Enum<jakarta.json.JsonValue$ValueType>

CLSS public abstract interface jakarta.json.JsonWriter
intf java.io.Closeable
meth public abstract void close()
meth public abstract void write(jakarta.json.JsonStructure)
meth public abstract void writeArray(jakarta.json.JsonArray)
meth public abstract void writeObject(jakarta.json.JsonObject)
meth public void write(jakarta.json.JsonValue)

CLSS public abstract interface jakarta.json.JsonWriterFactory
meth public abstract jakarta.json.JsonWriter createWriter(java.io.OutputStream)
meth public abstract jakarta.json.JsonWriter createWriter(java.io.OutputStream,java.nio.charset.Charset)
meth public abstract jakarta.json.JsonWriter createWriter(java.io.Writer)
meth public abstract java.util.Map<java.lang.String,?> getConfigInUse()

CLSS public abstract interface jakarta.json.bind.Jsonb
intf java.lang.AutoCloseable
meth public abstract <%0 extends java.lang.Object> {%%0} fromJson(java.io.InputStream,java.lang.Class<{%%0}>)
meth public abstract <%0 extends java.lang.Object> {%%0} fromJson(java.io.InputStream,java.lang.reflect.Type)
meth public abstract <%0 extends java.lang.Object> {%%0} fromJson(java.io.Reader,java.lang.Class<{%%0}>)
meth public abstract <%0 extends java.lang.Object> {%%0} fromJson(java.io.Reader,java.lang.reflect.Type)
meth public abstract <%0 extends java.lang.Object> {%%0} fromJson(java.lang.String,java.lang.Class<{%%0}>)
meth public abstract <%0 extends java.lang.Object> {%%0} fromJson(java.lang.String,java.lang.reflect.Type)
meth public abstract java.lang.String toJson(java.lang.Object)
meth public abstract java.lang.String toJson(java.lang.Object,java.lang.reflect.Type)
meth public abstract void toJson(java.lang.Object,java.io.OutputStream)
meth public abstract void toJson(java.lang.Object,java.io.Writer)
meth public abstract void toJson(java.lang.Object,java.lang.reflect.Type,java.io.OutputStream)
meth public abstract void toJson(java.lang.Object,java.lang.reflect.Type,java.io.Writer)

CLSS public abstract interface jakarta.json.bind.JsonbBuilder
meth public abstract jakarta.json.bind.Jsonb build()
meth public abstract jakarta.json.bind.JsonbBuilder withConfig(jakarta.json.bind.JsonbConfig)
meth public abstract jakarta.json.bind.JsonbBuilder withProvider(jakarta.json.spi.JsonProvider)
meth public static jakarta.json.bind.Jsonb create()
meth public static jakarta.json.bind.Jsonb create(jakarta.json.bind.JsonbConfig)
meth public static jakarta.json.bind.JsonbBuilder newBuilder()
meth public static jakarta.json.bind.JsonbBuilder newBuilder(jakarta.json.bind.spi.JsonbProvider)
meth public static jakarta.json.bind.JsonbBuilder newBuilder(java.lang.String)

CLSS public jakarta.json.bind.JsonbConfig
cons public <init>()
fld public final static java.lang.String ADAPTERS = "jsonb.adapters"
fld public final static java.lang.String BINARY_DATA_STRATEGY = "jsonb.binary-data-strategy"
fld public final static java.lang.String DATE_FORMAT = "jsonb.date-format"
fld public final static java.lang.String DESERIALIZERS = "jsonb.derializers"
fld public final static java.lang.String ENCODING = "jsonb.encoding"
fld public final static java.lang.String FORMATTING = "jsonb.formatting"
fld public final static java.lang.String LOCALE = "jsonb.locale"
fld public final static java.lang.String NULL_VALUES = "jsonb.null-values"
fld public final static java.lang.String PROPERTY_NAMING_STRATEGY = "jsonb.property-naming-strategy"
fld public final static java.lang.String PROPERTY_ORDER_STRATEGY = "jsonb.property-order-strategy"
fld public final static java.lang.String PROPERTY_VISIBILITY_STRATEGY = "jsonb.property-visibility-strategy"
fld public final static java.lang.String SERIALIZERS = "jsonb.serializers"
fld public final static java.lang.String STRICT_IJSON = "jsonb.strict-ijson"
meth public !varargs final jakarta.json.bind.JsonbConfig withAdapters(jakarta.json.bind.adapter.JsonbAdapter[])
meth public !varargs final jakarta.json.bind.JsonbConfig withDeserializers(jakarta.json.bind.serializer.JsonbDeserializer[])
meth public !varargs final jakarta.json.bind.JsonbConfig withSerializers(jakarta.json.bind.serializer.JsonbSerializer[])
meth public final jakarta.json.bind.JsonbConfig setProperty(java.lang.String,java.lang.Object)
meth public final jakarta.json.bind.JsonbConfig withBinaryDataStrategy(java.lang.String)
meth public final jakarta.json.bind.JsonbConfig withDateFormat(java.lang.String,java.util.Locale)
meth public final jakarta.json.bind.JsonbConfig withEncoding(java.lang.String)
meth public final jakarta.json.bind.JsonbConfig withFormatting(java.lang.Boolean)
meth public final jakarta.json.bind.JsonbConfig withLocale(java.util.Locale)
meth public final jakarta.json.bind.JsonbConfig withNullValues(java.lang.Boolean)
meth public final jakarta.json.bind.JsonbConfig withPropertyNamingStrategy(jakarta.json.bind.config.PropertyNamingStrategy)
meth public final jakarta.json.bind.JsonbConfig withPropertyNamingStrategy(java.lang.String)
meth public final jakarta.json.bind.JsonbConfig withPropertyOrderStrategy(java.lang.String)
meth public final jakarta.json.bind.JsonbConfig withPropertyVisibilityStrategy(jakarta.json.bind.config.PropertyVisibilityStrategy)
meth public final jakarta.json.bind.JsonbConfig withStrictIJSON(java.lang.Boolean)
meth public final java.util.Map<java.lang.String,java.lang.Object> getAsMap()
meth public final java.util.Optional<java.lang.Object> getProperty(java.lang.String)
supr java.lang.Object
hfds configuration

CLSS public jakarta.json.bind.JsonbException
cons public <init>(java.lang.String)
cons public <init>(java.lang.String,java.lang.Throwable)
supr java.lang.RuntimeException
hfds serialVersionUID

CLSS public abstract interface jakarta.json.bind.adapter.JsonbAdapter<%0 extends java.lang.Object, %1 extends java.lang.Object>
meth public abstract {jakarta.json.bind.adapter.JsonbAdapter%0} adaptFromJson({jakarta.json.bind.adapter.JsonbAdapter%1}) throws java.lang.Exception
meth public abstract {jakarta.json.bind.adapter.JsonbAdapter%1} adaptToJson({jakarta.json.bind.adapter.JsonbAdapter%0}) throws java.lang.Exception

CLSS public abstract interface !annotation jakarta.json.bind.annotation.JsonbAnnotation
 anno 0 java.lang.annotation.Documented()
 anno 0 java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy value=RUNTIME)
intf java.lang.annotation.Annotation

CLSS public abstract interface !annotation jakarta.json.bind.annotation.JsonbCreator
 anno 0 jakarta.json.bind.annotation.JsonbAnnotation()
 anno 0 java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy value=RUNTIME)
 anno 0 java.lang.annotation.Target(java.lang.annotation.ElementType[] value=[ANNOTATION_TYPE, METHOD, CONSTRUCTOR])
intf java.lang.annotation.Annotation

CLSS public abstract interface !annotation jakarta.json.bind.annotation.JsonbDateFormat
 anno 0 jakarta.json.bind.annotation.JsonbAnnotation()
 anno 0 java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy value=RUNTIME)
 anno 0 java.lang.annotation.Target(java.lang.annotation.ElementType[] value=[ANNOTATION_TYPE, FIELD, METHOD, TYPE, PARAMETER, PACKAGE])
fld public final static java.lang.String DEFAULT_FORMAT = "##default"
fld public final static java.lang.String DEFAULT_LOCALE = "##default"
fld public final static java.lang.String TIME_IN_MILLIS = "##time-in-millis"
intf java.lang.annotation.Annotation
meth public abstract !hasdefault java.lang.String locale() value= "##default"
meth public abstract !hasdefault java.lang.String value() value= "##default"

CLSS public abstract interface !annotation jakarta.json.bind.annotation.JsonbNillable
 anno 0 jakarta.json.bind.annotation.JsonbAnnotation()
 anno 0 java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy value=RUNTIME)
 anno 0 java.lang.annotation.Target(java.lang.annotation.ElementType[] value=[ANNOTATION_TYPE, TYPE, PACKAGE])
intf java.lang.annotation.Annotation
meth public abstract !hasdefault boolean value() value= true

CLSS public abstract interface !annotation jakarta.json.bind.annotation.JsonbNumberFormat
 anno 0 jakarta.json.bind.annotation.JsonbAnnotation()
 anno 0 java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy value=RUNTIME)
 anno 0 java.lang.annotation.Target(java.lang.annotation.ElementType[] value=[ANNOTATION_TYPE, FIELD, METHOD, TYPE, PARAMETER, PACKAGE])
fld public final static java.lang.String DEFAULT_LOCALE = "##default"
intf java.lang.annotation.Annotation
meth public abstract !hasdefault java.lang.String locale() value= "##default"
meth public abstract !hasdefault java.lang.String value() value= ""

CLSS public abstract interface !annotation jakarta.json.bind.annotation.JsonbProperty
 anno 0 jakarta.json.bind.annotation.JsonbAnnotation()
 anno 0 java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy value=RUNTIME)
 anno 0 java.lang.annotation.Target(java.lang.annotation.ElementType[] value=[ANNOTATION_TYPE, METHOD, FIELD, PARAMETER])
intf java.lang.annotation.Annotation
meth public abstract !hasdefault boolean nillable() value= false
meth public abstract !hasdefault java.lang.String value() value= ""

CLSS public abstract interface !annotation jakarta.json.bind.annotation.JsonbPropertyOrder
 anno 0 jakarta.json.bind.annotation.JsonbAnnotation()
 anno 0 java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy value=RUNTIME)
 anno 0 java.lang.annotation.Target(java.lang.annotation.ElementType[] value=[ANNOTATION_TYPE, TYPE])
intf java.lang.annotation.Annotation
meth public abstract java.lang.String[] value()

CLSS public abstract interface !annotation jakarta.json.bind.annotation.JsonbTransient
 anno 0 jakarta.json.bind.annotation.JsonbAnnotation()
 anno 0 java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy value=RUNTIME)
 anno 0 java.lang.annotation.Target(java.lang.annotation.ElementType[] value=[ANNOTATION_TYPE, FIELD, METHOD])
intf java.lang.annotation.Annotation

CLSS public abstract interface !annotation jakarta.json.bind.annotation.JsonbTypeAdapter
 anno 0 jakarta.json.bind.annotation.JsonbAnnotation()
 anno 0 java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy value=RUNTIME)
 anno 0 java.lang.annotation.Target(java.lang.annotation.ElementType[] value=[ANNOTATION_TYPE, TYPE, FIELD, METHOD])
intf java.lang.annotation.Annotation
meth public abstract java.lang.Class<? extends jakarta.json.bind.adapter.JsonbAdapter> value()

CLSS public abstract interface !annotation jakarta.json.bind.annotation.JsonbTypeDeserializer
 anno 0 jakarta.json.bind.annotation.JsonbAnnotation()
 anno 0 java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy value=RUNTIME)
 anno 0 java.lang.annotation.Target(java.lang.annotation.ElementType[] value=[ANNOTATION_TYPE, TYPE, FIELD, METHOD])
intf java.lang.annotation.Annotation
meth public abstract java.lang.Class<? extends jakarta.json.bind.serializer.JsonbDeserializer> value()

CLSS public abstract interface !annotation jakarta.json.bind.annotation.JsonbTypeSerializer
 anno 0 jakarta.json.bind.annotation.JsonbAnnotation()
 anno 0 java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy value=RUNTIME)
 anno 0 java.lang.annotation.Target(java.lang.annotation.ElementType[] value=[ANNOTATION_TYPE, TYPE, FIELD, METHOD])
intf java.lang.annotation.Annotation
meth public abstract java.lang.Class<? extends jakarta.json.bind.serializer.JsonbSerializer> value()

CLSS public abstract interface !annotation jakarta.json.bind.annotation.JsonbVisibility
 anno 0 jakarta.json.bind.annotation.JsonbAnnotation()
 anno 0 java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy value=RUNTIME)
 anno 0 java.lang.annotation.Target(java.lang.annotation.ElementType[] value=[ANNOTATION_TYPE, TYPE, PACKAGE])
intf java.lang.annotation.Annotation
meth public abstract java.lang.Class<? extends jakarta.json.bind.config.PropertyVisibilityStrategy> value()

CLSS public final jakarta.json.bind.config.BinaryDataStrategy
fld public final static java.lang.String BASE_64 = "BASE_64"
fld public final static java.lang.String BASE_64_URL = "BASE_64_URL"
fld public final static java.lang.String BYTE = "BYTE"
supr java.lang.Object

CLSS public abstract interface jakarta.json.bind.config.PropertyNamingStrategy
fld public final static java.lang.String CASE_INSENSITIVE = "CASE_INSENSITIVE"
fld public final static java.lang.String IDENTITY = "IDENTITY"
fld public final static java.lang.String LOWER_CASE_WITH_DASHES = "LOWER_CASE_WITH_DASHES"
fld public final static java.lang.String LOWER_CASE_WITH_UNDERSCORES = "LOWER_CASE_WITH_UNDERSCORES"
fld public final static java.lang.String UPPER_CAMEL_CASE = "UPPER_CAMEL_CASE"
fld public final static java.lang.String UPPER_CAMEL_CASE_WITH_SPACES = "UPPER_CAMEL_CASE_WITH_SPACES"
meth public abstract java.lang.String translateName(java.lang.String)

CLSS public final jakarta.json.bind.config.PropertyOrderStrategy
fld public final static java.lang.String ANY = "ANY"
fld public final static java.lang.String LEXICOGRAPHICAL = "LEXICOGRAPHICAL"
fld public final static java.lang.String REVERSE = "REVERSE"
supr java.lang.Object

CLSS public abstract interface jakarta.json.bind.config.PropertyVisibilityStrategy
meth public abstract boolean isVisible(java.lang.reflect.Field)
meth public abstract boolean isVisible(java.lang.reflect.Method)

CLSS public abstract interface jakarta.json.bind.serializer.DeserializationContext
meth public abstract <%0 extends java.lang.Object> {%%0} deserialize(java.lang.Class<{%%0}>,jakarta.json.stream.JsonParser)
meth public abstract <%0 extends java.lang.Object> {%%0} deserialize(java.lang.reflect.Type,jakarta.json.stream.JsonParser)

CLSS public abstract interface jakarta.json.bind.serializer.JsonbDeserializer<%0 extends java.lang.Object>
meth public abstract {jakarta.json.bind.serializer.JsonbDeserializer%0} deserialize(jakarta.json.stream.JsonParser,jakarta.json.bind.serializer.DeserializationContext,java.lang.reflect.Type)

CLSS public abstract interface jakarta.json.bind.serializer.JsonbSerializer<%0 extends java.lang.Object>
meth public abstract void serialize({jakarta.json.bind.serializer.JsonbSerializer%0},jakarta.json.stream.JsonGenerator,jakarta.json.bind.serializer.SerializationContext)

CLSS public abstract interface jakarta.json.bind.serializer.SerializationContext
meth public abstract <%0 extends java.lang.Object> void serialize(java.lang.String,{%%0},jakarta.json.stream.JsonGenerator)
meth public abstract <%0 extends java.lang.Object> void serialize({%%0},jakarta.json.stream.JsonGenerator)

CLSS public abstract jakarta.json.bind.spi.JsonbProvider
cons protected <init>()
meth public abstract jakarta.json.bind.JsonbBuilder create()
meth public static jakarta.json.bind.spi.JsonbProvider provider()
meth public static jakarta.json.bind.spi.JsonbProvider provider(java.lang.String)
supr java.lang.Object
hfds DEFAULT_PROVIDER

CLSS public abstract jakarta.json.spi.JsonProvider
cons protected <init>()
meth public abstract jakarta.json.JsonArrayBuilder createArrayBuilder()
meth public abstract jakarta.json.JsonBuilderFactory createBuilderFactory(java.util.Map<java.lang.String,?>)
meth public abstract jakarta.json.JsonObjectBuilder createObjectBuilder()
meth public abstract jakarta.json.JsonReader createReader(java.io.InputStream)
meth public abstract jakarta.json.JsonReader createReader(java.io.Reader)
meth public abstract jakarta.json.JsonReaderFactory createReaderFactory(java.util.Map<java.lang.String,?>)
meth public abstract jakarta.json.JsonWriter createWriter(java.io.OutputStream)
meth public abstract jakarta.json.JsonWriter createWriter(java.io.Writer)
meth public abstract jakarta.json.JsonWriterFactory createWriterFactory(java.util.Map<java.lang.String,?>)
meth public abstract jakarta.json.stream.JsonGenerator createGenerator(java.io.OutputStream)
meth public abstract jakarta.json.stream.JsonGenerator createGenerator(java.io.Writer)
meth public abstract jakarta.json.stream.JsonGeneratorFactory createGeneratorFactory(java.util.Map<java.lang.String,?>)
meth public abstract jakarta.json.stream.JsonParser createParser(java.io.InputStream)
meth public abstract jakarta.json.stream.JsonParser createParser(java.io.Reader)
meth public abstract jakarta.json.stream.JsonParserFactory createParserFactory(java.util.Map<java.lang.String,?>)
meth public jakarta.json.JsonArrayBuilder createArrayBuilder(jakarta.json.JsonArray)
meth public jakarta.json.JsonArrayBuilder createArrayBuilder(java.util.Collection<?>)
meth public jakarta.json.JsonMergePatch createMergeDiff(jakarta.json.JsonValue,jakarta.json.JsonValue)
meth public jakarta.json.JsonMergePatch createMergePatch(jakarta.json.JsonValue)
meth public jakarta.json.JsonNumber createValue(double)
meth public jakarta.json.JsonNumber createValue(int)
meth public jakarta.json.JsonNumber createValue(java.math.BigDecimal)
meth public jakarta.json.JsonNumber createValue(java.math.BigInteger)
meth public jakarta.json.JsonNumber createValue(long)
meth public jakarta.json.JsonObjectBuilder createObjectBuilder(jakarta.json.JsonObject)
meth public jakarta.json.JsonObjectBuilder createObjectBuilder(java.util.Map<java.lang.String,java.lang.Object>)
meth public jakarta.json.JsonPatch createDiff(jakarta.json.JsonStructure,jakarta.json.JsonStructure)
meth public jakarta.json.JsonPatch createPatch(jakarta.json.JsonArray)
meth public jakarta.json.JsonPatchBuilder createPatchBuilder()
meth public jakarta.json.JsonPatchBuilder createPatchBuilder(jakarta.json.JsonArray)
meth public jakarta.json.JsonPointer createPointer(java.lang.String)
meth public jakarta.json.JsonString createValue(java.lang.String)
meth public static jakarta.json.spi.JsonProvider provider()
supr java.lang.Object
hfds DEFAULT_PROVIDER

CLSS public final jakarta.json.stream.JsonCollectors
meth public static <%0 extends jakarta.json.JsonArrayBuilder> java.util.stream.Collector<jakarta.json.JsonValue,java.util.Map<java.lang.String,{%%0}>,jakarta.json.JsonObject> groupingBy(java.util.function.Function<jakarta.json.JsonValue,java.lang.String>,java.util.stream.Collector<jakarta.json.JsonValue,{%%0},jakarta.json.JsonArray>)
meth public static java.util.stream.Collector<jakarta.json.JsonValue,jakarta.json.JsonArrayBuilder,jakarta.json.JsonArray> toJsonArray()
meth public static java.util.stream.Collector<jakarta.json.JsonValue,jakarta.json.JsonObjectBuilder,jakarta.json.JsonObject> toJsonObject(java.util.function.Function<jakarta.json.JsonValue,java.lang.String>,java.util.function.Function<jakarta.json.JsonValue,jakarta.json.JsonValue>)
meth public static java.util.stream.Collector<jakarta.json.JsonValue,java.util.Map<java.lang.String,jakarta.json.JsonArrayBuilder>,jakarta.json.JsonObject> groupingBy(java.util.function.Function<jakarta.json.JsonValue,java.lang.String>)
meth public static java.util.stream.Collector<java.util.Map$Entry<java.lang.String,jakarta.json.JsonValue>,jakarta.json.JsonObjectBuilder,jakarta.json.JsonObject> toJsonObject()
supr java.lang.Object

CLSS public jakarta.json.stream.JsonGenerationException
cons public <init>(java.lang.String)
cons public <init>(java.lang.String,java.lang.Throwable)
supr jakarta.json.JsonException

CLSS public abstract interface jakarta.json.stream.JsonGenerator
fld public final static java.lang.String PRETTY_PRINTING = "jakarta.json.stream.JsonGenerator.prettyPrinting"
intf java.io.Closeable
intf java.io.Flushable
meth public abstract jakarta.json.stream.JsonGenerator write(boolean)
meth public abstract jakarta.json.stream.JsonGenerator write(double)
meth public abstract jakarta.json.stream.JsonGenerator write(int)
meth public abstract jakarta.json.stream.JsonGenerator write(jakarta.json.JsonValue)
meth public abstract jakarta.json.stream.JsonGenerator write(java.lang.String)
meth public abstract jakarta.json.stream.JsonGenerator write(java.lang.String,boolean)
meth public abstract jakarta.json.stream.JsonGenerator write(java.lang.String,double)
meth public abstract jakarta.json.stream.JsonGenerator write(java.lang.String,int)
meth public abstract jakarta.json.stream.JsonGenerator write(java.lang.String,jakarta.json.JsonValue)
meth public abstract jakarta.json.stream.JsonGenerator write(java.lang.String,java.lang.String)
meth public abstract jakarta.json.stream.JsonGenerator write(java.lang.String,java.math.BigDecimal)
meth public abstract jakarta.json.stream.JsonGenerator write(java.lang.String,java.math.BigInteger)
meth public abstract jakarta.json.stream.JsonGenerator write(java.lang.String,long)
meth public abstract jakarta.json.stream.JsonGenerator write(java.math.BigDecimal)
meth public abstract jakarta.json.stream.JsonGenerator write(java.math.BigInteger)
meth public abstract jakarta.json.stream.JsonGenerator write(long)
meth public abstract jakarta.json.stream.JsonGenerator writeEnd()
meth public abstract jakarta.json.stream.JsonGenerator writeKey(java.lang.String)
meth public abstract jakarta.json.stream.JsonGenerator writeNull()
meth public abstract jakarta.json.stream.JsonGenerator writeNull(java.lang.String)
meth public abstract jakarta.json.stream.JsonGenerator writeStartArray()
meth public abstract jakarta.json.stream.JsonGenerator writeStartArray(java.lang.String)
meth public abstract jakarta.json.stream.JsonGenerator writeStartObject()
meth public abstract jakarta.json.stream.JsonGenerator writeStartObject(java.lang.String)
meth public abstract void close()
meth public abstract void flush()

CLSS public abstract interface jakarta.json.stream.JsonGeneratorFactory
meth public abstract jakarta.json.stream.JsonGenerator createGenerator(java.io.OutputStream)
meth public abstract jakarta.json.stream.JsonGenerator createGenerator(java.io.OutputStream,java.nio.charset.Charset)
meth public abstract jakarta.json.stream.JsonGenerator createGenerator(java.io.Writer)
meth public abstract java.util.Map<java.lang.String,?> getConfigInUse()

CLSS public abstract interface jakarta.json.stream.JsonLocation
meth public abstract long getColumnNumber()
meth public abstract long getLineNumber()
meth public abstract long getStreamOffset()

CLSS public abstract interface jakarta.json.stream.JsonParser
innr public final static !enum Event
intf java.io.Closeable
meth public abstract boolean hasNext()
meth public abstract boolean isIntegralNumber()
meth public abstract int getInt()
meth public abstract jakarta.json.stream.JsonLocation getLocation()
meth public abstract jakarta.json.stream.JsonParser$Event next()
meth public abstract java.lang.String getString()
meth public abstract java.math.BigDecimal getBigDecimal()
meth public abstract long getLong()
meth public abstract void close()
meth public jakarta.json.JsonArray getArray()
meth public jakarta.json.JsonObject getObject()
meth public jakarta.json.JsonValue getValue()
meth public java.util.stream.Stream<jakarta.json.JsonValue> getArrayStream()
meth public java.util.stream.Stream<jakarta.json.JsonValue> getValueStream()
meth public java.util.stream.Stream<java.util.Map$Entry<java.lang.String,jakarta.json.JsonValue>> getObjectStream()
meth public void skipArray()
meth public void skipObject()

CLSS public final static !enum jakarta.json.stream.JsonParser$Event
 outer jakarta.json.stream.JsonParser
fld public final static jakarta.json.stream.JsonParser$Event END_ARRAY
fld public final static jakarta.json.stream.JsonParser$Event END_OBJECT
fld public final static jakarta.json.stream.JsonParser$Event KEY_NAME
fld public final static jakarta.json.stream.JsonParser$Event START_ARRAY
fld public final static jakarta.json.stream.JsonParser$Event START_OBJECT
fld public final static jakarta.json.stream.JsonParser$Event VALUE_FALSE
fld public final static jakarta.json.stream.JsonParser$Event VALUE_NULL
fld public final static jakarta.json.stream.JsonParser$Event VALUE_NUMBER
fld public final static jakarta.json.stream.JsonParser$Event VALUE_STRING
fld public final static jakarta.json.stream.JsonParser$Event VALUE_TRUE
meth public static jakarta.json.stream.JsonParser$Event valueOf(java.lang.String)
meth public static jakarta.json.stream.JsonParser$Event[] values()
supr java.lang.Enum<jakarta.json.stream.JsonParser$Event>

CLSS public abstract interface jakarta.json.stream.JsonParserFactory
meth public abstract jakarta.json.stream.JsonParser createParser(jakarta.json.JsonArray)
meth public abstract jakarta.json.stream.JsonParser createParser(jakarta.json.JsonObject)
meth public abstract jakarta.json.stream.JsonParser createParser(java.io.InputStream)
meth public abstract jakarta.json.stream.JsonParser createParser(java.io.InputStream,java.nio.charset.Charset)
meth public abstract jakarta.json.stream.JsonParser createParser(java.io.Reader)
meth public abstract java.util.Map<java.lang.String,?> getConfigInUse()

CLSS public jakarta.json.stream.JsonParsingException
cons public <init>(java.lang.String,jakarta.json.stream.JsonLocation)
cons public <init>(java.lang.String,java.lang.Throwable,jakarta.json.stream.JsonLocation)
meth public jakarta.json.stream.JsonLocation getLocation()
supr jakarta.json.JsonException
hfds location

CLSS public abstract interface !annotation jakarta.resource.AdministeredObjectDefinition
 anno 0 java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy value=RUNTIME)
 anno 0 java.lang.annotation.Target(java.lang.annotation.ElementType[] value=[TYPE])
intf java.lang.annotation.Annotation
meth public abstract !hasdefault java.lang.String description() value= ""
meth public abstract !hasdefault java.lang.String interfaceName() value= ""
meth public abstract !hasdefault java.lang.String[] properties() value= []
meth public abstract java.lang.String className()
meth public abstract java.lang.String name()
meth public abstract java.lang.String resourceAdapter()

CLSS public abstract interface !annotation jakarta.resource.AdministeredObjectDefinitions
 anno 0 java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy value=RUNTIME)
 anno 0 java.lang.annotation.Target(java.lang.annotation.ElementType[] value=[TYPE])
intf java.lang.annotation.Annotation
meth public abstract jakarta.resource.AdministeredObjectDefinition[] value()

CLSS public abstract interface !annotation jakarta.resource.ConnectionFactoryDefinition
 anno 0 java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy value=RUNTIME)
 anno 0 java.lang.annotation.Target(java.lang.annotation.ElementType[] value=[TYPE])
intf java.lang.annotation.Annotation
meth public abstract !hasdefault int maxPoolSize() value= -1
meth public abstract !hasdefault int minPoolSize() value= -1
meth public abstract !hasdefault jakarta.resource.spi.TransactionSupport$TransactionSupportLevel transactionSupport() value= NoTransaction
meth public abstract !hasdefault java.lang.String description() value= ""
meth public abstract !hasdefault java.lang.String[] properties() value= []
meth public abstract java.lang.String interfaceName()
meth public abstract java.lang.String name()
meth public abstract java.lang.String resourceAdapter()

CLSS public abstract interface !annotation jakarta.resource.ConnectionFactoryDefinitions
 anno 0 java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy value=RUNTIME)
 anno 0 java.lang.annotation.Target(java.lang.annotation.ElementType[] value=[TYPE])
intf java.lang.annotation.Annotation
meth public abstract jakarta.resource.ConnectionFactoryDefinition[] value()

CLSS public jakarta.resource.NotSupportedException
cons public <init>()
cons public <init>(java.lang.String)
cons public <init>(java.lang.String,java.lang.String)
cons public <init>(java.lang.String,java.lang.Throwable)
cons public <init>(java.lang.Throwable)
supr jakarta.resource.ResourceException

CLSS public abstract interface jakarta.resource.Referenceable
intf javax.naming.Referenceable
meth public abstract void setReference(javax.naming.Reference)

CLSS public jakarta.resource.ResourceException
cons public <init>()
cons public <init>(java.lang.String)
cons public <init>(java.lang.String,java.lang.String)
cons public <init>(java.lang.String,java.lang.Throwable)
cons public <init>(java.lang.Throwable)
meth public java.lang.Exception getLinkedException()
meth public java.lang.String getErrorCode()
meth public java.lang.String getMessage()
meth public void setErrorCode(java.lang.String)
meth public void setLinkedException(java.lang.Exception)
supr java.lang.Exception
hfds errorCode,linkedException

CLSS public abstract interface jakarta.resource.cci.Connection
meth public abstract jakarta.resource.cci.ConnectionMetaData getMetaData() throws jakarta.resource.ResourceException
meth public abstract jakarta.resource.cci.Interaction createInteraction() throws jakarta.resource.ResourceException
meth public abstract jakarta.resource.cci.LocalTransaction getLocalTransaction() throws jakarta.resource.ResourceException
meth public abstract jakarta.resource.cci.ResultSetInfo getResultSetInfo() throws jakarta.resource.ResourceException
meth public abstract void close() throws jakarta.resource.ResourceException

CLSS public abstract interface jakarta.resource.cci.ConnectionFactory
intf jakarta.resource.Referenceable
intf java.io.Serializable
meth public abstract jakarta.resource.cci.Connection getConnection() throws jakarta.resource.ResourceException
meth public abstract jakarta.resource.cci.Connection getConnection(jakarta.resource.cci.ConnectionSpec) throws jakarta.resource.ResourceException
meth public abstract jakarta.resource.cci.RecordFactory getRecordFactory() throws jakarta.resource.ResourceException
meth public abstract jakarta.resource.cci.ResourceAdapterMetaData getMetaData() throws jakarta.resource.ResourceException

CLSS public abstract interface jakarta.resource.cci.ConnectionMetaData
meth public abstract java.lang.String getEISProductName() throws jakarta.resource.ResourceException
meth public abstract java.lang.String getEISProductVersion() throws jakarta.resource.ResourceException
meth public abstract java.lang.String getUserName() throws jakarta.resource.ResourceException

CLSS public abstract interface jakarta.resource.cci.ConnectionSpec

CLSS public abstract interface jakarta.resource.cci.IndexedRecord
intf jakarta.resource.cci.Record
intf java.io.Serializable
intf java.util.List

CLSS public abstract interface jakarta.resource.cci.Interaction
meth public abstract boolean execute(jakarta.resource.cci.InteractionSpec,jakarta.resource.cci.Record,jakarta.resource.cci.Record) throws jakarta.resource.ResourceException
meth public abstract jakarta.resource.cci.Connection getConnection()
meth public abstract jakarta.resource.cci.Record execute(jakarta.resource.cci.InteractionSpec,jakarta.resource.cci.Record) throws jakarta.resource.ResourceException
meth public abstract jakarta.resource.cci.ResourceWarning getWarnings() throws jakarta.resource.ResourceException
meth public abstract void clearWarnings() throws jakarta.resource.ResourceException
meth public abstract void close() throws jakarta.resource.ResourceException

CLSS public abstract interface jakarta.resource.cci.InteractionSpec
fld public final static int SYNC_RECEIVE = 2
fld public final static int SYNC_SEND = 0
fld public final static int SYNC_SEND_RECEIVE = 1
intf java.io.Serializable

CLSS public abstract interface jakarta.resource.cci.LocalTransaction
meth public abstract void begin() throws jakarta.resource.ResourceException
meth public abstract void commit() throws jakarta.resource.ResourceException
meth public abstract void rollback() throws jakarta.resource.ResourceException

CLSS public abstract interface jakarta.resource.cci.MappedRecord
intf jakarta.resource.cci.Record
intf java.io.Serializable
intf java.util.Map

CLSS public abstract interface jakarta.resource.cci.MessageListener
meth public abstract jakarta.resource.cci.Record onMessage(jakarta.resource.cci.Record) throws jakarta.resource.ResourceException

CLSS public abstract interface jakarta.resource.cci.Record
intf java.io.Serializable
intf java.lang.Cloneable
meth public abstract boolean equals(java.lang.Object)
meth public abstract int hashCode()
meth public abstract java.lang.Object clone() throws java.lang.CloneNotSupportedException
meth public abstract java.lang.String getRecordName()
meth public abstract java.lang.String getRecordShortDescription()
meth public abstract void setRecordName(java.lang.String)
meth public abstract void setRecordShortDescription(java.lang.String)

CLSS public abstract interface jakarta.resource.cci.RecordFactory
meth public abstract jakarta.resource.cci.IndexedRecord createIndexedRecord(java.lang.String) throws jakarta.resource.ResourceException
meth public abstract jakarta.resource.cci.MappedRecord createMappedRecord(java.lang.String) throws jakarta.resource.ResourceException

CLSS public abstract interface jakarta.resource.cci.ResourceAdapterMetaData
meth public abstract boolean supportsExecuteWithInputAndOutputRecord()
meth public abstract boolean supportsExecuteWithInputRecordOnly()
meth public abstract boolean supportsLocalTransactionDemarcation()
meth public abstract java.lang.String getAdapterName()
meth public abstract java.lang.String getAdapterShortDescription()
meth public abstract java.lang.String getAdapterVendorName()
meth public abstract java.lang.String getAdapterVersion()
meth public abstract java.lang.String getSpecVersion()
meth public abstract java.lang.String[] getInteractionSpecsSupported()

CLSS public jakarta.resource.cci.ResourceWarning
cons public <init>()
cons public <init>(java.lang.String)
cons public <init>(java.lang.String,java.lang.String)
cons public <init>(java.lang.String,java.lang.Throwable)
cons public <init>(java.lang.Throwable)
meth public jakarta.resource.cci.ResourceWarning getLinkedWarning()
meth public void setLinkedWarning(jakarta.resource.cci.ResourceWarning)
supr jakarta.resource.ResourceException

CLSS public abstract interface jakarta.resource.cci.ResultSet
intf jakarta.resource.cci.Record
intf java.sql.ResultSet

CLSS public abstract interface jakarta.resource.cci.ResultSetInfo
meth public abstract boolean deletesAreDetected(int) throws jakarta.resource.ResourceException
meth public abstract boolean insertsAreDetected(int) throws jakarta.resource.ResourceException
meth public abstract boolean othersDeletesAreVisible(int) throws jakarta.resource.ResourceException
meth public abstract boolean othersInsertsAreVisible(int) throws jakarta.resource.ResourceException
meth public abstract boolean othersUpdatesAreVisible(int) throws jakarta.resource.ResourceException
meth public abstract boolean ownDeletesAreVisible(int) throws jakarta.resource.ResourceException
meth public abstract boolean ownInsertsAreVisible(int) throws jakarta.resource.ResourceException
meth public abstract boolean ownUpdatesAreVisible(int) throws jakarta.resource.ResourceException
meth public abstract boolean supportsResultSetType(int) throws jakarta.resource.ResourceException
meth public abstract boolean supportsResultTypeConcurrency(int,int) throws jakarta.resource.ResourceException
meth public abstract boolean updatesAreDetected(int) throws jakarta.resource.ResourceException

CLSS public abstract interface jakarta.resource.cci.Streamable
meth public abstract void read(java.io.InputStream) throws java.io.IOException
meth public abstract void write(java.io.OutputStream) throws java.io.IOException

CLSS public abstract interface !annotation jakarta.resource.spi.Activation
 anno 0 java.lang.annotation.Documented()
 anno 0 java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy value=RUNTIME)
 anno 0 java.lang.annotation.Target(java.lang.annotation.ElementType[] value=[TYPE])
intf java.lang.annotation.Annotation
meth public abstract java.lang.Class[] messageListeners()

CLSS public abstract interface jakarta.resource.spi.ActivationSpec
intf jakarta.resource.spi.ResourceAdapterAssociation
meth public abstract void validate() throws jakarta.resource.spi.InvalidPropertyException

CLSS public abstract interface !annotation jakarta.resource.spi.AdministeredObject
 anno 0 java.lang.annotation.Documented()
 anno 0 java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy value=RUNTIME)
 anno 0 java.lang.annotation.Target(java.lang.annotation.ElementType[] value=[TYPE])
intf java.lang.annotation.Annotation
meth public abstract !hasdefault java.lang.Class[] adminObjectInterfaces() value= []

CLSS public jakarta.resource.spi.ApplicationServerInternalException
cons public <init>()
cons public <init>(java.lang.String)
cons public <init>(java.lang.String,java.lang.String)
cons public <init>(java.lang.String,java.lang.Throwable)
cons public <init>(java.lang.Throwable)
supr jakarta.resource.ResourceException

CLSS public abstract interface !annotation jakarta.resource.spi.AuthenticationMechanism
 anno 0 java.lang.annotation.Documented()
 anno 0 java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy value=RUNTIME)
 anno 0 java.lang.annotation.Target(java.lang.annotation.ElementType[] value=[])
innr public final static !enum CredentialInterface
intf java.lang.annotation.Annotation
meth public abstract !hasdefault jakarta.resource.spi.AuthenticationMechanism$CredentialInterface credentialInterface() value= PasswordCredential
meth public abstract !hasdefault java.lang.String authMechanism() value= "BasicPassword"
meth public abstract !hasdefault java.lang.String[] description() value= []

CLSS public final static !enum jakarta.resource.spi.AuthenticationMechanism$CredentialInterface
 outer jakarta.resource.spi.AuthenticationMechanism
fld public final static jakarta.resource.spi.AuthenticationMechanism$CredentialInterface GSSCredential
fld public final static jakarta.resource.spi.AuthenticationMechanism$CredentialInterface GenericCredential
fld public final static jakarta.resource.spi.AuthenticationMechanism$CredentialInterface PasswordCredential
meth public static jakarta.resource.spi.AuthenticationMechanism$CredentialInterface valueOf(java.lang.String)
meth public static jakarta.resource.spi.AuthenticationMechanism$CredentialInterface[] values()
supr java.lang.Enum<jakarta.resource.spi.AuthenticationMechanism$CredentialInterface>

CLSS public abstract interface jakarta.resource.spi.BootstrapContext
meth public abstract boolean isContextSupported(java.lang.Class<? extends jakarta.resource.spi.work.WorkContext>)
meth public abstract jakarta.resource.spi.XATerminator getXATerminator()
meth public abstract jakarta.resource.spi.work.WorkManager getWorkManager()
meth public abstract jakarta.transaction.TransactionSynchronizationRegistry getTransactionSynchronizationRegistry()
meth public abstract java.util.Timer createTimer() throws jakarta.resource.spi.UnavailableException

CLSS public jakarta.resource.spi.CommException
cons public <init>()
cons public <init>(java.lang.String)
cons public <init>(java.lang.String,java.lang.String)
cons public <init>(java.lang.String,java.lang.Throwable)
cons public <init>(java.lang.Throwable)
supr jakarta.resource.ResourceException

CLSS public abstract interface !annotation jakarta.resource.spi.ConfigProperty
 anno 0 java.lang.annotation.Documented()
 anno 0 java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy value=RUNTIME)
 anno 0 java.lang.annotation.Target(java.lang.annotation.ElementType[] value=[FIELD, METHOD])
intf java.lang.annotation.Annotation
meth public abstract !hasdefault boolean confidential() value= false
meth public abstract !hasdefault boolean ignore() value= false
meth public abstract !hasdefault boolean supportsDynamicUpdates() value= false
meth public abstract !hasdefault java.lang.Class type() value= class java.lang.Object
meth public abstract !hasdefault java.lang.String defaultValue() value= ""
meth public abstract !hasdefault java.lang.String[] description() value= []

CLSS public abstract interface !annotation jakarta.resource.spi.ConnectionDefinition
 anno 0 java.lang.annotation.Documented()
 anno 0 java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy value=RUNTIME)
 anno 0 java.lang.annotation.Target(java.lang.annotation.ElementType[] value=[TYPE])
intf java.lang.annotation.Annotation
meth public abstract java.lang.Class connection()
meth public abstract java.lang.Class connectionFactory()
meth public abstract java.lang.Class connectionFactoryImpl()
meth public abstract java.lang.Class connectionImpl()

CLSS public abstract interface !annotation jakarta.resource.spi.ConnectionDefinitions
 anno 0 java.lang.annotation.Documented()
 anno 0 java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy value=RUNTIME)
 anno 0 java.lang.annotation.Target(java.lang.annotation.ElementType[] value=[TYPE])
intf java.lang.annotation.Annotation
meth public abstract jakarta.resource.spi.ConnectionDefinition[] value()

CLSS public jakarta.resource.spi.ConnectionEvent
cons public <init>(jakarta.resource.spi.ManagedConnection,int)
cons public <init>(jakarta.resource.spi.ManagedConnection,int,java.lang.Exception)
fld protected int id
fld public final static int CONNECTION_CLOSED = 1
fld public final static int CONNECTION_ERROR_OCCURRED = 5
fld public final static int LOCAL_TRANSACTION_COMMITTED = 3
fld public final static int LOCAL_TRANSACTION_ROLLEDBACK = 4
fld public final static int LOCAL_TRANSACTION_STARTED = 2
meth public int getId()
meth public java.lang.Exception getException()
meth public java.lang.Object getConnectionHandle()
meth public void setConnectionHandle(java.lang.Object)
supr java.util.EventObject
hfds connectionHandle,exception

CLSS public abstract interface jakarta.resource.spi.ConnectionEventListener
intf java.util.EventListener
meth public abstract void connectionClosed(jakarta.resource.spi.ConnectionEvent)
meth public abstract void connectionErrorOccurred(jakarta.resource.spi.ConnectionEvent)
meth public abstract void localTransactionCommitted(jakarta.resource.spi.ConnectionEvent)
meth public abstract void localTransactionRolledback(jakarta.resource.spi.ConnectionEvent)
meth public abstract void localTransactionStarted(jakarta.resource.spi.ConnectionEvent)

CLSS public abstract interface jakarta.resource.spi.ConnectionManager
intf java.io.Serializable
meth public abstract java.lang.Object allocateConnection(jakarta.resource.spi.ManagedConnectionFactory,jakarta.resource.spi.ConnectionRequestInfo) throws jakarta.resource.ResourceException

CLSS public abstract interface jakarta.resource.spi.ConnectionRequestInfo
meth public abstract boolean equals(java.lang.Object)
meth public abstract int hashCode()

CLSS public abstract interface !annotation jakarta.resource.spi.Connector
 anno 0 java.lang.annotation.Documented()
 anno 0 java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy value=RUNTIME)
 anno 0 java.lang.annotation.Target(java.lang.annotation.ElementType[] value=[TYPE])
intf java.lang.annotation.Annotation
meth public abstract !hasdefault boolean licenseRequired() value= false
meth public abstract !hasdefault boolean reauthenticationSupport() value= false
meth public abstract !hasdefault jakarta.resource.spi.AuthenticationMechanism[] authMechanisms() value= []
meth public abstract !hasdefault jakarta.resource.spi.SecurityPermission[] securityPermissions() value= []
meth public abstract !hasdefault jakarta.resource.spi.TransactionSupport$TransactionSupportLevel transactionSupport() value= NoTransaction
meth public abstract !hasdefault java.lang.Class<? extends jakarta.resource.spi.work.WorkContext>[] requiredWorkContexts() value= []
meth public abstract !hasdefault java.lang.String eisType() value= ""
meth public abstract !hasdefault java.lang.String vendorName() value= ""
meth public abstract !hasdefault java.lang.String version() value= ""
meth public abstract !hasdefault java.lang.String[] description() value= []
meth public abstract !hasdefault java.lang.String[] displayName() value= []
meth public abstract !hasdefault java.lang.String[] largeIcon() value= []
meth public abstract !hasdefault java.lang.String[] licenseDescription() value= []
meth public abstract !hasdefault java.lang.String[] smallIcon() value= []

CLSS public abstract interface jakarta.resource.spi.DissociatableManagedConnection
meth public abstract void dissociateConnections() throws jakarta.resource.ResourceException

CLSS public jakarta.resource.spi.EISSystemException
cons public <init>()
cons public <init>(java.lang.String)
cons public <init>(java.lang.String,java.lang.String)
cons public <init>(java.lang.String,java.lang.Throwable)
cons public <init>(java.lang.Throwable)
supr jakarta.resource.ResourceException

CLSS public jakarta.resource.spi.IllegalStateException
cons public <init>()
cons public <init>(java.lang.String)
cons public <init>(java.lang.String,java.lang.String)
cons public <init>(java.lang.String,java.lang.Throwable)
cons public <init>(java.lang.Throwable)
supr jakarta.resource.ResourceException

CLSS public jakarta.resource.spi.InvalidPropertyException
cons public <init>()
cons public <init>(java.lang.String)
cons public <init>(java.lang.String,java.lang.String)
cons public <init>(java.lang.String,java.lang.Throwable)
cons public <init>(java.lang.Throwable)
meth public java.beans.PropertyDescriptor[] getInvalidPropertyDescriptors()
meth public void setInvalidPropertyDescriptors(java.beans.PropertyDescriptor[])
supr jakarta.resource.ResourceException
hfds invalidProperties

CLSS public abstract interface jakarta.resource.spi.LazyAssociatableConnectionManager
meth public abstract void associateConnection(java.lang.Object,jakarta.resource.spi.ManagedConnectionFactory,jakarta.resource.spi.ConnectionRequestInfo) throws jakarta.resource.ResourceException
meth public abstract void inactiveConnectionClosed(java.lang.Object,jakarta.resource.spi.ManagedConnectionFactory)

CLSS public abstract interface jakarta.resource.spi.LazyEnlistableConnectionManager
meth public abstract void lazyEnlist(jakarta.resource.spi.ManagedConnection) throws jakarta.resource.ResourceException

CLSS public abstract interface jakarta.resource.spi.LazyEnlistableManagedConnection

CLSS public abstract interface jakarta.resource.spi.LocalTransaction
meth public abstract void begin() throws jakarta.resource.ResourceException
meth public abstract void commit() throws jakarta.resource.ResourceException
meth public abstract void rollback() throws jakarta.resource.ResourceException

CLSS public jakarta.resource.spi.LocalTransactionException
cons public <init>()
cons public <init>(java.lang.String)
cons public <init>(java.lang.String,java.lang.String)
cons public <init>(java.lang.String,java.lang.Throwable)
cons public <init>(java.lang.Throwable)
supr jakarta.resource.ResourceException

CLSS public abstract interface jakarta.resource.spi.ManagedConnection
meth public abstract jakarta.resource.spi.LocalTransaction getLocalTransaction() throws jakarta.resource.ResourceException
meth public abstract jakarta.resource.spi.ManagedConnectionMetaData getMetaData() throws jakarta.resource.ResourceException
meth public abstract java.io.PrintWriter getLogWriter() throws jakarta.resource.ResourceException
meth public abstract java.lang.Object getConnection(javax.security.auth.Subject,jakarta.resource.spi.ConnectionRequestInfo) throws jakarta.resource.ResourceException
meth public abstract javax.transaction.xa.XAResource getXAResource() throws jakarta.resource.ResourceException
meth public abstract void addConnectionEventListener(jakarta.resource.spi.ConnectionEventListener)
meth public abstract void associateConnection(java.lang.Object) throws jakarta.resource.ResourceException
meth public abstract void cleanup() throws jakarta.resource.ResourceException
meth public abstract void destroy() throws jakarta.resource.ResourceException
meth public abstract void removeConnectionEventListener(jakarta.resource.spi.ConnectionEventListener)
meth public abstract void setLogWriter(java.io.PrintWriter) throws jakarta.resource.ResourceException

CLSS public abstract interface jakarta.resource.spi.ManagedConnectionFactory
intf java.io.Serializable
meth public abstract boolean equals(java.lang.Object)
meth public abstract int hashCode()
meth public abstract jakarta.resource.spi.ManagedConnection createManagedConnection(javax.security.auth.Subject,jakarta.resource.spi.ConnectionRequestInfo) throws jakarta.resource.ResourceException
meth public abstract jakarta.resource.spi.ManagedConnection matchManagedConnections(java.util.Set,javax.security.auth.Subject,jakarta.resource.spi.ConnectionRequestInfo) throws jakarta.resource.ResourceException
meth public abstract java.io.PrintWriter getLogWriter() throws jakarta.resource.ResourceException
meth public abstract java.lang.Object createConnectionFactory() throws jakarta.resource.ResourceException
meth public abstract java.lang.Object createConnectionFactory(jakarta.resource.spi.ConnectionManager) throws jakarta.resource.ResourceException
meth public abstract void setLogWriter(java.io.PrintWriter) throws jakarta.resource.ResourceException

CLSS public abstract interface jakarta.resource.spi.ManagedConnectionMetaData
meth public abstract int getMaxConnections() throws jakarta.resource.ResourceException
meth public abstract java.lang.String getEISProductName() throws jakarta.resource.ResourceException
meth public abstract java.lang.String getEISProductVersion() throws jakarta.resource.ResourceException
meth public abstract java.lang.String getUserName() throws jakarta.resource.ResourceException

CLSS public abstract interface jakarta.resource.spi.ResourceAdapter
meth public abstract javax.transaction.xa.XAResource[] getXAResources(jakarta.resource.spi.ActivationSpec[]) throws jakarta.resource.ResourceException
meth public abstract void endpointActivation(jakarta.resource.spi.endpoint.MessageEndpointFactory,jakarta.resource.spi.ActivationSpec) throws jakarta.resource.ResourceException
meth public abstract void endpointDeactivation(jakarta.resource.spi.endpoint.MessageEndpointFactory,jakarta.resource.spi.ActivationSpec)
meth public abstract void start(jakarta.resource.spi.BootstrapContext) throws jakarta.resource.spi.ResourceAdapterInternalException
meth public abstract void stop()

CLSS public abstract interface jakarta.resource.spi.ResourceAdapterAssociation
meth public abstract jakarta.resource.spi.ResourceAdapter getResourceAdapter()
meth public abstract void setResourceAdapter(jakarta.resource.spi.ResourceAdapter) throws jakarta.resource.ResourceException

CLSS public jakarta.resource.spi.ResourceAdapterInternalException
cons public <init>()
cons public <init>(java.lang.String)
cons public <init>(java.lang.String,java.lang.String)
cons public <init>(java.lang.String,java.lang.Throwable)
cons public <init>(java.lang.Throwable)
supr jakarta.resource.ResourceException

CLSS public jakarta.resource.spi.ResourceAllocationException
cons public <init>()
cons public <init>(java.lang.String)
cons public <init>(java.lang.String,java.lang.String)
cons public <init>(java.lang.String,java.lang.Throwable)
cons public <init>(java.lang.Throwable)
supr jakarta.resource.ResourceException

CLSS public abstract interface jakarta.resource.spi.RetryableException
intf java.io.Serializable

CLSS public jakarta.resource.spi.RetryableUnavailableException
cons public <init>()
cons public <init>(java.lang.String)
cons public <init>(java.lang.String,java.lang.String)
cons public <init>(java.lang.String,java.lang.Throwable)
cons public <init>(java.lang.Throwable)
intf jakarta.resource.spi.RetryableException
supr jakarta.resource.spi.UnavailableException
hfds serialVersionUID

CLSS public jakarta.resource.spi.SecurityException
cons public <init>()
cons public <init>(java.lang.String)
cons public <init>(java.lang.String,java.lang.String)
cons public <init>(java.lang.String,java.lang.Throwable)
cons public <init>(java.lang.Throwable)
supr jakarta.resource.ResourceException

CLSS public abstract interface !annotation jakarta.resource.spi.SecurityPermission
 anno 0 java.lang.annotation.Documented()
 anno 0 java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy value=RUNTIME)
 anno 0 java.lang.annotation.Target(java.lang.annotation.ElementType[] value=[])
intf java.lang.annotation.Annotation
meth public abstract !hasdefault java.lang.String permissionSpec() value= ""
meth public abstract !hasdefault java.lang.String[] description() value= []

CLSS public jakarta.resource.spi.SharingViolationException
cons public <init>()
cons public <init>(java.lang.String)
cons public <init>(java.lang.String,java.lang.String)
cons public <init>(java.lang.String,java.lang.Throwable)
cons public <init>(java.lang.Throwable)
supr jakarta.resource.ResourceException

CLSS public abstract interface jakarta.resource.spi.TransactionSupport
innr public final static !enum TransactionSupportLevel
intf java.io.Serializable
meth public abstract jakarta.resource.spi.TransactionSupport$TransactionSupportLevel getTransactionSupport()

CLSS public final static !enum jakarta.resource.spi.TransactionSupport$TransactionSupportLevel
 outer jakarta.resource.spi.TransactionSupport
fld public final static jakarta.resource.spi.TransactionSupport$TransactionSupportLevel LocalTransaction
fld public final static jakarta.resource.spi.TransactionSupport$TransactionSupportLevel NoTransaction
fld public final static jakarta.resource.spi.TransactionSupport$TransactionSupportLevel XATransaction
meth public static jakarta.resource.spi.TransactionSupport$TransactionSupportLevel valueOf(java.lang.String)
meth public static jakarta.resource.spi.TransactionSupport$TransactionSupportLevel[] values()
supr java.lang.Enum<jakarta.resource.spi.TransactionSupport$TransactionSupportLevel>

CLSS public jakarta.resource.spi.UnavailableException
cons public <init>()
cons public <init>(java.lang.String)
cons public <init>(java.lang.String,java.lang.String)
cons public <init>(java.lang.String,java.lang.Throwable)
cons public <init>(java.lang.Throwable)
supr jakarta.resource.ResourceException

CLSS public abstract interface jakarta.resource.spi.ValidatingManagedConnectionFactory
meth public abstract java.util.Set getInvalidConnections(java.util.Set) throws jakarta.resource.ResourceException

CLSS public abstract interface jakarta.resource.spi.XATerminator
meth public abstract int prepare(javax.transaction.xa.Xid) throws javax.transaction.xa.XAException
meth public abstract javax.transaction.xa.Xid[] recover(int) throws javax.transaction.xa.XAException
meth public abstract void commit(javax.transaction.xa.Xid,boolean) throws javax.transaction.xa.XAException
meth public abstract void forget(javax.transaction.xa.Xid) throws javax.transaction.xa.XAException
meth public abstract void rollback(javax.transaction.xa.Xid) throws javax.transaction.xa.XAException

CLSS public abstract interface jakarta.resource.spi.endpoint.MessageEndpoint
meth public abstract void afterDelivery() throws jakarta.resource.ResourceException
meth public abstract void beforeDelivery(java.lang.reflect.Method) throws jakarta.resource.ResourceException,java.lang.NoSuchMethodException
meth public abstract void release()

CLSS public abstract interface jakarta.resource.spi.endpoint.MessageEndpointFactory
meth public abstract boolean isDeliveryTransacted(java.lang.reflect.Method) throws java.lang.NoSuchMethodException
meth public abstract jakarta.resource.spi.endpoint.MessageEndpoint createEndpoint(javax.transaction.xa.XAResource) throws jakarta.resource.spi.UnavailableException
meth public abstract jakarta.resource.spi.endpoint.MessageEndpoint createEndpoint(javax.transaction.xa.XAResource,long) throws jakarta.resource.spi.UnavailableException
meth public abstract java.lang.Class<?> getEndpointClass()
meth public abstract java.lang.String getActivationName()

CLSS public abstract interface jakarta.resource.spi.security.GenericCredential
meth public abstract boolean equals(java.lang.Object)
meth public abstract byte[] getCredentialData() throws jakarta.resource.spi.SecurityException
meth public abstract int hashCode()
meth public abstract java.lang.String getMechType()
meth public abstract java.lang.String getName()

CLSS public final jakarta.resource.spi.security.PasswordCredential
cons public <init>(java.lang.String,char[])
intf java.io.Serializable
meth public boolean equals(java.lang.Object)
meth public char[] getPassword()
meth public int hashCode()
meth public jakarta.resource.spi.ManagedConnectionFactory getManagedConnectionFactory()
meth public java.lang.String getUserName()
meth public void setManagedConnectionFactory(jakarta.resource.spi.ManagedConnectionFactory)
supr java.lang.Object
hfds mcf,password,userName

CLSS public abstract interface jakarta.resource.spi.work.DistributableWork
intf jakarta.resource.spi.work.Work
intf java.io.Serializable

CLSS public abstract interface jakarta.resource.spi.work.DistributableWorkManager
intf jakarta.resource.spi.work.WorkManager

CLSS public jakarta.resource.spi.work.ExecutionContext
cons public <init>()
meth public javax.transaction.xa.Xid getXid()
meth public long getTransactionTimeout()
meth public void setTransactionTimeout(long) throws jakarta.resource.NotSupportedException
meth public void setXid(javax.transaction.xa.Xid)
supr java.lang.Object
hfds transactionTimeout,xid

CLSS public jakarta.resource.spi.work.HintsContext
cons public <init>()
fld protected java.lang.String description
fld protected java.lang.String name
fld public final static java.lang.String LONGRUNNING_HINT = "javax.resource.LongRunning"
fld public final static java.lang.String NAME_HINT = "javax.resource.Name"
intf jakarta.resource.spi.work.WorkContext
meth public java.lang.String getDescription()
meth public java.lang.String getName()
meth public java.util.Map<java.lang.String,java.io.Serializable> getHints()
meth public void setDescription(java.lang.String)
meth public void setHint(java.lang.String,java.io.Serializable)
meth public void setName(java.lang.String)
supr java.lang.Object
hfds hints,serialVersionUID

CLSS public jakarta.resource.spi.work.RetryableWorkRejectedException
cons public <init>()
cons public <init>(java.lang.String)
cons public <init>(java.lang.String,java.lang.String)
cons public <init>(java.lang.String,java.lang.Throwable)
cons public <init>(java.lang.Throwable)
intf jakarta.resource.spi.RetryableException
supr jakarta.resource.spi.work.WorkRejectedException
hfds serialVersionUID

CLSS public abstract jakarta.resource.spi.work.SecurityContext
cons public <init>()
intf jakarta.resource.spi.work.WorkContext
meth public abstract void setupSecurityContext(javax.security.auth.callback.CallbackHandler,javax.security.auth.Subject,javax.security.auth.Subject)
meth public java.lang.String getDescription()
meth public java.lang.String getName()
supr java.lang.Object
hfds serialVersionUID

CLSS public jakarta.resource.spi.work.TransactionContext
cons public <init>()
intf jakarta.resource.spi.work.WorkContext
meth public java.lang.String getDescription()
meth public java.lang.String getName()
supr jakarta.resource.spi.work.ExecutionContext
hfds serialVersionUID

CLSS public abstract interface jakarta.resource.spi.work.Work
intf java.lang.Runnable
meth public abstract void release()

CLSS public jakarta.resource.spi.work.WorkAdapter
cons public <init>()
intf jakarta.resource.spi.work.WorkListener
meth public void workAccepted(jakarta.resource.spi.work.WorkEvent)
meth public void workCompleted(jakarta.resource.spi.work.WorkEvent)
meth public void workRejected(jakarta.resource.spi.work.WorkEvent)
meth public void workStarted(jakarta.resource.spi.work.WorkEvent)
supr java.lang.Object

CLSS public jakarta.resource.spi.work.WorkCompletedException
cons public <init>()
cons public <init>(java.lang.String)
cons public <init>(java.lang.String,java.lang.String)
cons public <init>(java.lang.String,java.lang.Throwable)
cons public <init>(java.lang.Throwable)
supr jakarta.resource.spi.work.WorkException

CLSS public abstract interface jakarta.resource.spi.work.WorkContext
intf java.io.Serializable
meth public abstract java.lang.String getDescription()
meth public abstract java.lang.String getName()

CLSS public jakarta.resource.spi.work.WorkContextErrorCodes
cons public <init>()
fld public final static java.lang.String CONTEXT_SETUP_FAILED = "3"
fld public final static java.lang.String CONTEXT_SETUP_UNSUPPORTED = "4"
fld public final static java.lang.String DUPLICATE_CONTEXTS = "2"
fld public final static java.lang.String UNSUPPORTED_CONTEXT_TYPE = "1"
supr java.lang.Object

CLSS public abstract interface jakarta.resource.spi.work.WorkContextLifecycleListener
meth public abstract void contextSetupComplete()
meth public abstract void contextSetupFailed(java.lang.String)

CLSS public abstract interface jakarta.resource.spi.work.WorkContextProvider
intf java.io.Serializable
meth public abstract java.util.List<jakarta.resource.spi.work.WorkContext> getWorkContexts()

CLSS public jakarta.resource.spi.work.WorkEvent
cons public <init>(java.lang.Object,int,jakarta.resource.spi.work.Work,jakarta.resource.spi.work.WorkException)
cons public <init>(java.lang.Object,int,jakarta.resource.spi.work.Work,jakarta.resource.spi.work.WorkException,long)
fld public final static int WORK_ACCEPTED = 1
fld public final static int WORK_COMPLETED = 4
fld public final static int WORK_REJECTED = 2
fld public final static int WORK_STARTED = 3
meth public int getType()
meth public jakarta.resource.spi.work.Work getWork()
meth public jakarta.resource.spi.work.WorkException getException()
meth public long getStartDuration()
supr java.util.EventObject
hfds exc,startDuration,type,work

CLSS public jakarta.resource.spi.work.WorkException
cons public <init>()
cons public <init>(java.lang.String)
cons public <init>(java.lang.String,java.lang.String)
cons public <init>(java.lang.String,java.lang.Throwable)
cons public <init>(java.lang.Throwable)
fld public final static java.lang.String INTERNAL = "-1"
fld public final static java.lang.String START_TIMED_OUT = "1"
fld public final static java.lang.String TX_CONCURRENT_WORK_DISALLOWED = "2"
fld public final static java.lang.String TX_RECREATE_FAILED = "3"
fld public final static java.lang.String UNDEFINED = "0"
supr jakarta.resource.ResourceException

CLSS public abstract interface jakarta.resource.spi.work.WorkListener
intf java.util.EventListener
meth public abstract void workAccepted(jakarta.resource.spi.work.WorkEvent)
meth public abstract void workCompleted(jakarta.resource.spi.work.WorkEvent)
meth public abstract void workRejected(jakarta.resource.spi.work.WorkEvent)
meth public abstract void workStarted(jakarta.resource.spi.work.WorkEvent)

CLSS public abstract interface jakarta.resource.spi.work.WorkManager
fld public final static long IMMEDIATE = 0
fld public final static long INDEFINITE = 9223372036854775807
fld public final static long UNKNOWN = -1
meth public abstract long startWork(jakarta.resource.spi.work.Work) throws jakarta.resource.spi.work.WorkException
meth public abstract long startWork(jakarta.resource.spi.work.Work,long,jakarta.resource.spi.work.ExecutionContext,jakarta.resource.spi.work.WorkListener) throws jakarta.resource.spi.work.WorkException
meth public abstract void doWork(jakarta.resource.spi.work.Work) throws jakarta.resource.spi.work.WorkException
meth public abstract void doWork(jakarta.resource.spi.work.Work,long,jakarta.resource.spi.work.ExecutionContext,jakarta.resource.spi.work.WorkListener) throws jakarta.resource.spi.work.WorkException
meth public abstract void scheduleWork(jakarta.resource.spi.work.Work) throws jakarta.resource.spi.work.WorkException
meth public abstract void scheduleWork(jakarta.resource.spi.work.Work,long,jakarta.resource.spi.work.ExecutionContext,jakarta.resource.spi.work.WorkListener) throws jakarta.resource.spi.work.WorkException

CLSS public jakarta.resource.spi.work.WorkRejectedException
cons public <init>()
cons public <init>(java.lang.String)
cons public <init>(java.lang.String,java.lang.String)
cons public <init>(java.lang.String,java.lang.Throwable)
cons public <init>(java.lang.Throwable)
supr jakarta.resource.spi.work.WorkException

CLSS public jakarta.security.auth.message.AuthException
cons public <init>()
cons public <init>(java.lang.String)
supr javax.security.auth.login.LoginException
hfds serialVersionUID

CLSS public jakarta.security.auth.message.AuthStatus
fld public final static jakarta.security.auth.message.AuthStatus FAILURE
fld public final static jakarta.security.auth.message.AuthStatus SEND_CONTINUE
fld public final static jakarta.security.auth.message.AuthStatus SEND_FAILURE
fld public final static jakarta.security.auth.message.AuthStatus SEND_SUCCESS
fld public final static jakarta.security.auth.message.AuthStatus SUCCESS
meth public java.lang.String toString()
supr java.lang.Object
hfds value

CLSS public abstract interface jakarta.security.auth.message.ClientAuth
meth public abstract jakarta.security.auth.message.AuthStatus secureRequest(jakarta.security.auth.message.MessageInfo,javax.security.auth.Subject) throws jakarta.security.auth.message.AuthException
meth public abstract jakarta.security.auth.message.AuthStatus validateResponse(jakarta.security.auth.message.MessageInfo,javax.security.auth.Subject,javax.security.auth.Subject) throws jakarta.security.auth.message.AuthException
meth public abstract void cleanSubject(jakarta.security.auth.message.MessageInfo,javax.security.auth.Subject) throws jakarta.security.auth.message.AuthException

CLSS public abstract interface jakarta.security.auth.message.MessageInfo
meth public abstract java.lang.Object getRequestMessage()
meth public abstract java.lang.Object getResponseMessage()
meth public abstract java.util.Map getMap()
meth public abstract void setRequestMessage(java.lang.Object)
meth public abstract void setResponseMessage(java.lang.Object)

CLSS public jakarta.security.auth.message.MessagePolicy
cons public <init>(jakarta.security.auth.message.MessagePolicy$TargetPolicy[],boolean)
innr public abstract interface static ProtectionPolicy
innr public abstract interface static Target
innr public static TargetPolicy
meth public boolean isMandatory()
meth public jakarta.security.auth.message.MessagePolicy$TargetPolicy[] getTargetPolicies()
supr java.lang.Object
hfds mandatory,targetPolicies

CLSS public abstract interface static jakarta.security.auth.message.MessagePolicy$ProtectionPolicy
 outer jakarta.security.auth.message.MessagePolicy
fld public final static java.lang.String AUTHENTICATE_CONTENT = "#authenticateContent"
fld public final static java.lang.String AUTHENTICATE_RECIPIENT = "#authenticateRecipient"
fld public final static java.lang.String AUTHENTICATE_SENDER = "#authenticateSender"
meth public abstract java.lang.String getID()

CLSS public abstract interface static jakarta.security.auth.message.MessagePolicy$Target
 outer jakarta.security.auth.message.MessagePolicy
meth public abstract java.lang.Object get(jakarta.security.auth.message.MessageInfo)
meth public abstract void put(jakarta.security.auth.message.MessageInfo,java.lang.Object)
meth public abstract void remove(jakarta.security.auth.message.MessageInfo)

CLSS public static jakarta.security.auth.message.MessagePolicy$TargetPolicy
 outer jakarta.security.auth.message.MessagePolicy
cons public <init>(jakarta.security.auth.message.MessagePolicy$Target[],jakarta.security.auth.message.MessagePolicy$ProtectionPolicy)
meth public jakarta.security.auth.message.MessagePolicy$ProtectionPolicy getProtectionPolicy()
meth public jakarta.security.auth.message.MessagePolicy$Target[] getTargets()
supr java.lang.Object
hfds protectionPolicy,targets

CLSS public abstract interface jakarta.security.auth.message.ServerAuth
meth public abstract jakarta.security.auth.message.AuthStatus secureResponse(jakarta.security.auth.message.MessageInfo,javax.security.auth.Subject) throws jakarta.security.auth.message.AuthException
meth public abstract jakarta.security.auth.message.AuthStatus validateRequest(jakarta.security.auth.message.MessageInfo,javax.security.auth.Subject,javax.security.auth.Subject) throws jakarta.security.auth.message.AuthException
meth public abstract void cleanSubject(jakarta.security.auth.message.MessageInfo,javax.security.auth.Subject) throws jakarta.security.auth.message.AuthException

CLSS public jakarta.security.auth.message.callback.CallerPrincipalCallback
cons public <init>(javax.security.auth.Subject,java.lang.String)
cons public <init>(javax.security.auth.Subject,java.security.Principal)
intf javax.security.auth.callback.Callback
meth public java.lang.String getName()
meth public java.security.Principal getPrincipal()
meth public javax.security.auth.Subject getSubject()
supr java.lang.Object
hfds name,principal,subject

CLSS public jakarta.security.auth.message.callback.CertStoreCallback
cons public <init>()
intf javax.security.auth.callback.Callback
meth public java.security.cert.CertStore getCertStore()
meth public void setCertStore(java.security.cert.CertStore)
supr java.lang.Object
hfds certStore

CLSS public jakarta.security.auth.message.callback.GroupPrincipalCallback
cons public <init>(javax.security.auth.Subject,java.lang.String[])
intf javax.security.auth.callback.Callback
meth public java.lang.String[] getGroups()
meth public javax.security.auth.Subject getSubject()
supr java.lang.Object
hfds groups,subject

CLSS public jakarta.security.auth.message.callback.PasswordValidationCallback
cons public <init>(javax.security.auth.Subject,java.lang.String,char[])
intf javax.security.auth.callback.Callback
meth public boolean getResult()
meth public char[] getPassword()
meth public java.lang.String getUsername()
meth public javax.security.auth.Subject getSubject()
meth public void clearPassword()
meth public void setResult(boolean)
supr java.lang.Object
hfds password,result,subject,username

CLSS public jakarta.security.auth.message.callback.PrivateKeyCallback
cons public <init>(jakarta.security.auth.message.callback.PrivateKeyCallback$Request)
innr public abstract interface static Request
innr public static AliasRequest
innr public static DigestRequest
innr public static IssuerSerialNumRequest
innr public static SubjectKeyIDRequest
intf javax.security.auth.callback.Callback
meth public jakarta.security.auth.message.callback.PrivateKeyCallback$Request getRequest()
meth public java.security.PrivateKey getKey()
meth public java.security.cert.Certificate[] getChain()
meth public void setKey(java.security.PrivateKey,java.security.cert.Certificate[])
supr java.lang.Object
hfds chain,key,request

CLSS public static jakarta.security.auth.message.callback.PrivateKeyCallback$AliasRequest
 outer jakarta.security.auth.message.callback.PrivateKeyCallback
cons public <init>(java.lang.String)
intf jakarta.security.auth.message.callback.PrivateKeyCallback$Request
meth public java.lang.String getAlias()
supr java.lang.Object
hfds alias

CLSS public static jakarta.security.auth.message.callback.PrivateKeyCallback$DigestRequest
 outer jakarta.security.auth.message.callback.PrivateKeyCallback
cons public <init>(byte[],java.lang.String)
intf jakarta.security.auth.message.callback.PrivateKeyCallback$Request
meth public byte[] getDigest()
meth public java.lang.String getAlgorithm()
supr java.lang.Object
hfds algorithm,digest

CLSS public static jakarta.security.auth.message.callback.PrivateKeyCallback$IssuerSerialNumRequest
 outer jakarta.security.auth.message.callback.PrivateKeyCallback
cons public <init>(javax.security.auth.x500.X500Principal,java.math.BigInteger)
intf jakarta.security.auth.message.callback.PrivateKeyCallback$Request
meth public java.math.BigInteger getSerialNum()
meth public javax.security.auth.x500.X500Principal getIssuer()
supr java.lang.Object
hfds issuer,serialNum

CLSS public abstract interface static jakarta.security.auth.message.callback.PrivateKeyCallback$Request
 outer jakarta.security.auth.message.callback.PrivateKeyCallback

CLSS public static jakarta.security.auth.message.callback.PrivateKeyCallback$SubjectKeyIDRequest
 outer jakarta.security.auth.message.callback.PrivateKeyCallback
cons public <init>(byte[])
intf jakarta.security.auth.message.callback.PrivateKeyCallback$Request
meth public byte[] getSubjectKeyID()
supr java.lang.Object
hfds id

CLSS public jakarta.security.auth.message.callback.SecretKeyCallback
cons public <init>(jakarta.security.auth.message.callback.SecretKeyCallback$Request)
innr public abstract interface static Request
innr public static AliasRequest
intf javax.security.auth.callback.Callback
meth public jakarta.security.auth.message.callback.SecretKeyCallback$Request getRequest()
meth public javax.crypto.SecretKey getKey()
meth public void setKey(javax.crypto.SecretKey)
supr java.lang.Object
hfds key,request

CLSS public static jakarta.security.auth.message.callback.SecretKeyCallback$AliasRequest
 outer jakarta.security.auth.message.callback.SecretKeyCallback
cons public <init>(java.lang.String)
intf jakarta.security.auth.message.callback.SecretKeyCallback$Request
meth public java.lang.String getAlias()
supr java.lang.Object
hfds alias

CLSS public abstract interface static jakarta.security.auth.message.callback.SecretKeyCallback$Request
 outer jakarta.security.auth.message.callback.SecretKeyCallback

CLSS public jakarta.security.auth.message.callback.TrustStoreCallback
cons public <init>()
intf javax.security.auth.callback.Callback
meth public java.security.KeyStore getTrustStore()
meth public void setTrustStore(java.security.KeyStore)
supr java.lang.Object
hfds trustStore

CLSS public abstract interface jakarta.security.auth.message.config.AuthConfig
meth public abstract boolean isProtected()
meth public abstract java.lang.String getAppContext()
meth public abstract java.lang.String getAuthContextID(jakarta.security.auth.message.MessageInfo)
meth public abstract java.lang.String getMessageLayer()
meth public abstract void refresh()

CLSS public abstract jakarta.security.auth.message.config.AuthConfigFactory
cons public <init>()
fld public final static java.lang.String DEFAULT_FACTORY_SECURITY_PROPERTY = "authconfigprovider.factory"
fld public final static java.lang.String GET_FACTORY_PERMISSION_NAME = "getProperty.authconfigprovider.factory"
fld public final static java.lang.String PROVIDER_REGISTRATION_PERMISSION_NAME = "setProperty.authconfigfactory.provider"
fld public final static java.lang.String SET_FACTORY_PERMISSION_NAME = "setProperty.authconfigprovider.factory"
fld public final static java.security.SecurityPermission getFactorySecurityPermission
fld public final static java.security.SecurityPermission providerRegistrationSecurityPermission
fld public final static java.security.SecurityPermission setFactorySecurityPermission
innr public abstract interface static RegistrationContext
meth public abstract boolean removeRegistration(java.lang.String)
meth public abstract jakarta.security.auth.message.config.AuthConfigFactory$RegistrationContext getRegistrationContext(java.lang.String)
meth public abstract jakarta.security.auth.message.config.AuthConfigProvider getConfigProvider(java.lang.String,java.lang.String,jakarta.security.auth.message.config.RegistrationListener)
meth public abstract java.lang.String registerConfigProvider(jakarta.security.auth.message.config.AuthConfigProvider,java.lang.String,java.lang.String,java.lang.String)
meth public abstract java.lang.String registerConfigProvider(java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.lang.String)
meth public abstract java.lang.String[] detachListener(jakarta.security.auth.message.config.RegistrationListener,java.lang.String,java.lang.String)
meth public abstract java.lang.String[] getRegistrationIDs(jakarta.security.auth.message.config.AuthConfigProvider)
meth public abstract void refresh()
meth public static jakarta.security.auth.message.config.AuthConfigFactory getFactory()
meth public static void setFactory(jakarta.security.auth.message.config.AuthConfigFactory)
supr java.lang.Object
hfds PROVIDER_SECURITY_PROPERTY,factory

CLSS public abstract interface static jakarta.security.auth.message.config.AuthConfigFactory$RegistrationContext
 outer jakarta.security.auth.message.config.AuthConfigFactory
meth public abstract boolean isPersistent()
meth public abstract java.lang.String getAppContext()
meth public abstract java.lang.String getDescription()
meth public abstract java.lang.String getMessageLayer()

CLSS public abstract interface jakarta.security.auth.message.config.AuthConfigProvider
meth public abstract jakarta.security.auth.message.config.ClientAuthConfig getClientAuthConfig(java.lang.String,java.lang.String,javax.security.auth.callback.CallbackHandler) throws jakarta.security.auth.message.AuthException
meth public abstract jakarta.security.auth.message.config.ServerAuthConfig getServerAuthConfig(java.lang.String,java.lang.String,javax.security.auth.callback.CallbackHandler) throws jakarta.security.auth.message.AuthException
meth public abstract void refresh()

CLSS public abstract interface jakarta.security.auth.message.config.ClientAuthConfig
intf jakarta.security.auth.message.config.AuthConfig
meth public abstract jakarta.security.auth.message.config.ClientAuthContext getAuthContext(java.lang.String,javax.security.auth.Subject,java.util.Map) throws jakarta.security.auth.message.AuthException

CLSS public abstract interface jakarta.security.auth.message.config.ClientAuthContext
intf jakarta.security.auth.message.ClientAuth

CLSS public abstract interface jakarta.security.auth.message.config.RegistrationListener
meth public abstract void notify(java.lang.String,java.lang.String)

CLSS public abstract interface jakarta.security.auth.message.config.ServerAuthConfig
intf jakarta.security.auth.message.config.AuthConfig
meth public abstract jakarta.security.auth.message.config.ServerAuthContext getAuthContext(java.lang.String,javax.security.auth.Subject,java.util.Map) throws jakarta.security.auth.message.AuthException

CLSS public abstract interface jakarta.security.auth.message.config.ServerAuthContext
intf jakarta.security.auth.message.ServerAuth

CLSS public abstract interface jakarta.security.auth.message.module.ClientAuthModule
intf jakarta.security.auth.message.ClientAuth
meth public abstract java.lang.Class[] getSupportedMessageTypes()
meth public abstract void initialize(jakarta.security.auth.message.MessagePolicy,jakarta.security.auth.message.MessagePolicy,javax.security.auth.callback.CallbackHandler,java.util.Map) throws jakarta.security.auth.message.AuthException

CLSS public abstract interface jakarta.security.auth.message.module.ServerAuthModule
intf jakarta.security.auth.message.ServerAuth
meth public abstract java.lang.Class[] getSupportedMessageTypes()
meth public abstract void initialize(jakarta.security.auth.message.MessagePolicy,jakarta.security.auth.message.MessagePolicy,javax.security.auth.callback.CallbackHandler,java.util.Map) throws jakarta.security.auth.message.AuthException

CLSS public jakarta.security.enterprise.AuthenticationException
cons public <init>()
cons public <init>(java.lang.String)
cons public <init>(java.lang.String,java.lang.Throwable)
cons public <init>(java.lang.Throwable)
supr java.security.GeneralSecurityException
hfds serialVersionUID

CLSS public final !enum jakarta.security.enterprise.AuthenticationStatus
fld public final static jakarta.security.enterprise.AuthenticationStatus NOT_DONE
fld public final static jakarta.security.enterprise.AuthenticationStatus SEND_CONTINUE
fld public final static jakarta.security.enterprise.AuthenticationStatus SEND_FAILURE
fld public final static jakarta.security.enterprise.AuthenticationStatus SUCCESS
meth public static jakarta.security.enterprise.AuthenticationStatus valueOf(java.lang.String)
meth public static jakarta.security.enterprise.AuthenticationStatus[] values()
supr java.lang.Enum<jakarta.security.enterprise.AuthenticationStatus>

CLSS public jakarta.security.enterprise.CallerPrincipal
cons public <init>(java.lang.String)
intf java.security.Principal
meth public java.lang.String getName()
supr java.lang.Object
hfds name,serialVersionUID

CLSS public abstract interface jakarta.security.enterprise.SecurityContext
meth public abstract !varargs boolean hasAccessToWebResource(java.lang.String,java.lang.String[])
meth public abstract <%0 extends java.security.Principal> java.util.Set<{%%0}> getPrincipalsByType(java.lang.Class<{%%0}>)
meth public abstract boolean isCallerInRole(java.lang.String)
meth public abstract jakarta.security.enterprise.AuthenticationStatus authenticate(jakarta.servlet.http.HttpServletRequest,jakarta.servlet.http.HttpServletResponse,jakarta.security.enterprise.authentication.mechanism.http.AuthenticationParameters)
meth public abstract java.security.Principal getCallerPrincipal()

CLSS public jakarta.security.enterprise.authentication.mechanism.http.AuthenticationParameters
cons public <init>()
meth public boolean isNewAuthentication()
meth public boolean isRememberMe()
meth public jakarta.security.enterprise.authentication.mechanism.http.AuthenticationParameters credential(jakarta.security.enterprise.credential.Credential)
meth public jakarta.security.enterprise.authentication.mechanism.http.AuthenticationParameters newAuthentication(boolean)
meth public jakarta.security.enterprise.authentication.mechanism.http.AuthenticationParameters rememberMe(boolean)
meth public jakarta.security.enterprise.credential.Credential getCredential()
meth public static jakarta.security.enterprise.authentication.mechanism.http.AuthenticationParameters withParams()
meth public void setCredential(jakarta.security.enterprise.credential.Credential)
meth public void setNewAuthentication(boolean)
meth public void setRememberMe(boolean)
supr java.lang.Object
hfds credential,newAuthentication,rememberMe

CLSS public abstract interface !annotation jakarta.security.enterprise.authentication.mechanism.http.AutoApplySession
 anno 0 jakarta.interceptor.InterceptorBinding()
 anno 0 java.lang.annotation.Inherited()
 anno 0 java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy value=RUNTIME)
 anno 0 java.lang.annotation.Target(java.lang.annotation.ElementType[] value=[TYPE])
intf java.lang.annotation.Annotation

CLSS public abstract interface !annotation jakarta.security.enterprise.authentication.mechanism.http.BasicAuthenticationMechanismDefinition
 anno 0 java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy value=RUNTIME)
 anno 0 java.lang.annotation.Target(java.lang.annotation.ElementType[] value=[TYPE])
intf java.lang.annotation.Annotation
meth public abstract !hasdefault java.lang.String realmName() value= ""

CLSS public abstract interface !annotation jakarta.security.enterprise.authentication.mechanism.http.CustomFormAuthenticationMechanismDefinition
 anno 0 java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy value=RUNTIME)
 anno 0 java.lang.annotation.Target(java.lang.annotation.ElementType[] value=[TYPE])
intf java.lang.annotation.Annotation
meth public abstract jakarta.security.enterprise.authentication.mechanism.http.LoginToContinue loginToContinue()

CLSS public abstract interface !annotation jakarta.security.enterprise.authentication.mechanism.http.FormAuthenticationMechanismDefinition
 anno 0 java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy value=RUNTIME)
 anno 0 java.lang.annotation.Target(java.lang.annotation.ElementType[] value=[TYPE])
intf java.lang.annotation.Annotation
meth public abstract jakarta.security.enterprise.authentication.mechanism.http.LoginToContinue loginToContinue()

CLSS public abstract interface jakarta.security.enterprise.authentication.mechanism.http.HttpAuthenticationMechanism
meth public abstract jakarta.security.enterprise.AuthenticationStatus validateRequest(jakarta.servlet.http.HttpServletRequest,jakarta.servlet.http.HttpServletResponse,jakarta.security.enterprise.authentication.mechanism.http.HttpMessageContext) throws jakarta.security.enterprise.AuthenticationException
meth public jakarta.security.enterprise.AuthenticationStatus secureResponse(jakarta.servlet.http.HttpServletRequest,jakarta.servlet.http.HttpServletResponse,jakarta.security.enterprise.authentication.mechanism.http.HttpMessageContext) throws jakarta.security.enterprise.AuthenticationException
meth public void cleanSubject(jakarta.servlet.http.HttpServletRequest,jakarta.servlet.http.HttpServletResponse,jakarta.security.enterprise.authentication.mechanism.http.HttpMessageContext)

CLSS public abstract interface jakarta.security.enterprise.authentication.mechanism.http.HttpMessageContext
meth public abstract boolean isAuthenticationRequest()
meth public abstract boolean isProtected()
meth public abstract boolean isRegisterSession()
meth public abstract jakarta.security.auth.message.MessageInfo getMessageInfo()
meth public abstract jakarta.security.enterprise.AuthenticationStatus doNothing()
meth public abstract jakarta.security.enterprise.AuthenticationStatus forward(java.lang.String)
meth public abstract jakarta.security.enterprise.AuthenticationStatus notifyContainerAboutLogin(jakarta.security.enterprise.identitystore.CredentialValidationResult)
meth public abstract jakarta.security.enterprise.AuthenticationStatus notifyContainerAboutLogin(java.lang.String,java.util.Set<java.lang.String>)
meth public abstract jakarta.security.enterprise.AuthenticationStatus notifyContainerAboutLogin(java.security.Principal,java.util.Set<java.lang.String>)
meth public abstract jakarta.security.enterprise.AuthenticationStatus redirect(java.lang.String)
meth public abstract jakarta.security.enterprise.AuthenticationStatus responseNotFound()
meth public abstract jakarta.security.enterprise.AuthenticationStatus responseUnauthorized()
meth public abstract jakarta.security.enterprise.authentication.mechanism.http.AuthenticationParameters getAuthParameters()
meth public abstract jakarta.security.enterprise.authentication.mechanism.http.HttpMessageContext withRequest(jakarta.servlet.http.HttpServletRequest)
meth public abstract jakarta.servlet.http.HttpServletRequest getRequest()
meth public abstract jakarta.servlet.http.HttpServletResponse getResponse()
meth public abstract java.security.Principal getCallerPrincipal()
meth public abstract java.util.Set<java.lang.String> getGroups()
meth public abstract javax.security.auth.Subject getClientSubject()
meth public abstract javax.security.auth.callback.CallbackHandler getHandler()
meth public abstract void cleanClientSubject()
meth public abstract void setRegisterSession(java.lang.String,java.util.Set<java.lang.String>)
meth public abstract void setRequest(jakarta.servlet.http.HttpServletRequest)
meth public abstract void setResponse(jakarta.servlet.http.HttpServletResponse)

CLSS public jakarta.security.enterprise.authentication.mechanism.http.HttpMessageContextWrapper
cons public <init>(jakarta.security.enterprise.authentication.mechanism.http.HttpMessageContext)
intf jakarta.security.enterprise.authentication.mechanism.http.HttpMessageContext
meth public boolean isAuthenticationRequest()
meth public boolean isProtected()
meth public boolean isRegisterSession()
meth public jakarta.security.auth.message.MessageInfo getMessageInfo()
meth public jakarta.security.enterprise.AuthenticationStatus doNothing()
meth public jakarta.security.enterprise.AuthenticationStatus forward(java.lang.String)
meth public jakarta.security.enterprise.AuthenticationStatus notifyContainerAboutLogin(jakarta.security.enterprise.identitystore.CredentialValidationResult)
meth public jakarta.security.enterprise.AuthenticationStatus notifyContainerAboutLogin(java.lang.String,java.util.Set<java.lang.String>)
meth public jakarta.security.enterprise.AuthenticationStatus notifyContainerAboutLogin(java.security.Principal,java.util.Set<java.lang.String>)
meth public jakarta.security.enterprise.AuthenticationStatus redirect(java.lang.String)
meth public jakarta.security.enterprise.AuthenticationStatus responseNotFound()
meth public jakarta.security.enterprise.AuthenticationStatus responseUnauthorized()
meth public jakarta.security.enterprise.authentication.mechanism.http.AuthenticationParameters getAuthParameters()
meth public jakarta.security.enterprise.authentication.mechanism.http.HttpMessageContext getWrapped()
meth public jakarta.security.enterprise.authentication.mechanism.http.HttpMessageContext withRequest(jakarta.servlet.http.HttpServletRequest)
meth public jakarta.servlet.http.HttpServletRequest getRequest()
meth public jakarta.servlet.http.HttpServletResponse getResponse()
meth public java.security.Principal getCallerPrincipal()
meth public java.util.Set<java.lang.String> getGroups()
meth public javax.security.auth.Subject getClientSubject()
meth public javax.security.auth.callback.CallbackHandler getHandler()
meth public void cleanClientSubject()
meth public void setRegisterSession(java.lang.String,java.util.Set<java.lang.String>)
meth public void setRequest(jakarta.servlet.http.HttpServletRequest)
meth public void setResponse(jakarta.servlet.http.HttpServletResponse)
supr java.lang.Object
hfds httpMessageContext

CLSS public abstract interface !annotation jakarta.security.enterprise.authentication.mechanism.http.LoginToContinue
 anno 0 jakarta.interceptor.InterceptorBinding()
 anno 0 java.lang.annotation.Inherited()
 anno 0 java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy value=RUNTIME)
 anno 0 java.lang.annotation.Target(java.lang.annotation.ElementType[] value=[TYPE])
intf java.lang.annotation.Annotation
meth public abstract !hasdefault boolean useForwardToLogin() value= true
meth public abstract !hasdefault java.lang.String errorPage() value= "/login-error"
meth public abstract !hasdefault java.lang.String loginPage() value= "/login"
meth public abstract !hasdefault java.lang.String useForwardToLoginExpression() value= ""

CLSS public abstract interface !annotation jakarta.security.enterprise.authentication.mechanism.http.RememberMe
 anno 0 jakarta.interceptor.InterceptorBinding()
 anno 0 java.lang.annotation.Inherited()
 anno 0 java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy value=RUNTIME)
 anno 0 java.lang.annotation.Target(java.lang.annotation.ElementType[] value=[TYPE])
intf java.lang.annotation.Annotation
meth public abstract !hasdefault boolean cookieHttpOnly() value= true
meth public abstract !hasdefault boolean cookieSecureOnly() value= true
meth public abstract !hasdefault boolean isRememberMe() value= true
meth public abstract !hasdefault int cookieMaxAgeSeconds() value= 86400
meth public abstract !hasdefault java.lang.String cookieHttpOnlyExpression() value= ""
meth public abstract !hasdefault java.lang.String cookieMaxAgeSecondsExpression() value= ""
meth public abstract !hasdefault java.lang.String cookieName() value= "JREMEMBERMEID"
meth public abstract !hasdefault java.lang.String cookieSecureOnlyExpression() value= ""
meth public abstract !hasdefault java.lang.String isRememberMeExpression() value= ""

CLSS public abstract jakarta.security.enterprise.credential.AbstractClearableCredential
cons public <init>()
intf jakarta.security.enterprise.credential.Credential
meth protected abstract void clearCredential()
meth protected final void setCleared()
meth public final boolean isCleared()
meth public final void clear()
supr java.lang.Object
hfds cleared

CLSS public jakarta.security.enterprise.credential.BasicAuthenticationCredential
cons public <init>(java.lang.String)
supr jakarta.security.enterprise.credential.UsernamePasswordCredential

CLSS public jakarta.security.enterprise.credential.CallerOnlyCredential
cons public <init>(java.lang.String)
intf jakarta.security.enterprise.credential.Credential
meth public java.lang.String getCaller()
supr java.lang.Object
hfds caller

CLSS public abstract interface jakarta.security.enterprise.credential.Credential
meth public boolean isCleared()
meth public boolean isValid()
meth public void clear()

CLSS public jakarta.security.enterprise.credential.Password
cons public <init>(char[])
cons public <init>(java.lang.String)
meth public boolean compareTo(java.lang.String)
meth public char[] getValue()
meth public void clear()
supr java.lang.Object
hfds EMPTY_VALUE,value

CLSS public jakarta.security.enterprise.credential.RememberMeCredential
cons public <init>(java.lang.String)
intf jakarta.security.enterprise.credential.Credential
meth public java.lang.String getToken()
supr java.lang.Object
hfds token

CLSS public jakarta.security.enterprise.credential.UsernamePasswordCredential
cons public <init>(java.lang.String,jakarta.security.enterprise.credential.Password)
cons public <init>(java.lang.String,java.lang.String)
meth public boolean compareTo(java.lang.String,java.lang.String)
meth public jakarta.security.enterprise.credential.Password getPassword()
meth public java.lang.String getCaller()
meth public java.lang.String getPasswordAsString()
meth public void clearCredential()
supr jakarta.security.enterprise.credential.AbstractClearableCredential
hfds caller,password

CLSS public jakarta.security.enterprise.identitystore.CredentialValidationResult
cons public <init>(jakarta.security.enterprise.CallerPrincipal)
cons public <init>(jakarta.security.enterprise.CallerPrincipal,java.util.Set<java.lang.String>)
cons public <init>(java.lang.String)
cons public <init>(java.lang.String,jakarta.security.enterprise.CallerPrincipal,java.lang.String,java.lang.String,java.util.Set<java.lang.String>)
cons public <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.Set<java.lang.String>)
cons public <init>(java.lang.String,java.util.Set<java.lang.String>)
fld public final static jakarta.security.enterprise.identitystore.CredentialValidationResult INVALID_RESULT
fld public final static jakarta.security.enterprise.identitystore.CredentialValidationResult NOT_VALIDATED_RESULT
innr public final static !enum Status
meth public jakarta.security.enterprise.CallerPrincipal getCallerPrincipal()
meth public jakarta.security.enterprise.identitystore.CredentialValidationResult$Status getStatus()
meth public java.lang.String getCallerDn()
meth public java.lang.String getCallerUniqueId()
meth public java.lang.String getIdentityStoreId()
meth public java.util.Set<java.lang.String> getCallerGroups()
supr java.lang.Object
hfds callerDn,callerPrincipal,callerUniqueId,groups,status,storeId

CLSS public final static !enum jakarta.security.enterprise.identitystore.CredentialValidationResult$Status
 outer jakarta.security.enterprise.identitystore.CredentialValidationResult
fld public final static jakarta.security.enterprise.identitystore.CredentialValidationResult$Status INVALID
fld public final static jakarta.security.enterprise.identitystore.CredentialValidationResult$Status NOT_VALIDATED
fld public final static jakarta.security.enterprise.identitystore.CredentialValidationResult$Status VALID
meth public static jakarta.security.enterprise.identitystore.CredentialValidationResult$Status valueOf(java.lang.String)
meth public static jakarta.security.enterprise.identitystore.CredentialValidationResult$Status[] values()
supr java.lang.Enum<jakarta.security.enterprise.identitystore.CredentialValidationResult$Status>

CLSS public abstract interface !annotation jakarta.security.enterprise.identitystore.DatabaseIdentityStoreDefinition
 anno 0 java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy value=RUNTIME)
 anno 0 java.lang.annotation.Target(java.lang.annotation.ElementType[] value=[TYPE])
intf java.lang.annotation.Annotation
meth public abstract !hasdefault int priority() value= 70
meth public abstract !hasdefault jakarta.security.enterprise.identitystore.IdentityStore$ValidationType[] useFor() value= [VALIDATE,PROVIDE_GROUPS]
meth public abstract !hasdefault java.lang.Class<? extends jakarta.security.enterprise.identitystore.PasswordHash> hashAlgorithm() value= class jakarta.security.enterprise.identitystore.Pbkdf2PasswordHash
meth public abstract !hasdefault java.lang.String callerQuery() value= ""
meth public abstract !hasdefault java.lang.String dataSourceLookup() value= "java:comp/DefaultDataSource"
meth public abstract !hasdefault java.lang.String groupsQuery() value= ""
meth public abstract !hasdefault java.lang.String priorityExpression() value= ""
meth public abstract !hasdefault java.lang.String useForExpression() value= ""
meth public abstract !hasdefault java.lang.String[] hashAlgorithmParameters() value= []

CLSS public abstract interface jakarta.security.enterprise.identitystore.IdentityStore
fld public final static java.util.Set<jakarta.security.enterprise.identitystore.IdentityStore$ValidationType> DEFAULT_VALIDATION_TYPES
innr public final static !enum ValidationType
meth public int priority()
meth public jakarta.security.enterprise.identitystore.CredentialValidationResult validate(jakarta.security.enterprise.credential.Credential)
meth public java.util.Set<jakarta.security.enterprise.identitystore.IdentityStore$ValidationType> validationTypes()
meth public java.util.Set<java.lang.String> getCallerGroups(jakarta.security.enterprise.identitystore.CredentialValidationResult)

CLSS public final static !enum jakarta.security.enterprise.identitystore.IdentityStore$ValidationType
 outer jakarta.security.enterprise.identitystore.IdentityStore
fld public final static jakarta.security.enterprise.identitystore.IdentityStore$ValidationType PROVIDE_GROUPS
fld public final static jakarta.security.enterprise.identitystore.IdentityStore$ValidationType VALIDATE
meth public static jakarta.security.enterprise.identitystore.IdentityStore$ValidationType valueOf(java.lang.String)
meth public static jakarta.security.enterprise.identitystore.IdentityStore$ValidationType[] values()
supr java.lang.Enum<jakarta.security.enterprise.identitystore.IdentityStore$ValidationType>

CLSS public abstract interface jakarta.security.enterprise.identitystore.IdentityStoreHandler
meth public abstract jakarta.security.enterprise.identitystore.CredentialValidationResult validate(jakarta.security.enterprise.credential.Credential)

CLSS public jakarta.security.enterprise.identitystore.IdentityStorePermission
cons public <init>(java.lang.String)
cons public <init>(java.lang.String,java.lang.String)
supr java.security.BasicPermission
hfds serialVersionUID

CLSS public abstract interface !annotation jakarta.security.enterprise.identitystore.LdapIdentityStoreDefinition
 anno 0 java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy value=RUNTIME)
 anno 0 java.lang.annotation.Target(java.lang.annotation.ElementType[] value=[TYPE])
innr public final static !enum LdapSearchScope
intf java.lang.annotation.Annotation
meth public abstract !hasdefault int maxResults() value= 1000
meth public abstract !hasdefault int priority() value= 80
meth public abstract !hasdefault int readTimeout() value= 0
meth public abstract !hasdefault jakarta.security.enterprise.identitystore.IdentityStore$ValidationType[] useFor() value= [VALIDATE,PROVIDE_GROUPS]
meth public abstract !hasdefault jakarta.security.enterprise.identitystore.LdapIdentityStoreDefinition$LdapSearchScope callerSearchScope() value= SUBTREE
meth public abstract !hasdefault jakarta.security.enterprise.identitystore.LdapIdentityStoreDefinition$LdapSearchScope groupSearchScope() value= SUBTREE
meth public abstract !hasdefault java.lang.String bindDn() value= ""
meth public abstract !hasdefault java.lang.String bindDnPassword() value= ""
meth public abstract !hasdefault java.lang.String callerBaseDn() value= ""
meth public abstract !hasdefault java.lang.String callerNameAttribute() value= "uid"
meth public abstract !hasdefault java.lang.String callerSearchBase() value= ""
meth public abstract !hasdefault java.lang.String callerSearchFilter() value= ""
meth public abstract !hasdefault java.lang.String callerSearchScopeExpression() value= ""
meth public abstract !hasdefault java.lang.String groupMemberAttribute() value= "member"
meth public abstract !hasdefault java.lang.String groupMemberOfAttribute() value= "memberOf"
meth public abstract !hasdefault java.lang.String groupNameAttribute() value= "cn"
meth public abstract !hasdefault java.lang.String groupSearchBase() value= ""
meth public abstract !hasdefault java.lang.String groupSearchFilter() value= ""
meth public abstract !hasdefault java.lang.String groupSearchScopeExpression() value= ""
meth public abstract !hasdefault java.lang.String maxResultsExpression() value= ""
meth public abstract !hasdefault java.lang.String priorityExpression() value= ""
meth public abstract !hasdefault java.lang.String readTimeoutExpression() value= ""
meth public abstract !hasdefault java.lang.String url() value= ""
meth public abstract !hasdefault java.lang.String useForExpression() value= ""

CLSS public final static !enum jakarta.security.enterprise.identitystore.LdapIdentityStoreDefinition$LdapSearchScope
 outer jakarta.security.enterprise.identitystore.LdapIdentityStoreDefinition
fld public final static jakarta.security.enterprise.identitystore.LdapIdentityStoreDefinition$LdapSearchScope ONE_LEVEL
fld public final static jakarta.security.enterprise.identitystore.LdapIdentityStoreDefinition$LdapSearchScope SUBTREE
meth public static jakarta.security.enterprise.identitystore.LdapIdentityStoreDefinition$LdapSearchScope valueOf(java.lang.String)
meth public static jakarta.security.enterprise.identitystore.LdapIdentityStoreDefinition$LdapSearchScope[] values()
supr java.lang.Enum<jakarta.security.enterprise.identitystore.LdapIdentityStoreDefinition$LdapSearchScope>

CLSS public abstract interface jakarta.security.enterprise.identitystore.PasswordHash
meth public abstract boolean verify(char[],java.lang.String)
meth public abstract java.lang.String generate(char[])
meth public void initialize(java.util.Map<java.lang.String,java.lang.String>)

CLSS public abstract interface jakarta.security.enterprise.identitystore.Pbkdf2PasswordHash
intf jakarta.security.enterprise.identitystore.PasswordHash

CLSS public abstract interface jakarta.security.enterprise.identitystore.RememberMeIdentityStore
meth public abstract jakarta.security.enterprise.identitystore.CredentialValidationResult validate(jakarta.security.enterprise.credential.RememberMeCredential)
meth public abstract java.lang.String generateLoginToken(jakarta.security.enterprise.CallerPrincipal,java.util.Set<java.lang.String>)
meth public abstract void removeLoginToken(java.lang.String)

CLSS public abstract interface jakarta.servlet.Servlet
meth public abstract jakarta.servlet.ServletConfig getServletConfig()
meth public abstract java.lang.String getServletInfo()
meth public abstract void destroy()
meth public abstract void init(jakarta.servlet.ServletConfig) throws jakarta.servlet.ServletException
meth public abstract void service(jakarta.servlet.ServletRequest,jakarta.servlet.ServletResponse) throws jakarta.servlet.ServletException,java.io.IOException

CLSS public final jakarta.servlet.jsp.ErrorData
cons public <init>(java.lang.Throwable,int,java.lang.String,java.lang.String)
meth public int getStatusCode()
meth public java.lang.String getRequestURI()
meth public java.lang.String getServletName()
meth public java.lang.Throwable getThrowable()
supr java.lang.Object
hfds servletName,statusCode,throwable,uri

CLSS public abstract interface jakarta.servlet.jsp.HttpJspPage
intf jakarta.servlet.jsp.JspPage
meth public abstract void _jspService(jakarta.servlet.http.HttpServletRequest,jakarta.servlet.http.HttpServletResponse) throws jakarta.servlet.ServletException,java.io.IOException

CLSS public abstract interface jakarta.servlet.jsp.JspApplicationContext
meth public abstract jakarta.el.ExpressionFactory getExpressionFactory()
meth public abstract void addELContextListener(jakarta.el.ELContextListener)
meth public abstract void addELResolver(jakarta.el.ELResolver)

CLSS public abstract jakarta.servlet.jsp.JspContext
cons public <init>()
meth public abstract int getAttributesScope(java.lang.String)
meth public abstract jakarta.el.ELContext getELContext()
meth public abstract jakarta.servlet.jsp.JspWriter getOut()
meth public abstract jakarta.servlet.jsp.el.ExpressionEvaluator getExpressionEvaluator()
 anno 0 java.lang.Deprecated()
meth public abstract jakarta.servlet.jsp.el.VariableResolver getVariableResolver()
 anno 0 java.lang.Deprecated()
meth public abstract java.lang.Object findAttribute(java.lang.String)
meth public abstract java.lang.Object getAttribute(java.lang.String)
meth public abstract java.lang.Object getAttribute(java.lang.String,int)
meth public abstract java.util.Enumeration<java.lang.String> getAttributeNamesInScope(int)
meth public abstract void removeAttribute(java.lang.String)
meth public abstract void removeAttribute(java.lang.String,int)
meth public abstract void setAttribute(java.lang.String,java.lang.Object)
meth public abstract void setAttribute(java.lang.String,java.lang.Object,int)
meth public jakarta.servlet.jsp.JspWriter popBody()
meth public jakarta.servlet.jsp.JspWriter pushBody(java.io.Writer)
supr java.lang.Object

CLSS public abstract jakarta.servlet.jsp.JspEngineInfo
cons public <init>()
meth public abstract java.lang.String getSpecificationVersion()
supr java.lang.Object

CLSS public jakarta.servlet.jsp.JspException
cons public <init>()
cons public <init>(java.lang.String)
cons public <init>(java.lang.String,java.lang.Throwable)
cons public <init>(java.lang.Throwable)
meth public java.lang.Throwable getRootCause()
 anno 0 java.lang.Deprecated()
supr java.lang.Exception
hfds serialVersionUID

CLSS public abstract jakarta.servlet.jsp.JspFactory
cons public <init>()
meth public abstract jakarta.servlet.jsp.JspApplicationContext getJspApplicationContext(jakarta.servlet.ServletContext)
meth public abstract jakarta.servlet.jsp.JspEngineInfo getEngineInfo()
meth public abstract jakarta.servlet.jsp.PageContext getPageContext(jakarta.servlet.Servlet,jakarta.servlet.ServletRequest,jakarta.servlet.ServletResponse,java.lang.String,boolean,int,boolean)
meth public abstract void releasePageContext(jakarta.servlet.jsp.PageContext)
meth public static jakarta.servlet.jsp.JspFactory getDefaultFactory()
meth public static void setDefaultFactory(jakarta.servlet.jsp.JspFactory)
supr java.lang.Object
hfds deflt

CLSS public abstract interface jakarta.servlet.jsp.JspPage
intf jakarta.servlet.Servlet
meth public abstract void jspDestroy()
meth public abstract void jspInit()

CLSS public jakarta.servlet.jsp.JspTagException
cons public <init>()
cons public <init>(java.lang.String)
cons public <init>(java.lang.String,java.lang.Throwable)
cons public <init>(java.lang.Throwable)
supr jakarta.servlet.jsp.JspException
hfds serialVersionUID

CLSS public abstract jakarta.servlet.jsp.JspWriter
cons protected <init>(int,boolean)
fld protected boolean autoFlush
fld protected int bufferSize
fld public final static int DEFAULT_BUFFER = -1
fld public final static int NO_BUFFER = 0
fld public final static int UNBOUNDED_BUFFER = -2
meth public abstract int getRemaining()
meth public abstract void clear() throws java.io.IOException
meth public abstract void clearBuffer() throws java.io.IOException
meth public abstract void close() throws java.io.IOException
meth public abstract void flush() throws java.io.IOException
meth public abstract void newLine() throws java.io.IOException
meth public abstract void print(boolean) throws java.io.IOException
meth public abstract void print(char) throws java.io.IOException
meth public abstract void print(char[]) throws java.io.IOException
meth public abstract void print(double) throws java.io.IOException
meth public abstract void print(float) throws java.io.IOException
meth public abstract void print(int) throws java.io.IOException
meth public abstract void print(java.lang.Object) throws java.io.IOException
meth public abstract void print(java.lang.String) throws java.io.IOException
meth public abstract void print(long) throws java.io.IOException
meth public abstract void println() throws java.io.IOException
meth public abstract void println(boolean) throws java.io.IOException
meth public abstract void println(char) throws java.io.IOException
meth public abstract void println(char[]) throws java.io.IOException
meth public abstract void println(double) throws java.io.IOException
meth public abstract void println(float) throws java.io.IOException
meth public abstract void println(int) throws java.io.IOException
meth public abstract void println(java.lang.Object) throws java.io.IOException
meth public abstract void println(java.lang.String) throws java.io.IOException
meth public abstract void println(long) throws java.io.IOException
meth public boolean isAutoFlush()
meth public int getBufferSize()
supr java.io.Writer

CLSS public abstract jakarta.servlet.jsp.PageContext
cons public <init>()
fld public final static int APPLICATION_SCOPE = 4
fld public final static int PAGE_SCOPE = 1
fld public final static int REQUEST_SCOPE = 2
fld public final static int SESSION_SCOPE = 3
fld public final static java.lang.String APPLICATION = "jakarta.servlet.jsp.jspApplication"
fld public final static java.lang.String CONFIG = "jakarta.servlet.jsp.jspConfig"
fld public final static java.lang.String EXCEPTION = "jakarta.servlet.jsp.jspException"
fld public final static java.lang.String OUT = "jakarta.servlet.jsp.jspOut"
fld public final static java.lang.String PAGE = "jakarta.servlet.jsp.jspPage"
fld public final static java.lang.String PAGECONTEXT = "jakarta.servlet.jsp.jspPageContext"
fld public final static java.lang.String REQUEST = "jakarta.servlet.jsp.jspRequest"
fld public final static java.lang.String RESPONSE = "jakarta.servlet.jsp.jspResponse"
fld public final static java.lang.String SESSION = "jakarta.servlet.jsp.jspSession"
meth public abstract jakarta.servlet.ServletConfig getServletConfig()
meth public abstract jakarta.servlet.ServletContext getServletContext()
meth public abstract jakarta.servlet.ServletRequest getRequest()
meth public abstract jakarta.servlet.ServletResponse getResponse()
meth public abstract jakarta.servlet.http.HttpSession getSession()
meth public abstract java.lang.Exception getException()
meth public abstract java.lang.Object getPage()
meth public abstract void forward(java.lang.String) throws jakarta.servlet.ServletException,java.io.IOException
meth public abstract void handlePageException(java.lang.Exception) throws jakarta.servlet.ServletException,java.io.IOException
meth public abstract void handlePageException(java.lang.Throwable) throws jakarta.servlet.ServletException,java.io.IOException
meth public abstract void include(java.lang.String) throws jakarta.servlet.ServletException,java.io.IOException
meth public abstract void include(java.lang.String,boolean) throws jakarta.servlet.ServletException,java.io.IOException
meth public abstract void initialize(jakarta.servlet.Servlet,jakarta.servlet.ServletRequest,jakarta.servlet.ServletResponse,java.lang.String,boolean,int,boolean) throws java.io.IOException
meth public abstract void release()
meth public jakarta.servlet.jsp.ErrorData getErrorData()
meth public jakarta.servlet.jsp.tagext.BodyContent pushBody()
supr jakarta.servlet.jsp.JspContext

CLSS public jakarta.servlet.jsp.SkipPageException
cons public <init>()
cons public <init>(java.lang.String)
cons public <init>(java.lang.String,java.lang.Throwable)
cons public <init>(java.lang.Throwable)
supr jakarta.servlet.jsp.JspException
hfds serialVersionUID

CLSS public jakarta.servlet.jsp.el.ELException
 anno 0 java.lang.Deprecated()
cons public <init>()
cons public <init>(java.lang.String)
cons public <init>(java.lang.String,java.lang.Throwable)
cons public <init>(java.lang.Throwable)
meth public java.lang.Throwable getRootCause()
supr java.lang.Exception
hfds mRootCause,serialVersionUID

CLSS public jakarta.servlet.jsp.el.ELParseException
 anno 0 java.lang.Deprecated()
cons public <init>()
cons public <init>(java.lang.String)
supr jakarta.servlet.jsp.el.ELException
hfds serialVersionUID

CLSS public abstract jakarta.servlet.jsp.el.Expression
 anno 0 java.lang.Deprecated()
cons public <init>()
meth public abstract java.lang.Object evaluate(jakarta.servlet.jsp.el.VariableResolver) throws jakarta.servlet.jsp.el.ELException
supr java.lang.Object

CLSS public abstract jakarta.servlet.jsp.el.ExpressionEvaluator
 anno 0 java.lang.Deprecated()
cons public <init>()
meth public abstract jakarta.servlet.jsp.el.Expression parseExpression(java.lang.String,java.lang.Class<?>,jakarta.servlet.jsp.el.FunctionMapper) throws jakarta.servlet.jsp.el.ELException
meth public abstract java.lang.Object evaluate(java.lang.String,java.lang.Class<?>,jakarta.servlet.jsp.el.VariableResolver,jakarta.servlet.jsp.el.FunctionMapper) throws jakarta.servlet.jsp.el.ELException
supr java.lang.Object

CLSS public abstract interface jakarta.servlet.jsp.el.FunctionMapper
 anno 0 java.lang.Deprecated()
meth public abstract java.lang.reflect.Method resolveFunction(java.lang.String,java.lang.String)

CLSS public jakarta.servlet.jsp.el.ImplicitObjectELResolver
cons public <init>()
meth public boolean isReadOnly(jakarta.el.ELContext,java.lang.Object,java.lang.Object)
meth public java.lang.Class<?> getType(jakarta.el.ELContext,java.lang.Object,java.lang.Object)
meth public java.lang.Class<java.lang.String> getCommonPropertyType(jakarta.el.ELContext,java.lang.Object)
meth public java.lang.Object getValue(jakarta.el.ELContext,java.lang.Object,java.lang.Object)
meth public java.util.Iterator<java.beans.FeatureDescriptor> getFeatureDescriptors(jakarta.el.ELContext,java.lang.Object)
meth public void setValue(jakarta.el.ELContext,java.lang.Object,java.lang.Object,java.lang.Object)
supr jakarta.el.ELResolver
hcls EnumeratedMap,ImplicitObjects

CLSS public jakarta.servlet.jsp.el.ScopedAttributeELResolver
cons public <init>()
meth public boolean isReadOnly(jakarta.el.ELContext,java.lang.Object,java.lang.Object)
meth public java.lang.Class<java.lang.Object> getType(jakarta.el.ELContext,java.lang.Object,java.lang.Object)
meth public java.lang.Class<java.lang.String> getCommonPropertyType(jakarta.el.ELContext,java.lang.Object)
meth public java.lang.Object getValue(jakarta.el.ELContext,java.lang.Object,java.lang.Object)
meth public java.util.Iterator<java.beans.FeatureDescriptor> getFeatureDescriptors(jakarta.el.ELContext,java.lang.Object)
meth public void setValue(jakarta.el.ELContext,java.lang.Object,java.lang.Object,java.lang.Object)
supr jakarta.el.ELResolver

CLSS public abstract interface jakarta.servlet.jsp.el.VariableResolver
 anno 0 java.lang.Deprecated()
meth public abstract java.lang.Object resolveVariable(java.lang.String) throws jakarta.servlet.jsp.el.ELException

CLSS public abstract jakarta.servlet.jsp.jstl.core.ConditionalTagSupport
cons public <init>()
meth protected abstract boolean condition() throws jakarta.servlet.jsp.JspTagException
meth public int doStartTag() throws jakarta.servlet.jsp.JspException
meth public void release()
meth public void setScope(java.lang.String)
meth public void setVar(java.lang.String)
supr jakarta.servlet.jsp.tagext.TagSupport
hfds result,scope,var

CLSS public jakarta.servlet.jsp.jstl.core.Config
cons public <init>()
fld public final static java.lang.String FMT_FALLBACK_LOCALE = "jakarta.servlet.jsp.jstl.fmt.fallbackLocale"
fld public final static java.lang.String FMT_LOCALE = "jakarta.servlet.jsp.jstl.fmt.locale"
fld public final static java.lang.String FMT_LOCALIZATION_CONTEXT = "jakarta.servlet.jsp.jstl.fmt.localizationContext"
fld public final static java.lang.String FMT_TIME_ZONE = "jakarta.servlet.jsp.jstl.fmt.timeZone"
fld public final static java.lang.String SQL_DATA_SOURCE = "jakarta.servlet.jsp.jstl.sql.dataSource"
fld public final static java.lang.String SQL_MAX_ROWS = "jakarta.servlet.jsp.jstl.sql.maxRows"
meth public static java.lang.Object find(jakarta.servlet.jsp.PageContext,java.lang.String)
meth public static java.lang.Object get(jakarta.servlet.ServletContext,java.lang.String)
meth public static java.lang.Object get(jakarta.servlet.ServletRequest,java.lang.String)
meth public static java.lang.Object get(jakarta.servlet.http.HttpSession,java.lang.String)
meth public static java.lang.Object get(jakarta.servlet.jsp.PageContext,java.lang.String,int)
meth public static void remove(jakarta.servlet.ServletContext,java.lang.String)
meth public static void remove(jakarta.servlet.ServletRequest,java.lang.String)
meth public static void remove(jakarta.servlet.http.HttpSession,java.lang.String)
meth public static void remove(jakarta.servlet.jsp.PageContext,java.lang.String,int)
meth public static void set(jakarta.servlet.ServletContext,java.lang.String,java.lang.Object)
meth public static void set(jakarta.servlet.ServletRequest,java.lang.String,java.lang.Object)
meth public static void set(jakarta.servlet.http.HttpSession,java.lang.String,java.lang.Object)
meth public static void set(jakarta.servlet.jsp.PageContext,java.lang.String,java.lang.Object,int)
supr java.lang.Object
hfds APPLICATION_SCOPE_SUFFIX,PAGE_SCOPE_SUFFIX,REQUEST_SCOPE_SUFFIX,SESSION_SCOPE_SUFFIX

CLSS public final jakarta.servlet.jsp.jstl.core.IndexedValueExpression
cons public <init>(jakarta.el.ValueExpression,int)
fld protected final jakarta.el.ValueExpression orig
fld protected final java.lang.Integer i
meth public boolean equals(java.lang.Object)
meth public boolean isLiteralText()
meth public boolean isReadOnly(jakarta.el.ELContext)
meth public int hashCode()
meth public java.lang.Class getExpectedType()
meth public java.lang.Class getType(jakarta.el.ELContext)
meth public java.lang.Object getValue(jakarta.el.ELContext)
meth public java.lang.String getExpressionString()
meth public void setValue(jakarta.el.ELContext,java.lang.Object)
supr jakarta.el.ValueExpression
hfds serialVersionUID

CLSS public final jakarta.servlet.jsp.jstl.core.IteratedExpression
cons public <init>(jakarta.el.ValueExpression,java.lang.String)
fld protected final jakarta.el.ValueExpression orig
fld protected final java.lang.String delims
meth public jakarta.el.ValueExpression getValueExpression()
meth public java.lang.Object getItem(jakarta.el.ELContext,int)
supr java.lang.Object
hfds base,index,iter,serialVersionUID

CLSS public final jakarta.servlet.jsp.jstl.core.IteratedValueExpression
cons public <init>(jakarta.servlet.jsp.jstl.core.IteratedExpression,int)
fld protected final int i
fld protected final jakarta.servlet.jsp.jstl.core.IteratedExpression iteratedExpression
meth public boolean equals(java.lang.Object)
meth public boolean isLiteralText()
meth public boolean isReadOnly(jakarta.el.ELContext)
meth public int hashCode()
meth public java.lang.Class getExpectedType()
meth public java.lang.Class getType(jakarta.el.ELContext)
meth public java.lang.Object getValue(jakarta.el.ELContext)
meth public java.lang.String getExpressionString()
meth public void setValue(jakarta.el.ELContext,java.lang.Object)
supr jakarta.el.ValueExpression
hfds serialVersionUID

CLSS public abstract interface jakarta.servlet.jsp.jstl.core.LoopTag
intf jakarta.servlet.jsp.tagext.Tag
meth public abstract jakarta.servlet.jsp.jstl.core.LoopTagStatus getLoopStatus()
meth public abstract java.lang.Object getCurrent()

CLSS public abstract interface jakarta.servlet.jsp.jstl.core.LoopTagStatus
meth public abstract boolean isFirst()
meth public abstract boolean isLast()
meth public abstract int getCount()
meth public abstract int getIndex()
meth public abstract java.lang.Integer getBegin()
meth public abstract java.lang.Integer getEnd()
meth public abstract java.lang.Integer getStep()
meth public abstract java.lang.Object getCurrent()

CLSS public abstract jakarta.servlet.jsp.jstl.core.LoopTagSupport
cons public <init>()
fld protected boolean beginSpecified
fld protected boolean endSpecified
fld protected boolean stepSpecified
fld protected int begin
fld protected int end
fld protected int step
fld protected jakarta.el.ValueExpression deferredExpression
fld protected java.lang.String itemId
fld protected java.lang.String statusId
intf jakarta.servlet.jsp.jstl.core.LoopTag
intf jakarta.servlet.jsp.tagext.IterationTag
intf jakarta.servlet.jsp.tagext.TryCatchFinally
meth protected abstract boolean hasNext() throws jakarta.servlet.jsp.JspTagException
meth protected abstract java.lang.Object next() throws jakarta.servlet.jsp.JspTagException
meth protected abstract void prepare() throws jakarta.servlet.jsp.JspTagException
meth protected java.lang.String getDelims()
meth protected void validateBegin() throws jakarta.servlet.jsp.JspTagException
meth protected void validateEnd() throws jakarta.servlet.jsp.JspTagException
meth protected void validateStep() throws jakarta.servlet.jsp.JspTagException
meth public int doAfterBody() throws jakarta.servlet.jsp.JspException
meth public int doStartTag() throws jakarta.servlet.jsp.JspException
meth public jakarta.servlet.jsp.jstl.core.LoopTagStatus getLoopStatus()
meth public java.lang.Object getCurrent()
meth public void doCatch(java.lang.Throwable) throws java.lang.Throwable
meth public void doFinally()
meth public void release()
meth public void setVar(java.lang.String)
meth public void setVarStatus(java.lang.String)
supr jakarta.servlet.jsp.tagext.TagSupport
hfds count,index,item,iteratedExpression,last,oldMappedValue,status

CLSS public jakarta.servlet.jsp.jstl.fmt.LocaleSupport
cons public <init>()
meth public static java.lang.String getLocalizedMessage(jakarta.servlet.jsp.PageContext,java.lang.String)
meth public static java.lang.String getLocalizedMessage(jakarta.servlet.jsp.PageContext,java.lang.String,java.lang.Object[])
meth public static java.lang.String getLocalizedMessage(jakarta.servlet.jsp.PageContext,java.lang.String,java.lang.Object[],java.lang.String)
meth public static java.lang.String getLocalizedMessage(jakarta.servlet.jsp.PageContext,java.lang.String,java.lang.String)
supr java.lang.Object
hfds EMPTY_LOCALE,HYPHEN,REQUEST_CHAR_SET,UNDEFINED_KEY,UNDERSCORE

CLSS public jakarta.servlet.jsp.jstl.fmt.LocalizationContext
cons public <init>()
cons public <init>(java.util.ResourceBundle)
cons public <init>(java.util.ResourceBundle,java.util.Locale)
meth public java.util.Locale getLocale()
meth public java.util.ResourceBundle getResourceBundle()
supr java.lang.Object
hfds bundle,locale

CLSS public abstract interface jakarta.servlet.jsp.jstl.sql.Result
meth public abstract boolean isLimitedByMaxRows()
meth public abstract int getRowCount()
meth public abstract java.lang.Object[][] getRowsByIndex()
meth public abstract java.lang.String[] getColumnNames()
meth public abstract java.util.SortedMap[] getRows()

CLSS public jakarta.servlet.jsp.jstl.sql.ResultSupport
cons public <init>()
meth public static jakarta.servlet.jsp.jstl.sql.Result toResult(java.sql.ResultSet)
meth public static jakarta.servlet.jsp.jstl.sql.Result toResult(java.sql.ResultSet,int)
supr java.lang.Object

CLSS public abstract interface jakarta.servlet.jsp.jstl.sql.SQLExecutionTag
meth public abstract void addSQLParameter(java.lang.Object)

CLSS public jakarta.servlet.jsp.jstl.tlv.PermittedTaglibsTLV
cons public <init>()
meth public jakarta.servlet.jsp.tagext.ValidationMessage[] validate(java.lang.String,java.lang.String,jakarta.servlet.jsp.tagext.PageData)
meth public void release()
supr jakarta.servlet.jsp.tagext.TagLibraryValidator
hfds JSP_ROOT_NAME,JSP_ROOT_QN,JSP_ROOT_URI,PERMITTED_TAGLIBS_PARAM,failed,permittedTaglibs,uri
hcls PermittedTaglibsHandler

CLSS public jakarta.servlet.jsp.jstl.tlv.ScriptFreeTLV
cons public <init>()
meth public jakarta.servlet.jsp.tagext.ValidationMessage[] validate(java.lang.String,java.lang.String,jakarta.servlet.jsp.tagext.PageData)
meth public void setInitParameters(java.util.Map<java.lang.String,java.lang.Object>)
supr jakarta.servlet.jsp.tagext.TagLibraryValidator
hfds allowDeclarations,allowExpressions,allowRTExpressions,allowScriptlets,factory
hcls MyContentHandler

CLSS public abstract jakarta.servlet.jsp.tagext.BodyContent
cons protected <init>(jakarta.servlet.jsp.JspWriter)
meth public abstract java.io.Reader getReader()
meth public abstract java.lang.String getString()
meth public abstract void writeOut(java.io.Writer) throws java.io.IOException
meth public jakarta.servlet.jsp.JspWriter getEnclosingWriter()
meth public void clearBody()
meth public void flush() throws java.io.IOException
supr jakarta.servlet.jsp.JspWriter
hfds enclosingWriter

CLSS public abstract interface jakarta.servlet.jsp.tagext.BodyTag
fld public final static int EVAL_BODY_BUFFERED = 2
fld public final static int EVAL_BODY_TAG = 2
 anno 0 java.lang.Deprecated()
intf jakarta.servlet.jsp.tagext.IterationTag
meth public abstract void doInitBody() throws jakarta.servlet.jsp.JspException
meth public abstract void setBodyContent(jakarta.servlet.jsp.tagext.BodyContent)

CLSS public jakarta.servlet.jsp.tagext.BodyTagSupport
cons public <init>()
fld protected jakarta.servlet.jsp.tagext.BodyContent bodyContent
intf jakarta.servlet.jsp.tagext.BodyTag
meth public int doAfterBody() throws jakarta.servlet.jsp.JspException
meth public int doEndTag() throws jakarta.servlet.jsp.JspException
meth public int doStartTag() throws jakarta.servlet.jsp.JspException
meth public jakarta.servlet.jsp.JspWriter getPreviousOut()
meth public jakarta.servlet.jsp.tagext.BodyContent getBodyContent()
meth public void doInitBody() throws jakarta.servlet.jsp.JspException
meth public void release()
meth public void setBodyContent(jakarta.servlet.jsp.tagext.BodyContent)
supr jakarta.servlet.jsp.tagext.TagSupport
hfds serialVersionUID

CLSS public abstract interface jakarta.servlet.jsp.tagext.DynamicAttributes
meth public abstract void setDynamicAttribute(java.lang.String,java.lang.String,java.lang.Object) throws jakarta.servlet.jsp.JspException

CLSS public jakarta.servlet.jsp.tagext.FunctionInfo
cons public <init>(java.lang.String,java.lang.String,java.lang.String)
meth public java.lang.String getFunctionClass()
meth public java.lang.String getFunctionSignature()
meth public java.lang.String getName()
supr java.lang.Object
hfds functionClass,functionSignature,name

CLSS public abstract interface jakarta.servlet.jsp.tagext.IterationTag
fld public final static int EVAL_BODY_AGAIN = 2
intf jakarta.servlet.jsp.tagext.Tag
meth public abstract int doAfterBody() throws jakarta.servlet.jsp.JspException

CLSS public abstract jakarta.servlet.jsp.tagext.JspFragment
cons public <init>()
meth public abstract jakarta.servlet.jsp.JspContext getJspContext()
meth public abstract void invoke(java.io.Writer) throws jakarta.servlet.jsp.JspException,java.io.IOException
supr java.lang.Object

CLSS public abstract interface jakarta.servlet.jsp.tagext.JspIdConsumer
meth public abstract void setJspId(java.lang.String)

CLSS public abstract interface jakarta.servlet.jsp.tagext.JspTag

CLSS public abstract jakarta.servlet.jsp.tagext.PageData
cons public <init>()
meth public abstract java.io.InputStream getInputStream()
supr java.lang.Object

CLSS public abstract interface jakarta.servlet.jsp.tagext.SimpleTag
intf jakarta.servlet.jsp.tagext.JspTag
meth public abstract jakarta.servlet.jsp.tagext.JspTag getParent()
meth public abstract void doTag() throws jakarta.servlet.jsp.JspException,java.io.IOException
meth public abstract void setJspBody(jakarta.servlet.jsp.tagext.JspFragment)
meth public abstract void setJspContext(jakarta.servlet.jsp.JspContext)
meth public abstract void setParent(jakarta.servlet.jsp.tagext.JspTag)

CLSS public jakarta.servlet.jsp.tagext.SimpleTagSupport
cons public <init>()
intf jakarta.servlet.jsp.tagext.SimpleTag
meth protected jakarta.servlet.jsp.JspContext getJspContext()
meth protected jakarta.servlet.jsp.tagext.JspFragment getJspBody()
meth public final static jakarta.servlet.jsp.tagext.JspTag findAncestorWithClass(jakarta.servlet.jsp.tagext.JspTag,java.lang.Class<?>)
meth public jakarta.servlet.jsp.tagext.JspTag getParent()
meth public void doTag() throws jakarta.servlet.jsp.JspException,java.io.IOException
meth public void setJspBody(jakarta.servlet.jsp.tagext.JspFragment)
meth public void setJspContext(jakarta.servlet.jsp.JspContext)
meth public void setParent(jakarta.servlet.jsp.tagext.JspTag)
supr java.lang.Object
hfds jspBody,jspContext,parentTag

CLSS public abstract interface jakarta.servlet.jsp.tagext.Tag
fld public final static int EVAL_BODY_INCLUDE = 1
fld public final static int EVAL_PAGE = 6
fld public final static int SKIP_BODY = 0
fld public final static int SKIP_PAGE = 5
intf jakarta.servlet.jsp.tagext.JspTag
meth public abstract int doEndTag() throws jakarta.servlet.jsp.JspException
meth public abstract int doStartTag() throws jakarta.servlet.jsp.JspException
meth public abstract jakarta.servlet.jsp.tagext.Tag getParent()
meth public abstract void release()
meth public abstract void setPageContext(jakarta.servlet.jsp.PageContext)
meth public abstract void setParent(jakarta.servlet.jsp.tagext.Tag)

CLSS public jakarta.servlet.jsp.tagext.TagAdapter
cons public <init>(jakarta.servlet.jsp.tagext.SimpleTag)
intf jakarta.servlet.jsp.tagext.Tag
meth public int doEndTag() throws jakarta.servlet.jsp.JspException
meth public int doStartTag() throws jakarta.servlet.jsp.JspException
meth public jakarta.servlet.jsp.tagext.JspTag getAdaptee()
meth public jakarta.servlet.jsp.tagext.Tag getParent()
meth public void release()
meth public void setPageContext(jakarta.servlet.jsp.PageContext)
meth public void setParent(jakarta.servlet.jsp.tagext.Tag)
supr java.lang.Object
hfds parent,parentDetermined,simpleTagAdaptee

CLSS public jakarta.servlet.jsp.tagext.TagAttributeInfo
cons public <init>(java.lang.String,boolean,java.lang.String,boolean)
cons public <init>(java.lang.String,boolean,java.lang.String,boolean,boolean)
cons public <init>(java.lang.String,boolean,java.lang.String,boolean,boolean,java.lang.String,boolean,boolean,java.lang.String,java.lang.String)
fld public final static java.lang.String ID = "id"
meth public boolean canBeRequestTime()
meth public boolean isDeferredMethod()
meth public boolean isDeferredValue()
meth public boolean isFragment()
meth public boolean isRequired()
meth public java.lang.String getDescription()
meth public java.lang.String getExpectedTypeName()
meth public java.lang.String getMethodSignature()
meth public java.lang.String getName()
meth public java.lang.String getTypeName()
meth public java.lang.String toString()
meth public static jakarta.servlet.jsp.tagext.TagAttributeInfo getIdAttribute(jakarta.servlet.jsp.tagext.TagAttributeInfo[])
supr java.lang.Object
hfds deferredMethod,deferredValue,description,expectedTypeName,fragment,methodSignature,name,reqTime,required,type

CLSS public jakarta.servlet.jsp.tagext.TagData
cons public <init>(java.lang.Object[][])
cons public <init>(java.util.Hashtable<java.lang.String,java.lang.Object>)
fld public final static java.lang.Object REQUEST_TIME_VALUE
intf java.lang.Cloneable
meth public java.lang.Object getAttribute(java.lang.String)
meth public java.lang.String getAttributeString(java.lang.String)
meth public java.lang.String getId()
meth public java.util.Enumeration<java.lang.String> getAttributes()
meth public void setAttribute(java.lang.String,java.lang.Object)
supr java.lang.Object
hfds attributes

CLSS public abstract jakarta.servlet.jsp.tagext.TagExtraInfo
cons public <init>()
meth public boolean isValid(jakarta.servlet.jsp.tagext.TagData)
meth public final jakarta.servlet.jsp.tagext.TagInfo getTagInfo()
meth public final void setTagInfo(jakarta.servlet.jsp.tagext.TagInfo)
meth public jakarta.servlet.jsp.tagext.ValidationMessage[] validate(jakarta.servlet.jsp.tagext.TagData)
meth public jakarta.servlet.jsp.tagext.VariableInfo[] getVariableInfo(jakarta.servlet.jsp.tagext.TagData)
supr java.lang.Object
hfds ZERO_VARIABLE_INFO,tagInfo

CLSS public jakarta.servlet.jsp.tagext.TagFileInfo
cons public <init>(java.lang.String,java.lang.String,jakarta.servlet.jsp.tagext.TagInfo)
meth public jakarta.servlet.jsp.tagext.TagInfo getTagInfo()
meth public java.lang.String getName()
meth public java.lang.String getPath()
supr java.lang.Object
hfds name,path,tagInfo

CLSS public jakarta.servlet.jsp.tagext.TagInfo
cons public <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,jakarta.servlet.jsp.tagext.TagLibraryInfo,jakarta.servlet.jsp.tagext.TagExtraInfo,jakarta.servlet.jsp.tagext.TagAttributeInfo[])
cons public <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,jakarta.servlet.jsp.tagext.TagLibraryInfo,jakarta.servlet.jsp.tagext.TagExtraInfo,jakarta.servlet.jsp.tagext.TagAttributeInfo[],java.lang.String,java.lang.String,java.lang.String,jakarta.servlet.jsp.tagext.TagVariableInfo[])
cons public <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,jakarta.servlet.jsp.tagext.TagLibraryInfo,jakarta.servlet.jsp.tagext.TagExtraInfo,jakarta.servlet.jsp.tagext.TagAttributeInfo[],java.lang.String,java.lang.String,java.lang.String,jakarta.servlet.jsp.tagext.TagVariableInfo[],boolean)
fld public final static java.lang.String BODY_CONTENT_EMPTY = "empty"
fld public final static java.lang.String BODY_CONTENT_JSP = "JSP"
fld public final static java.lang.String BODY_CONTENT_SCRIPTLESS = "scriptless"
fld public final static java.lang.String BODY_CONTENT_TAG_DEPENDENT = "tagdependent"
meth public boolean hasDynamicAttributes()
meth public boolean isValid(jakarta.servlet.jsp.tagext.TagData)
meth public jakarta.servlet.jsp.tagext.TagAttributeInfo[] getAttributes()
meth public jakarta.servlet.jsp.tagext.TagExtraInfo getTagExtraInfo()
meth public jakarta.servlet.jsp.tagext.TagLibraryInfo getTagLibrary()
meth public jakarta.servlet.jsp.tagext.TagVariableInfo[] getTagVariableInfos()
meth public jakarta.servlet.jsp.tagext.ValidationMessage[] validate(jakarta.servlet.jsp.tagext.TagData)
meth public jakarta.servlet.jsp.tagext.VariableInfo[] getVariableInfo(jakarta.servlet.jsp.tagext.TagData)
meth public java.lang.String getBodyContent()
meth public java.lang.String getDisplayName()
meth public java.lang.String getInfoString()
meth public java.lang.String getLargeIcon()
meth public java.lang.String getSmallIcon()
meth public java.lang.String getTagClassName()
meth public java.lang.String getTagName()
meth public void setTagExtraInfo(jakarta.servlet.jsp.tagext.TagExtraInfo)
meth public void setTagLibrary(jakarta.servlet.jsp.tagext.TagLibraryInfo)
supr java.lang.Object
hfds attributeInfo,bodyContent,displayName,dynamicAttributes,infoString,largeIcon,smallIcon,tagClassName,tagExtraInfo,tagLibrary,tagName,tagVariableInfo

CLSS public abstract jakarta.servlet.jsp.tagext.TagLibraryInfo
cons protected <init>(java.lang.String,java.lang.String)
fld protected jakarta.servlet.jsp.tagext.FunctionInfo[] functions
fld protected jakarta.servlet.jsp.tagext.TagFileInfo[] tagFiles
fld protected jakarta.servlet.jsp.tagext.TagInfo[] tags
fld protected java.lang.String info
fld protected java.lang.String jspversion
fld protected java.lang.String prefix
fld protected java.lang.String shortname
fld protected java.lang.String tlibversion
fld protected java.lang.String uri
fld protected java.lang.String urn
meth public abstract jakarta.servlet.jsp.tagext.TagLibraryInfo[] getTagLibraryInfos()
meth public jakarta.servlet.jsp.tagext.FunctionInfo getFunction(java.lang.String)
meth public jakarta.servlet.jsp.tagext.FunctionInfo[] getFunctions()
meth public jakarta.servlet.jsp.tagext.TagFileInfo getTagFile(java.lang.String)
meth public jakarta.servlet.jsp.tagext.TagFileInfo[] getTagFiles()
meth public jakarta.servlet.jsp.tagext.TagInfo getTag(java.lang.String)
meth public jakarta.servlet.jsp.tagext.TagInfo[] getTags()
meth public java.lang.String getInfoString()
meth public java.lang.String getPrefixString()
meth public java.lang.String getReliableURN()
meth public java.lang.String getRequiredVersion()
meth public java.lang.String getShortName()
meth public java.lang.String getURI()
supr java.lang.Object

CLSS public abstract jakarta.servlet.jsp.tagext.TagLibraryValidator
cons public <init>()
meth public jakarta.servlet.jsp.tagext.ValidationMessage[] validate(java.lang.String,java.lang.String,jakarta.servlet.jsp.tagext.PageData)
meth public java.util.Map<java.lang.String,java.lang.Object> getInitParameters()
meth public void release()
meth public void setInitParameters(java.util.Map<java.lang.String,java.lang.Object>)
supr java.lang.Object
hfds initParameters

CLSS public jakarta.servlet.jsp.tagext.TagSupport
cons public <init>()
fld protected jakarta.servlet.jsp.PageContext pageContext
fld protected java.lang.String id
intf jakarta.servlet.jsp.tagext.IterationTag
intf java.io.Serializable
meth public final static jakarta.servlet.jsp.tagext.Tag findAncestorWithClass(jakarta.servlet.jsp.tagext.Tag,java.lang.Class<?>)
meth public int doAfterBody() throws jakarta.servlet.jsp.JspException
meth public int doEndTag() throws jakarta.servlet.jsp.JspException
meth public int doStartTag() throws jakarta.servlet.jsp.JspException
meth public jakarta.servlet.jsp.tagext.Tag getParent()
meth public java.lang.Object getValue(java.lang.String)
meth public java.lang.String getId()
meth public java.util.Enumeration<java.lang.String> getValues()
meth public void release()
meth public void removeValue(java.lang.String)
meth public void setId(java.lang.String)
meth public void setPageContext(jakarta.servlet.jsp.PageContext)
meth public void setParent(jakarta.servlet.jsp.tagext.Tag)
meth public void setValue(java.lang.String,java.lang.Object)
supr java.lang.Object
hfds parent,serialVersionUID,values

CLSS public jakarta.servlet.jsp.tagext.TagVariableInfo
cons public <init>(java.lang.String,java.lang.String,java.lang.String,boolean,int)
meth public boolean getDeclare()
meth public int getScope()
meth public java.lang.String getClassName()
meth public java.lang.String getNameFromAttribute()
meth public java.lang.String getNameGiven()
supr java.lang.Object
hfds className,declare,nameFromAttribute,nameGiven,scope

CLSS public abstract interface jakarta.servlet.jsp.tagext.TryCatchFinally
meth public abstract void doCatch(java.lang.Throwable) throws java.lang.Throwable
meth public abstract void doFinally()

CLSS public jakarta.servlet.jsp.tagext.ValidationMessage
cons public <init>(java.lang.String,java.lang.String)
meth public java.lang.String getId()
meth public java.lang.String getMessage()
supr java.lang.Object
hfds id,message

CLSS public jakarta.servlet.jsp.tagext.VariableInfo
cons public <init>(java.lang.String,java.lang.String,boolean,int)
fld public final static int AT_BEGIN = 1
fld public final static int AT_END = 2
fld public final static int NESTED = 0
meth public boolean getDeclare()
meth public int getScope()
meth public java.lang.String getClassName()
meth public java.lang.String getVarName()
supr java.lang.Object
hfds className,declare,scope,varName

CLSS public abstract interface jakarta.validation.BootstrapConfiguration
meth public abstract boolean isExecutableValidationEnabled()
meth public abstract java.lang.String getClockProviderClassName()
meth public abstract java.lang.String getConstraintValidatorFactoryClassName()
meth public abstract java.lang.String getDefaultProviderClassName()
meth public abstract java.lang.String getMessageInterpolatorClassName()
meth public abstract java.lang.String getParameterNameProviderClassName()
meth public abstract java.lang.String getTraversableResolverClassName()
meth public abstract java.util.Map<java.lang.String,java.lang.String> getProperties()
meth public abstract java.util.Set<jakarta.validation.executable.ExecutableType> getDefaultValidatedExecutableTypes()
meth public abstract java.util.Set<java.lang.String> getConstraintMappingResourcePaths()
meth public abstract java.util.Set<java.lang.String> getValueExtractorClassNames()

CLSS public abstract interface jakarta.validation.ClockProvider
meth public abstract java.time.Clock getClock()

CLSS public abstract interface jakarta.validation.Configuration<%0 extends jakarta.validation.Configuration<{jakarta.validation.Configuration%0}>>
meth public abstract jakarta.validation.BootstrapConfiguration getBootstrapConfiguration()
meth public abstract jakarta.validation.ClockProvider getDefaultClockProvider()
meth public abstract jakarta.validation.ConstraintValidatorFactory getDefaultConstraintValidatorFactory()
meth public abstract jakarta.validation.MessageInterpolator getDefaultMessageInterpolator()
meth public abstract jakarta.validation.ParameterNameProvider getDefaultParameterNameProvider()
meth public abstract jakarta.validation.TraversableResolver getDefaultTraversableResolver()
meth public abstract jakarta.validation.ValidatorFactory buildValidatorFactory()
meth public abstract {jakarta.validation.Configuration%0} addMapping(java.io.InputStream)
meth public abstract {jakarta.validation.Configuration%0} addProperty(java.lang.String,java.lang.String)
meth public abstract {jakarta.validation.Configuration%0} addValueExtractor(jakarta.validation.valueextraction.ValueExtractor<?>)
meth public abstract {jakarta.validation.Configuration%0} clockProvider(jakarta.validation.ClockProvider)
meth public abstract {jakarta.validation.Configuration%0} constraintValidatorFactory(jakarta.validation.ConstraintValidatorFactory)
meth public abstract {jakarta.validation.Configuration%0} ignoreXmlConfiguration()
meth public abstract {jakarta.validation.Configuration%0} messageInterpolator(jakarta.validation.MessageInterpolator)
meth public abstract {jakarta.validation.Configuration%0} parameterNameProvider(jakarta.validation.ParameterNameProvider)
meth public abstract {jakarta.validation.Configuration%0} traversableResolver(jakarta.validation.TraversableResolver)

CLSS public abstract interface !annotation jakarta.validation.Constraint
 anno 0 java.lang.annotation.Documented()
 anno 0 java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy value=RUNTIME)
 anno 0 java.lang.annotation.Target(java.lang.annotation.ElementType[] value=[ANNOTATION_TYPE])
intf java.lang.annotation.Annotation
meth public abstract java.lang.Class<? extends jakarta.validation.ConstraintValidator<?,?>>[] validatedBy()

CLSS public jakarta.validation.ConstraintDeclarationException
cons public <init>()
cons public <init>(java.lang.String)
cons public <init>(java.lang.String,java.lang.Throwable)
cons public <init>(java.lang.Throwable)
supr jakarta.validation.ValidationException

CLSS public jakarta.validation.ConstraintDefinitionException
cons public <init>()
cons public <init>(java.lang.String)
cons public <init>(java.lang.String,java.lang.Throwable)
cons public <init>(java.lang.Throwable)
supr jakarta.validation.ValidationException

CLSS public final !enum jakarta.validation.ConstraintTarget
fld public final static jakarta.validation.ConstraintTarget IMPLICIT
fld public final static jakarta.validation.ConstraintTarget PARAMETERS
fld public final static jakarta.validation.ConstraintTarget RETURN_VALUE
meth public static jakarta.validation.ConstraintTarget valueOf(java.lang.String)
meth public static jakarta.validation.ConstraintTarget[] values()
supr java.lang.Enum<jakarta.validation.ConstraintTarget>

CLSS public abstract interface jakarta.validation.ConstraintValidator<%0 extends java.lang.annotation.Annotation, %1 extends java.lang.Object>
meth public abstract boolean isValid({jakarta.validation.ConstraintValidator%1},jakarta.validation.ConstraintValidatorContext)
meth public void initialize({jakarta.validation.ConstraintValidator%0})

CLSS public abstract interface jakarta.validation.ConstraintValidatorContext
innr public abstract interface static ConstraintViolationBuilder
meth public abstract <%0 extends java.lang.Object> {%%0} unwrap(java.lang.Class<{%%0}>)
meth public abstract jakarta.validation.ClockProvider getClockProvider()
meth public abstract jakarta.validation.ConstraintValidatorContext$ConstraintViolationBuilder buildConstraintViolationWithTemplate(java.lang.String)
meth public abstract java.lang.String getDefaultConstraintMessageTemplate()
meth public abstract void disableDefaultConstraintViolation()

CLSS public abstract interface static jakarta.validation.ConstraintValidatorContext$ConstraintViolationBuilder
 outer jakarta.validation.ConstraintValidatorContext
innr public abstract interface static ContainerElementNodeBuilderCustomizableContext
innr public abstract interface static ContainerElementNodeBuilderDefinedContext
innr public abstract interface static ContainerElementNodeContextBuilder
innr public abstract interface static LeafNodeBuilderCustomizableContext
innr public abstract interface static LeafNodeBuilderDefinedContext
innr public abstract interface static LeafNodeContextBuilder
innr public abstract interface static NodeBuilderCustomizableContext
innr public abstract interface static NodeBuilderDefinedContext
innr public abstract interface static NodeContextBuilder
meth public abstract jakarta.validation.ConstraintValidatorContext addConstraintViolation()
meth public abstract jakarta.validation.ConstraintValidatorContext$ConstraintViolationBuilder$ContainerElementNodeBuilderCustomizableContext addContainerElementNode(java.lang.String,java.lang.Class<?>,java.lang.Integer)
meth public abstract jakarta.validation.ConstraintValidatorContext$ConstraintViolationBuilder$LeafNodeBuilderCustomizableContext addBeanNode()
meth public abstract jakarta.validation.ConstraintValidatorContext$ConstraintViolationBuilder$NodeBuilderCustomizableContext addPropertyNode(java.lang.String)
meth public abstract jakarta.validation.ConstraintValidatorContext$ConstraintViolationBuilder$NodeBuilderDefinedContext addNode(java.lang.String)
meth public abstract jakarta.validation.ConstraintValidatorContext$ConstraintViolationBuilder$NodeBuilderDefinedContext addParameterNode(int)

CLSS public abstract interface static jakarta.validation.ConstraintValidatorContext$ConstraintViolationBuilder$ContainerElementNodeBuilderCustomizableContext
 outer jakarta.validation.ConstraintValidatorContext$ConstraintViolationBuilder
meth public abstract jakarta.validation.ConstraintValidatorContext addConstraintViolation()
meth public abstract jakarta.validation.ConstraintValidatorContext$ConstraintViolationBuilder$ContainerElementNodeBuilderCustomizableContext addContainerElementNode(java.lang.String,java.lang.Class<?>,java.lang.Integer)
meth public abstract jakarta.validation.ConstraintValidatorContext$ConstraintViolationBuilder$ContainerElementNodeContextBuilder inIterable()
meth public abstract jakarta.validation.ConstraintValidatorContext$ConstraintViolationBuilder$LeafNodeBuilderCustomizableContext addBeanNode()
meth public abstract jakarta.validation.ConstraintValidatorContext$ConstraintViolationBuilder$NodeBuilderCustomizableContext addPropertyNode(java.lang.String)

CLSS public abstract interface static jakarta.validation.ConstraintValidatorContext$ConstraintViolationBuilder$ContainerElementNodeBuilderDefinedContext
 outer jakarta.validation.ConstraintValidatorContext$ConstraintViolationBuilder
meth public abstract jakarta.validation.ConstraintValidatorContext addConstraintViolation()
meth public abstract jakarta.validation.ConstraintValidatorContext$ConstraintViolationBuilder$ContainerElementNodeBuilderCustomizableContext addContainerElementNode(java.lang.String,java.lang.Class<?>,java.lang.Integer)
meth public abstract jakarta.validation.ConstraintValidatorContext$ConstraintViolationBuilder$LeafNodeBuilderCustomizableContext addBeanNode()
meth public abstract jakarta.validation.ConstraintValidatorContext$ConstraintViolationBuilder$NodeBuilderCustomizableContext addPropertyNode(java.lang.String)

CLSS public abstract interface static jakarta.validation.ConstraintValidatorContext$ConstraintViolationBuilder$ContainerElementNodeContextBuilder
 outer jakarta.validation.ConstraintValidatorContext$ConstraintViolationBuilder
meth public abstract jakarta.validation.ConstraintValidatorContext addConstraintViolation()
meth public abstract jakarta.validation.ConstraintValidatorContext$ConstraintViolationBuilder$ContainerElementNodeBuilderCustomizableContext addContainerElementNode(java.lang.String,java.lang.Class<?>,java.lang.Integer)
meth public abstract jakarta.validation.ConstraintValidatorContext$ConstraintViolationBuilder$ContainerElementNodeBuilderDefinedContext atIndex(java.lang.Integer)
meth public abstract jakarta.validation.ConstraintValidatorContext$ConstraintViolationBuilder$ContainerElementNodeBuilderDefinedContext atKey(java.lang.Object)
meth public abstract jakarta.validation.ConstraintValidatorContext$ConstraintViolationBuilder$LeafNodeBuilderCustomizableContext addBeanNode()
meth public abstract jakarta.validation.ConstraintValidatorContext$ConstraintViolationBuilder$NodeBuilderCustomizableContext addPropertyNode(java.lang.String)

CLSS public abstract interface static jakarta.validation.ConstraintValidatorContext$ConstraintViolationBuilder$LeafNodeBuilderCustomizableContext
 outer jakarta.validation.ConstraintValidatorContext$ConstraintViolationBuilder
meth public abstract jakarta.validation.ConstraintValidatorContext addConstraintViolation()
meth public abstract jakarta.validation.ConstraintValidatorContext$ConstraintViolationBuilder$LeafNodeBuilderCustomizableContext inContainer(java.lang.Class<?>,java.lang.Integer)
meth public abstract jakarta.validation.ConstraintValidatorContext$ConstraintViolationBuilder$LeafNodeContextBuilder inIterable()

CLSS public abstract interface static jakarta.validation.ConstraintValidatorContext$ConstraintViolationBuilder$LeafNodeBuilderDefinedContext
 outer jakarta.validation.ConstraintValidatorContext$ConstraintViolationBuilder
meth public abstract jakarta.validation.ConstraintValidatorContext addConstraintViolation()

CLSS public abstract interface static jakarta.validation.ConstraintValidatorContext$ConstraintViolationBuilder$LeafNodeContextBuilder
 outer jakarta.validation.ConstraintValidatorContext$ConstraintViolationBuilder
meth public abstract jakarta.validation.ConstraintValidatorContext addConstraintViolation()
meth public abstract jakarta.validation.ConstraintValidatorContext$ConstraintViolationBuilder$LeafNodeBuilderDefinedContext atIndex(java.lang.Integer)
meth public abstract jakarta.validation.ConstraintValidatorContext$ConstraintViolationBuilder$LeafNodeBuilderDefinedContext atKey(java.lang.Object)

CLSS public abstract interface static jakarta.validation.ConstraintValidatorContext$ConstraintViolationBuilder$NodeBuilderCustomizableContext
 outer jakarta.validation.ConstraintValidatorContext$ConstraintViolationBuilder
meth public abstract jakarta.validation.ConstraintValidatorContext addConstraintViolation()
meth public abstract jakarta.validation.ConstraintValidatorContext$ConstraintViolationBuilder$ContainerElementNodeBuilderCustomizableContext addContainerElementNode(java.lang.String,java.lang.Class<?>,java.lang.Integer)
meth public abstract jakarta.validation.ConstraintValidatorContext$ConstraintViolationBuilder$LeafNodeBuilderCustomizableContext addBeanNode()
meth public abstract jakarta.validation.ConstraintValidatorContext$ConstraintViolationBuilder$NodeBuilderCustomizableContext addNode(java.lang.String)
meth public abstract jakarta.validation.ConstraintValidatorContext$ConstraintViolationBuilder$NodeBuilderCustomizableContext addPropertyNode(java.lang.String)
meth public abstract jakarta.validation.ConstraintValidatorContext$ConstraintViolationBuilder$NodeBuilderCustomizableContext inContainer(java.lang.Class<?>,java.lang.Integer)
meth public abstract jakarta.validation.ConstraintValidatorContext$ConstraintViolationBuilder$NodeContextBuilder inIterable()

CLSS public abstract interface static jakarta.validation.ConstraintValidatorContext$ConstraintViolationBuilder$NodeBuilderDefinedContext
 outer jakarta.validation.ConstraintValidatorContext$ConstraintViolationBuilder
meth public abstract jakarta.validation.ConstraintValidatorContext addConstraintViolation()
meth public abstract jakarta.validation.ConstraintValidatorContext$ConstraintViolationBuilder$ContainerElementNodeBuilderCustomizableContext addContainerElementNode(java.lang.String,java.lang.Class<?>,java.lang.Integer)
meth public abstract jakarta.validation.ConstraintValidatorContext$ConstraintViolationBuilder$LeafNodeBuilderCustomizableContext addBeanNode()
meth public abstract jakarta.validation.ConstraintValidatorContext$ConstraintViolationBuilder$NodeBuilderCustomizableContext addNode(java.lang.String)
meth public abstract jakarta.validation.ConstraintValidatorContext$ConstraintViolationBuilder$NodeBuilderCustomizableContext addPropertyNode(java.lang.String)

CLSS public abstract interface static jakarta.validation.ConstraintValidatorContext$ConstraintViolationBuilder$NodeContextBuilder
 outer jakarta.validation.ConstraintValidatorContext$ConstraintViolationBuilder
meth public abstract jakarta.validation.ConstraintValidatorContext addConstraintViolation()
meth public abstract jakarta.validation.ConstraintValidatorContext$ConstraintViolationBuilder$ContainerElementNodeBuilderCustomizableContext addContainerElementNode(java.lang.String,java.lang.Class<?>,java.lang.Integer)
meth public abstract jakarta.validation.ConstraintValidatorContext$ConstraintViolationBuilder$LeafNodeBuilderCustomizableContext addBeanNode()
meth public abstract jakarta.validation.ConstraintValidatorContext$ConstraintViolationBuilder$NodeBuilderCustomizableContext addNode(java.lang.String)
meth public abstract jakarta.validation.ConstraintValidatorContext$ConstraintViolationBuilder$NodeBuilderCustomizableContext addPropertyNode(java.lang.String)
meth public abstract jakarta.validation.ConstraintValidatorContext$ConstraintViolationBuilder$NodeBuilderDefinedContext atIndex(java.lang.Integer)
meth public abstract jakarta.validation.ConstraintValidatorContext$ConstraintViolationBuilder$NodeBuilderDefinedContext atKey(java.lang.Object)

CLSS public abstract interface jakarta.validation.ConstraintValidatorFactory
meth public abstract <%0 extends jakarta.validation.ConstraintValidator<?,?>> {%%0} getInstance(java.lang.Class<{%%0}>)
meth public abstract void releaseInstance(jakarta.validation.ConstraintValidator<?,?>)

CLSS public abstract interface jakarta.validation.ConstraintViolation<%0 extends java.lang.Object>
meth public abstract <%0 extends java.lang.Object> {%%0} unwrap(java.lang.Class<{%%0}>)
meth public abstract jakarta.validation.Path getPropertyPath()
meth public abstract jakarta.validation.metadata.ConstraintDescriptor<?> getConstraintDescriptor()
meth public abstract java.lang.Class<{jakarta.validation.ConstraintViolation%0}> getRootBeanClass()
meth public abstract java.lang.Object getExecutableReturnValue()
meth public abstract java.lang.Object getInvalidValue()
meth public abstract java.lang.Object getLeafBean()
meth public abstract java.lang.Object[] getExecutableParameters()
meth public abstract java.lang.String getMessage()
meth public abstract java.lang.String getMessageTemplate()
meth public abstract {jakarta.validation.ConstraintViolation%0} getRootBean()

CLSS public jakarta.validation.ConstraintViolationException
cons public <init>(java.lang.String,java.util.Set<? extends jakarta.validation.ConstraintViolation<?>>)
cons public <init>(java.util.Set<? extends jakarta.validation.ConstraintViolation<?>>)
meth public java.util.Set<jakarta.validation.ConstraintViolation<?>> getConstraintViolations()
supr jakarta.validation.ValidationException
hfds constraintViolations

CLSS public final !enum jakarta.validation.ElementKind
fld public final static jakarta.validation.ElementKind BEAN
fld public final static jakarta.validation.ElementKind CONSTRUCTOR
fld public final static jakarta.validation.ElementKind CONTAINER_ELEMENT
fld public final static jakarta.validation.ElementKind CROSS_PARAMETER
fld public final static jakarta.validation.ElementKind METHOD
fld public final static jakarta.validation.ElementKind PARAMETER
fld public final static jakarta.validation.ElementKind PROPERTY
fld public final static jakarta.validation.ElementKind RETURN_VALUE
meth public static jakarta.validation.ElementKind valueOf(java.lang.String)
meth public static jakarta.validation.ElementKind[] values()
supr java.lang.Enum<jakarta.validation.ElementKind>

CLSS public jakarta.validation.GroupDefinitionException
cons public <init>()
cons public <init>(java.lang.String)
cons public <init>(java.lang.String,java.lang.Throwable)
cons public <init>(java.lang.Throwable)
supr jakarta.validation.ValidationException

CLSS public abstract interface !annotation jakarta.validation.GroupSequence
 anno 0 java.lang.annotation.Documented()
 anno 0 java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy value=RUNTIME)
 anno 0 java.lang.annotation.Target(java.lang.annotation.ElementType[] value=[TYPE])
intf java.lang.annotation.Annotation
meth public abstract java.lang.Class<?>[] value()

CLSS public abstract interface jakarta.validation.MessageInterpolator
innr public abstract interface static Context
meth public abstract java.lang.String interpolate(java.lang.String,jakarta.validation.MessageInterpolator$Context)
meth public abstract java.lang.String interpolate(java.lang.String,jakarta.validation.MessageInterpolator$Context,java.util.Locale)

CLSS public abstract interface static jakarta.validation.MessageInterpolator$Context
 outer jakarta.validation.MessageInterpolator
meth public abstract <%0 extends java.lang.Object> {%%0} unwrap(java.lang.Class<{%%0}>)
meth public abstract jakarta.validation.metadata.ConstraintDescriptor<?> getConstraintDescriptor()
meth public abstract java.lang.Object getValidatedValue()

CLSS public jakarta.validation.NoProviderFoundException
cons public <init>()
cons public <init>(java.lang.String)
cons public <init>(java.lang.String,java.lang.Throwable)
cons public <init>(java.lang.Throwable)
supr jakarta.validation.ValidationException

CLSS public abstract interface !annotation jakarta.validation.OverridesAttribute
 anno 0 java.lang.annotation.Documented()
 anno 0 java.lang.annotation.Repeatable(java.lang.Class<? extends java.lang.annotation.Annotation> value=class jakarta.validation.OverridesAttribute$List)
 anno 0 java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy value=RUNTIME)
 anno 0 java.lang.annotation.Target(java.lang.annotation.ElementType[] value=[METHOD])
innr public abstract interface static !annotation List
intf java.lang.annotation.Annotation
meth public abstract !hasdefault int constraintIndex() value= -1
meth public abstract !hasdefault java.lang.String name() value= ""
meth public abstract java.lang.Class<? extends java.lang.annotation.Annotation> constraint()

CLSS public abstract interface static !annotation jakarta.validation.OverridesAttribute$List
 outer jakarta.validation.OverridesAttribute
 anno 0 java.lang.annotation.Documented()
 anno 0 java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy value=RUNTIME)
 anno 0 java.lang.annotation.Target(java.lang.annotation.ElementType[] value=[METHOD])
intf java.lang.annotation.Annotation
meth public abstract jakarta.validation.OverridesAttribute[] value()

CLSS public abstract interface jakarta.validation.ParameterNameProvider
meth public abstract java.util.List<java.lang.String> getParameterNames(java.lang.reflect.Constructor<?>)
meth public abstract java.util.List<java.lang.String> getParameterNames(java.lang.reflect.Method)

CLSS public abstract interface jakarta.validation.Path
innr public abstract interface static BeanNode
innr public abstract interface static ConstructorNode
innr public abstract interface static ContainerElementNode
innr public abstract interface static CrossParameterNode
innr public abstract interface static MethodNode
innr public abstract interface static Node
innr public abstract interface static ParameterNode
innr public abstract interface static PropertyNode
innr public abstract interface static ReturnValueNode
intf java.lang.Iterable<jakarta.validation.Path$Node>
meth public abstract java.lang.String toString()

CLSS public abstract interface static jakarta.validation.Path$BeanNode
 outer jakarta.validation.Path
intf jakarta.validation.Path$Node
meth public abstract java.lang.Class<?> getContainerClass()
meth public abstract java.lang.Integer getTypeArgumentIndex()

CLSS public abstract interface static jakarta.validation.Path$ConstructorNode
 outer jakarta.validation.Path
intf jakarta.validation.Path$Node
meth public abstract java.util.List<java.lang.Class<?>> getParameterTypes()

CLSS public abstract interface static jakarta.validation.Path$ContainerElementNode
 outer jakarta.validation.Path
intf jakarta.validation.Path$Node
meth public abstract java.lang.Class<?> getContainerClass()
meth public abstract java.lang.Integer getTypeArgumentIndex()

CLSS public abstract interface static jakarta.validation.Path$CrossParameterNode
 outer jakarta.validation.Path
intf jakarta.validation.Path$Node

CLSS public abstract interface static jakarta.validation.Path$MethodNode
 outer jakarta.validation.Path
intf jakarta.validation.Path$Node
meth public abstract java.util.List<java.lang.Class<?>> getParameterTypes()

CLSS public abstract interface static jakarta.validation.Path$Node
 outer jakarta.validation.Path
meth public abstract <%0 extends jakarta.validation.Path$Node> {%%0} as(java.lang.Class<{%%0}>)
meth public abstract boolean isInIterable()
meth public abstract jakarta.validation.ElementKind getKind()
meth public abstract java.lang.Integer getIndex()
meth public abstract java.lang.Object getKey()
meth public abstract java.lang.String getName()
meth public abstract java.lang.String toString()

CLSS public abstract interface static jakarta.validation.Path$ParameterNode
 outer jakarta.validation.Path
intf jakarta.validation.Path$Node
meth public abstract int getParameterIndex()

CLSS public abstract interface static jakarta.validation.Path$PropertyNode
 outer jakarta.validation.Path
intf jakarta.validation.Path$Node
meth public abstract java.lang.Class<?> getContainerClass()
meth public abstract java.lang.Integer getTypeArgumentIndex()

CLSS public abstract interface static jakarta.validation.Path$ReturnValueNode
 outer jakarta.validation.Path
intf jakarta.validation.Path$Node

CLSS public abstract interface jakarta.validation.Payload

CLSS public abstract interface !annotation jakarta.validation.ReportAsSingleViolation
 anno 0 java.lang.annotation.Documented()
 anno 0 java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy value=RUNTIME)
 anno 0 java.lang.annotation.Target(java.lang.annotation.ElementType[] value=[ANNOTATION_TYPE])
intf java.lang.annotation.Annotation

CLSS public abstract interface jakarta.validation.TraversableResolver
meth public abstract boolean isCascadable(java.lang.Object,jakarta.validation.Path$Node,java.lang.Class<?>,jakarta.validation.Path,java.lang.annotation.ElementType)
meth public abstract boolean isReachable(java.lang.Object,jakarta.validation.Path$Node,java.lang.Class<?>,jakarta.validation.Path,java.lang.annotation.ElementType)

CLSS public jakarta.validation.UnexpectedTypeException
cons public <init>()
cons public <init>(java.lang.String)
cons public <init>(java.lang.String,java.lang.Throwable)
cons public <init>(java.lang.Throwable)
supr jakarta.validation.ConstraintDeclarationException

CLSS public abstract interface !annotation jakarta.validation.Valid
 anno 0 java.lang.annotation.Documented()
 anno 0 java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy value=RUNTIME)
 anno 0 java.lang.annotation.Target(java.lang.annotation.ElementType[] value=[METHOD, FIELD, CONSTRUCTOR, PARAMETER, TYPE_USE])
intf java.lang.annotation.Annotation

CLSS public jakarta.validation.Validation
cons public <init>()
meth public static <%0 extends jakarta.validation.Configuration<{%%0}>, %1 extends jakarta.validation.spi.ValidationProvider<{%%0}>> jakarta.validation.bootstrap.ProviderSpecificBootstrap<{%%0}> byProvider(java.lang.Class<{%%1}>)
meth public static jakarta.validation.ValidatorFactory buildDefaultValidatorFactory()
meth public static jakarta.validation.bootstrap.GenericBootstrap byDefaultProvider()
supr java.lang.Object
hcls DefaultValidationProviderResolver,GenericBootstrapImpl,GetValidationProviderListAction,NewProviderInstance,ProviderSpecificBootstrapImpl

CLSS public jakarta.validation.ValidationException
cons public <init>()
cons public <init>(java.lang.String)
cons public <init>(java.lang.String,java.lang.Throwable)
cons public <init>(java.lang.Throwable)
supr java.lang.RuntimeException

CLSS public abstract interface jakarta.validation.ValidationProviderResolver
meth public abstract java.util.List<jakarta.validation.spi.ValidationProvider<?>> getValidationProviders()

CLSS public abstract interface jakarta.validation.Validator
meth public abstract !varargs <%0 extends java.lang.Object> java.util.Set<jakarta.validation.ConstraintViolation<{%%0}>> validate({%%0},java.lang.Class<?>[])
meth public abstract !varargs <%0 extends java.lang.Object> java.util.Set<jakarta.validation.ConstraintViolation<{%%0}>> validateProperty({%%0},java.lang.String,java.lang.Class<?>[])
meth public abstract !varargs <%0 extends java.lang.Object> java.util.Set<jakarta.validation.ConstraintViolation<{%%0}>> validateValue(java.lang.Class<{%%0}>,java.lang.String,java.lang.Object,java.lang.Class<?>[])
meth public abstract <%0 extends java.lang.Object> {%%0} unwrap(java.lang.Class<{%%0}>)
meth public abstract jakarta.validation.executable.ExecutableValidator forExecutables()
meth public abstract jakarta.validation.metadata.BeanDescriptor getConstraintsForClass(java.lang.Class<?>)

CLSS public abstract interface jakarta.validation.ValidatorContext
meth public abstract jakarta.validation.Validator getValidator()
meth public abstract jakarta.validation.ValidatorContext addValueExtractor(jakarta.validation.valueextraction.ValueExtractor<?>)
meth public abstract jakarta.validation.ValidatorContext clockProvider(jakarta.validation.ClockProvider)
meth public abstract jakarta.validation.ValidatorContext constraintValidatorFactory(jakarta.validation.ConstraintValidatorFactory)
meth public abstract jakarta.validation.ValidatorContext messageInterpolator(jakarta.validation.MessageInterpolator)
meth public abstract jakarta.validation.ValidatorContext parameterNameProvider(jakarta.validation.ParameterNameProvider)
meth public abstract jakarta.validation.ValidatorContext traversableResolver(jakarta.validation.TraversableResolver)

CLSS public abstract interface jakarta.validation.ValidatorFactory
intf java.lang.AutoCloseable
meth public abstract <%0 extends java.lang.Object> {%%0} unwrap(java.lang.Class<{%%0}>)
meth public abstract jakarta.validation.ClockProvider getClockProvider()
meth public abstract jakarta.validation.ConstraintValidatorFactory getConstraintValidatorFactory()
meth public abstract jakarta.validation.MessageInterpolator getMessageInterpolator()
meth public abstract jakarta.validation.ParameterNameProvider getParameterNameProvider()
meth public abstract jakarta.validation.TraversableResolver getTraversableResolver()
meth public abstract jakarta.validation.Validator getValidator()
meth public abstract jakarta.validation.ValidatorContext usingContext()
meth public abstract void close()

CLSS public abstract interface jakarta.validation.bootstrap.GenericBootstrap
meth public abstract jakarta.validation.Configuration<?> configure()
meth public abstract jakarta.validation.bootstrap.GenericBootstrap providerResolver(jakarta.validation.ValidationProviderResolver)

CLSS public abstract interface jakarta.validation.bootstrap.ProviderSpecificBootstrap<%0 extends jakarta.validation.Configuration<{jakarta.validation.bootstrap.ProviderSpecificBootstrap%0}>>
meth public abstract jakarta.validation.bootstrap.ProviderSpecificBootstrap<{jakarta.validation.bootstrap.ProviderSpecificBootstrap%0}> providerResolver(jakarta.validation.ValidationProviderResolver)
meth public abstract {jakarta.validation.bootstrap.ProviderSpecificBootstrap%0} configure()

CLSS public abstract interface !annotation jakarta.validation.constraints.AssertFalse
 anno 0 jakarta.validation.Constraint(java.lang.Class<? extends jakarta.validation.ConstraintValidator<?,?>>[] validatedBy=[])
 anno 0 java.lang.annotation.Documented()
 anno 0 java.lang.annotation.Repeatable(java.lang.Class<? extends java.lang.annotation.Annotation> value=class jakarta.validation.constraints.AssertFalse$List)
 anno 0 java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy value=RUNTIME)
 anno 0 java.lang.annotation.Target(java.lang.annotation.ElementType[] value=[METHOD, FIELD, ANNOTATION_TYPE, CONSTRUCTOR, PARAMETER, TYPE_USE])
innr public abstract interface static !annotation List
intf java.lang.annotation.Annotation
meth public abstract !hasdefault java.lang.Class<? extends jakarta.validation.Payload>[] payload() value= []
meth public abstract !hasdefault java.lang.Class<?>[] groups() value= []
meth public abstract !hasdefault java.lang.String message() value= "{jakarta.validation.constraints.AssertFalse.message}"

CLSS public abstract interface static !annotation jakarta.validation.constraints.AssertFalse$List
 outer jakarta.validation.constraints.AssertFalse
 anno 0 java.lang.annotation.Documented()
 anno 0 java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy value=RUNTIME)
 anno 0 java.lang.annotation.Target(java.lang.annotation.ElementType[] value=[METHOD, FIELD, ANNOTATION_TYPE, CONSTRUCTOR, PARAMETER, TYPE_USE])
intf java.lang.annotation.Annotation
meth public abstract jakarta.validation.constraints.AssertFalse[] value()

CLSS public abstract interface !annotation jakarta.validation.constraints.AssertTrue
 anno 0 jakarta.validation.Constraint(java.lang.Class<? extends jakarta.validation.ConstraintValidator<?,?>>[] validatedBy=[])
 anno 0 java.lang.annotation.Documented()
 anno 0 java.lang.annotation.Repeatable(java.lang.Class<? extends java.lang.annotation.Annotation> value=class jakarta.validation.constraints.AssertTrue$List)
 anno 0 java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy value=RUNTIME)
 anno 0 java.lang.annotation.Target(java.lang.annotation.ElementType[] value=[METHOD, FIELD, ANNOTATION_TYPE, CONSTRUCTOR, PARAMETER, TYPE_USE])
innr public abstract interface static !annotation List
intf java.lang.annotation.Annotation
meth public abstract !hasdefault java.lang.Class<? extends jakarta.validation.Payload>[] payload() value= []
meth public abstract !hasdefault java.lang.Class<?>[] groups() value= []
meth public abstract !hasdefault java.lang.String message() value= "{jakarta.validation.constraints.AssertTrue.message}"

CLSS public abstract interface static !annotation jakarta.validation.constraints.AssertTrue$List
 outer jakarta.validation.constraints.AssertTrue
 anno 0 java.lang.annotation.Documented()
 anno 0 java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy value=RUNTIME)
 anno 0 java.lang.annotation.Target(java.lang.annotation.ElementType[] value=[METHOD, FIELD, ANNOTATION_TYPE, CONSTRUCTOR, PARAMETER, TYPE_USE])
intf java.lang.annotation.Annotation
meth public abstract jakarta.validation.constraints.AssertTrue[] value()

CLSS public abstract interface !annotation jakarta.validation.constraints.DecimalMax
 anno 0 jakarta.validation.Constraint(java.lang.Class<? extends jakarta.validation.ConstraintValidator<?,?>>[] validatedBy=[])
 anno 0 java.lang.annotation.Documented()
 anno 0 java.lang.annotation.Repeatable(java.lang.Class<? extends java.lang.annotation.Annotation> value=class jakarta.validation.constraints.DecimalMax$List)
 anno 0 java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy value=RUNTIME)
 anno 0 java.lang.annotation.Target(java.lang.annotation.ElementType[] value=[METHOD, FIELD, ANNOTATION_TYPE, CONSTRUCTOR, PARAMETER, TYPE_USE])
innr public abstract interface static !annotation List
intf java.lang.annotation.Annotation
meth public abstract !hasdefault boolean inclusive() value= true
meth public abstract !hasdefault java.lang.Class<? extends jakarta.validation.Payload>[] payload() value= []
meth public abstract !hasdefault java.lang.Class<?>[] groups() value= []
meth public abstract !hasdefault java.lang.String message() value= "{jakarta.validation.constraints.DecimalMax.message}"
meth public abstract java.lang.String value()

CLSS public abstract interface static !annotation jakarta.validation.constraints.DecimalMax$List
 outer jakarta.validation.constraints.DecimalMax
 anno 0 java.lang.annotation.Documented()
 anno 0 java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy value=RUNTIME)
 anno 0 java.lang.annotation.Target(java.lang.annotation.ElementType[] value=[METHOD, FIELD, ANNOTATION_TYPE, CONSTRUCTOR, PARAMETER, TYPE_USE])
intf java.lang.annotation.Annotation
meth public abstract jakarta.validation.constraints.DecimalMax[] value()

CLSS public abstract interface !annotation jakarta.validation.constraints.DecimalMin
 anno 0 jakarta.validation.Constraint(java.lang.Class<? extends jakarta.validation.ConstraintValidator<?,?>>[] validatedBy=[])
 anno 0 java.lang.annotation.Documented()
 anno 0 java.lang.annotation.Repeatable(java.lang.Class<? extends java.lang.annotation.Annotation> value=class jakarta.validation.constraints.DecimalMin$List)
 anno 0 java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy value=RUNTIME)
 anno 0 java.lang.annotation.Target(java.lang.annotation.ElementType[] value=[METHOD, FIELD, ANNOTATION_TYPE, CONSTRUCTOR, PARAMETER, TYPE_USE])
innr public abstract interface static !annotation List
intf java.lang.annotation.Annotation
meth public abstract !hasdefault boolean inclusive() value= true
meth public abstract !hasdefault java.lang.Class<? extends jakarta.validation.Payload>[] payload() value= []
meth public abstract !hasdefault java.lang.Class<?>[] groups() value= []
meth public abstract !hasdefault java.lang.String message() value= "{jakarta.validation.constraints.DecimalMin.message}"
meth public abstract java.lang.String value()

CLSS public abstract interface static !annotation jakarta.validation.constraints.DecimalMin$List
 outer jakarta.validation.constraints.DecimalMin
 anno 0 java.lang.annotation.Documented()
 anno 0 java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy value=RUNTIME)
 anno 0 java.lang.annotation.Target(java.lang.annotation.ElementType[] value=[METHOD, FIELD, ANNOTATION_TYPE, CONSTRUCTOR, PARAMETER, TYPE_USE])
intf java.lang.annotation.Annotation
meth public abstract jakarta.validation.constraints.DecimalMin[] value()

CLSS public abstract interface !annotation jakarta.validation.constraints.Digits
 anno 0 jakarta.validation.Constraint(java.lang.Class<? extends jakarta.validation.ConstraintValidator<?,?>>[] validatedBy=[])
 anno 0 java.lang.annotation.Documented()
 anno 0 java.lang.annotation.Repeatable(java.lang.Class<? extends java.lang.annotation.Annotation> value=class jakarta.validation.constraints.Digits$List)
 anno 0 java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy value=RUNTIME)
 anno 0 java.lang.annotation.Target(java.lang.annotation.ElementType[] value=[METHOD, FIELD, ANNOTATION_TYPE, CONSTRUCTOR, PARAMETER, TYPE_USE])
innr public abstract interface static !annotation List
intf java.lang.annotation.Annotation
meth public abstract !hasdefault java.lang.Class<? extends jakarta.validation.Payload>[] payload() value= []
meth public abstract !hasdefault java.lang.Class<?>[] groups() value= []
meth public abstract !hasdefault java.lang.String message() value= "{jakarta.validation.constraints.Digits.message}"
meth public abstract int fraction()
meth public abstract int integer()

CLSS public abstract interface static !annotation jakarta.validation.constraints.Digits$List
 outer jakarta.validation.constraints.Digits
 anno 0 java.lang.annotation.Documented()
 anno 0 java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy value=RUNTIME)
 anno 0 java.lang.annotation.Target(java.lang.annotation.ElementType[] value=[METHOD, FIELD, ANNOTATION_TYPE, CONSTRUCTOR, PARAMETER, TYPE_USE])
intf java.lang.annotation.Annotation
meth public abstract jakarta.validation.constraints.Digits[] value()

CLSS public abstract interface !annotation jakarta.validation.constraints.Email
 anno 0 jakarta.validation.Constraint(java.lang.Class<? extends jakarta.validation.ConstraintValidator<?,?>>[] validatedBy=[])
 anno 0 java.lang.annotation.Documented()
 anno 0 java.lang.annotation.Repeatable(java.lang.Class<? extends java.lang.annotation.Annotation> value=class jakarta.validation.constraints.Email$List)
 anno 0 java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy value=RUNTIME)
 anno 0 java.lang.annotation.Target(java.lang.annotation.ElementType[] value=[METHOD, FIELD, ANNOTATION_TYPE, CONSTRUCTOR, PARAMETER, TYPE_USE])
innr public abstract interface static !annotation List
intf java.lang.annotation.Annotation
meth public abstract !hasdefault jakarta.validation.constraints.Pattern$Flag[] flags() value= []
meth public abstract !hasdefault java.lang.Class<? extends jakarta.validation.Payload>[] payload() value= []
meth public abstract !hasdefault java.lang.Class<?>[] groups() value= []
meth public abstract !hasdefault java.lang.String message() value= "{jakarta.validation.constraints.Email.message}"
meth public abstract !hasdefault java.lang.String regexp() value= ".*"

CLSS public abstract interface static !annotation jakarta.validation.constraints.Email$List
 outer jakarta.validation.constraints.Email
 anno 0 java.lang.annotation.Documented()
 anno 0 java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy value=RUNTIME)
 anno 0 java.lang.annotation.Target(java.lang.annotation.ElementType[] value=[METHOD, FIELD, ANNOTATION_TYPE, CONSTRUCTOR, PARAMETER, TYPE_USE])
intf java.lang.annotation.Annotation
meth public abstract jakarta.validation.constraints.Email[] value()

CLSS public abstract interface !annotation jakarta.validation.constraints.Future
 anno 0 jakarta.validation.Constraint(java.lang.Class<? extends jakarta.validation.ConstraintValidator<?,?>>[] validatedBy=[])
 anno 0 java.lang.annotation.Documented()
 anno 0 java.lang.annotation.Repeatable(java.lang.Class<? extends java.lang.annotation.Annotation> value=class jakarta.validation.constraints.Future$List)
 anno 0 java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy value=RUNTIME)
 anno 0 java.lang.annotation.Target(java.lang.annotation.ElementType[] value=[METHOD, FIELD, ANNOTATION_TYPE, CONSTRUCTOR, PARAMETER, TYPE_USE])
innr public abstract interface static !annotation List
intf java.lang.annotation.Annotation
meth public abstract !hasdefault java.lang.Class<? extends jakarta.validation.Payload>[] payload() value= []
meth public abstract !hasdefault java.lang.Class<?>[] groups() value= []
meth public abstract !hasdefault java.lang.String message() value= "{jakarta.validation.constraints.Future.message}"

CLSS public abstract interface static !annotation jakarta.validation.constraints.Future$List
 outer jakarta.validation.constraints.Future
 anno 0 java.lang.annotation.Documented()
 anno 0 java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy value=RUNTIME)
 anno 0 java.lang.annotation.Target(java.lang.annotation.ElementType[] value=[METHOD, FIELD, ANNOTATION_TYPE, CONSTRUCTOR, PARAMETER, TYPE_USE])
intf java.lang.annotation.Annotation
meth public abstract jakarta.validation.constraints.Future[] value()

CLSS public abstract interface !annotation jakarta.validation.constraints.FutureOrPresent
 anno 0 jakarta.validation.Constraint(java.lang.Class<? extends jakarta.validation.ConstraintValidator<?,?>>[] validatedBy=[])
 anno 0 java.lang.annotation.Documented()
 anno 0 java.lang.annotation.Repeatable(java.lang.Class<? extends java.lang.annotation.Annotation> value=class jakarta.validation.constraints.FutureOrPresent$List)
 anno 0 java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy value=RUNTIME)
 anno 0 java.lang.annotation.Target(java.lang.annotation.ElementType[] value=[METHOD, FIELD, ANNOTATION_TYPE, CONSTRUCTOR, PARAMETER, TYPE_USE])
innr public abstract interface static !annotation List
intf java.lang.annotation.Annotation
meth public abstract !hasdefault java.lang.Class<? extends jakarta.validation.Payload>[] payload() value= []
meth public abstract !hasdefault java.lang.Class<?>[] groups() value= []
meth public abstract !hasdefault java.lang.String message() value= "{jakarta.validation.constraints.FutureOrPresent.message}"

CLSS public abstract interface static !annotation jakarta.validation.constraints.FutureOrPresent$List
 outer jakarta.validation.constraints.FutureOrPresent
 anno 0 java.lang.annotation.Documented()
 anno 0 java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy value=RUNTIME)
 anno 0 java.lang.annotation.Target(java.lang.annotation.ElementType[] value=[METHOD, FIELD, ANNOTATION_TYPE, CONSTRUCTOR, PARAMETER, TYPE_USE])
intf java.lang.annotation.Annotation
meth public abstract jakarta.validation.constraints.FutureOrPresent[] value()

CLSS public abstract interface !annotation jakarta.validation.constraints.Max
 anno 0 jakarta.validation.Constraint(java.lang.Class<? extends jakarta.validation.ConstraintValidator<?,?>>[] validatedBy=[])
 anno 0 java.lang.annotation.Documented()
 anno 0 java.lang.annotation.Repeatable(java.lang.Class<? extends java.lang.annotation.Annotation> value=class jakarta.validation.constraints.Max$List)
 anno 0 java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy value=RUNTIME)
 anno 0 java.lang.annotation.Target(java.lang.annotation.ElementType[] value=[METHOD, FIELD, ANNOTATION_TYPE, CONSTRUCTOR, PARAMETER, TYPE_USE])
innr public abstract interface static !annotation List
intf java.lang.annotation.Annotation
meth public abstract !hasdefault java.lang.Class<? extends jakarta.validation.Payload>[] payload() value= []
meth public abstract !hasdefault java.lang.Class<?>[] groups() value= []
meth public abstract !hasdefault java.lang.String message() value= "{jakarta.validation.constraints.Max.message}"
meth public abstract long value()

CLSS public abstract interface static !annotation jakarta.validation.constraints.Max$List
 outer jakarta.validation.constraints.Max
 anno 0 java.lang.annotation.Documented()
 anno 0 java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy value=RUNTIME)
 anno 0 java.lang.annotation.Target(java.lang.annotation.ElementType[] value=[METHOD, FIELD, ANNOTATION_TYPE, CONSTRUCTOR, PARAMETER, TYPE_USE])
intf java.lang.annotation.Annotation
meth public abstract jakarta.validation.constraints.Max[] value()

CLSS public abstract interface !annotation jakarta.validation.constraints.Min
 anno 0 jakarta.validation.Constraint(java.lang.Class<? extends jakarta.validation.ConstraintValidator<?,?>>[] validatedBy=[])
 anno 0 java.lang.annotation.Documented()
 anno 0 java.lang.annotation.Repeatable(java.lang.Class<? extends java.lang.annotation.Annotation> value=class jakarta.validation.constraints.Min$List)
 anno 0 java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy value=RUNTIME)
 anno 0 java.lang.annotation.Target(java.lang.annotation.ElementType[] value=[METHOD, FIELD, ANNOTATION_TYPE, CONSTRUCTOR, PARAMETER, TYPE_USE])
innr public abstract interface static !annotation List
intf java.lang.annotation.Annotation
meth public abstract !hasdefault java.lang.Class<? extends jakarta.validation.Payload>[] payload() value= []
meth public abstract !hasdefault java.lang.Class<?>[] groups() value= []
meth public abstract !hasdefault java.lang.String message() value= "{jakarta.validation.constraints.Min.message}"
meth public abstract long value()

CLSS public abstract interface static !annotation jakarta.validation.constraints.Min$List
 outer jakarta.validation.constraints.Min
 anno 0 java.lang.annotation.Documented()
 anno 0 java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy value=RUNTIME)
 anno 0 java.lang.annotation.Target(java.lang.annotation.ElementType[] value=[METHOD, FIELD, ANNOTATION_TYPE, CONSTRUCTOR, PARAMETER, TYPE_USE])
intf java.lang.annotation.Annotation
meth public abstract jakarta.validation.constraints.Min[] value()

CLSS public abstract interface !annotation jakarta.validation.constraints.Negative
 anno 0 jakarta.validation.Constraint(java.lang.Class<? extends jakarta.validation.ConstraintValidator<?,?>>[] validatedBy=[])
 anno 0 java.lang.annotation.Documented()
 anno 0 java.lang.annotation.Repeatable(java.lang.Class<? extends java.lang.annotation.Annotation> value=class jakarta.validation.constraints.Negative$List)
 anno 0 java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy value=RUNTIME)
 anno 0 java.lang.annotation.Target(java.lang.annotation.ElementType[] value=[METHOD, FIELD, ANNOTATION_TYPE, CONSTRUCTOR, PARAMETER, TYPE_USE])
innr public abstract interface static !annotation List
intf java.lang.annotation.Annotation
meth public abstract !hasdefault java.lang.Class<? extends jakarta.validation.Payload>[] payload() value= []
meth public abstract !hasdefault java.lang.Class<?>[] groups() value= []
meth public abstract !hasdefault java.lang.String message() value= "{jakarta.validation.constraints.Negative.message}"

CLSS public abstract interface static !annotation jakarta.validation.constraints.Negative$List
 outer jakarta.validation.constraints.Negative
 anno 0 java.lang.annotation.Documented()
 anno 0 java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy value=RUNTIME)
 anno 0 java.lang.annotation.Target(java.lang.annotation.ElementType[] value=[METHOD, FIELD, ANNOTATION_TYPE, CONSTRUCTOR, PARAMETER, TYPE_USE])
intf java.lang.annotation.Annotation
meth public abstract jakarta.validation.constraints.Negative[] value()

CLSS public abstract interface !annotation jakarta.validation.constraints.NegativeOrZero
 anno 0 jakarta.validation.Constraint(java.lang.Class<? extends jakarta.validation.ConstraintValidator<?,?>>[] validatedBy=[])
 anno 0 java.lang.annotation.Documented()
 anno 0 java.lang.annotation.Repeatable(java.lang.Class<? extends java.lang.annotation.Annotation> value=class jakarta.validation.constraints.NegativeOrZero$List)
 anno 0 java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy value=RUNTIME)
 anno 0 java.lang.annotation.Target(java.lang.annotation.ElementType[] value=[METHOD, FIELD, ANNOTATION_TYPE, CONSTRUCTOR, PARAMETER, TYPE_USE])
innr public abstract interface static !annotation List
intf java.lang.annotation.Annotation
meth public abstract !hasdefault java.lang.Class<? extends jakarta.validation.Payload>[] payload() value= []
meth public abstract !hasdefault java.lang.Class<?>[] groups() value= []
meth public abstract !hasdefault java.lang.String message() value= "{jakarta.validation.constraints.NegativeOrZero.message}"

CLSS public abstract interface static !annotation jakarta.validation.constraints.NegativeOrZero$List
 outer jakarta.validation.constraints.NegativeOrZero
 anno 0 java.lang.annotation.Documented()
 anno 0 java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy value=RUNTIME)
 anno 0 java.lang.annotation.Target(java.lang.annotation.ElementType[] value=[METHOD, FIELD, ANNOTATION_TYPE, CONSTRUCTOR, PARAMETER, TYPE_USE])
intf java.lang.annotation.Annotation
meth public abstract jakarta.validation.constraints.NegativeOrZero[] value()

CLSS public abstract interface !annotation jakarta.validation.constraints.NotBlank
 anno 0 jakarta.validation.Constraint(java.lang.Class<? extends jakarta.validation.ConstraintValidator<?,?>>[] validatedBy=[])
 anno 0 java.lang.annotation.Documented()
 anno 0 java.lang.annotation.Repeatable(java.lang.Class<? extends java.lang.annotation.Annotation> value=class jakarta.validation.constraints.NotBlank$List)
 anno 0 java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy value=RUNTIME)
 anno 0 java.lang.annotation.Target(java.lang.annotation.ElementType[] value=[METHOD, FIELD, ANNOTATION_TYPE, CONSTRUCTOR, PARAMETER, TYPE_USE])
innr public abstract interface static !annotation List
intf java.lang.annotation.Annotation
meth public abstract !hasdefault java.lang.Class<? extends jakarta.validation.Payload>[] payload() value= []
meth public abstract !hasdefault java.lang.Class<?>[] groups() value= []
meth public abstract !hasdefault java.lang.String message() value= "{jakarta.validation.constraints.NotBlank.message}"

CLSS public abstract interface static !annotation jakarta.validation.constraints.NotBlank$List
 outer jakarta.validation.constraints.NotBlank
 anno 0 java.lang.annotation.Documented()
 anno 0 java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy value=RUNTIME)
 anno 0 java.lang.annotation.Target(java.lang.annotation.ElementType[] value=[METHOD, FIELD, ANNOTATION_TYPE, CONSTRUCTOR, PARAMETER, TYPE_USE])
intf java.lang.annotation.Annotation
meth public abstract jakarta.validation.constraints.NotBlank[] value()

CLSS public abstract interface !annotation jakarta.validation.constraints.NotEmpty
 anno 0 jakarta.validation.Constraint(java.lang.Class<? extends jakarta.validation.ConstraintValidator<?,?>>[] validatedBy=[])
 anno 0 java.lang.annotation.Documented()
 anno 0 java.lang.annotation.Repeatable(java.lang.Class<? extends java.lang.annotation.Annotation> value=class jakarta.validation.constraints.NotEmpty$List)
 anno 0 java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy value=RUNTIME)
 anno 0 java.lang.annotation.Target(java.lang.annotation.ElementType[] value=[METHOD, FIELD, ANNOTATION_TYPE, CONSTRUCTOR, PARAMETER, TYPE_USE])
innr public abstract interface static !annotation List
intf java.lang.annotation.Annotation
meth public abstract !hasdefault java.lang.Class<? extends jakarta.validation.Payload>[] payload() value= []
meth public abstract !hasdefault java.lang.Class<?>[] groups() value= []
meth public abstract !hasdefault java.lang.String message() value= "{jakarta.validation.constraints.NotEmpty.message}"

CLSS public abstract interface static !annotation jakarta.validation.constraints.NotEmpty$List
 outer jakarta.validation.constraints.NotEmpty
 anno 0 java.lang.annotation.Documented()
 anno 0 java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy value=RUNTIME)
 anno 0 java.lang.annotation.Target(java.lang.annotation.ElementType[] value=[METHOD, FIELD, ANNOTATION_TYPE, CONSTRUCTOR, PARAMETER, TYPE_USE])
intf java.lang.annotation.Annotation
meth public abstract jakarta.validation.constraints.NotEmpty[] value()

CLSS public abstract interface !annotation jakarta.validation.constraints.NotNull
 anno 0 jakarta.validation.Constraint(java.lang.Class<? extends jakarta.validation.ConstraintValidator<?,?>>[] validatedBy=[])
 anno 0 java.lang.annotation.Documented()
 anno 0 java.lang.annotation.Repeatable(java.lang.Class<? extends java.lang.annotation.Annotation> value=class jakarta.validation.constraints.NotNull$List)
 anno 0 java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy value=RUNTIME)
 anno 0 java.lang.annotation.Target(java.lang.annotation.ElementType[] value=[METHOD, FIELD, ANNOTATION_TYPE, CONSTRUCTOR, PARAMETER, TYPE_USE])
innr public abstract interface static !annotation List
intf java.lang.annotation.Annotation
meth public abstract !hasdefault java.lang.Class<? extends jakarta.validation.Payload>[] payload() value= []
meth public abstract !hasdefault java.lang.Class<?>[] groups() value= []
meth public abstract !hasdefault java.lang.String message() value= "{jakarta.validation.constraints.NotNull.message}"

CLSS public abstract interface static !annotation jakarta.validation.constraints.NotNull$List
 outer jakarta.validation.constraints.NotNull
 anno 0 java.lang.annotation.Documented()
 anno 0 java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy value=RUNTIME)
 anno 0 java.lang.annotation.Target(java.lang.annotation.ElementType[] value=[METHOD, FIELD, ANNOTATION_TYPE, CONSTRUCTOR, PARAMETER, TYPE_USE])
intf java.lang.annotation.Annotation
meth public abstract jakarta.validation.constraints.NotNull[] value()

CLSS public abstract interface !annotation jakarta.validation.constraints.Null
 anno 0 jakarta.validation.Constraint(java.lang.Class<? extends jakarta.validation.ConstraintValidator<?,?>>[] validatedBy=[])
 anno 0 java.lang.annotation.Documented()
 anno 0 java.lang.annotation.Repeatable(java.lang.Class<? extends java.lang.annotation.Annotation> value=class jakarta.validation.constraints.Null$List)
 anno 0 java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy value=RUNTIME)
 anno 0 java.lang.annotation.Target(java.lang.annotation.ElementType[] value=[METHOD, FIELD, ANNOTATION_TYPE, CONSTRUCTOR, PARAMETER, TYPE_USE])
innr public abstract interface static !annotation List
intf java.lang.annotation.Annotation
meth public abstract !hasdefault java.lang.Class<? extends jakarta.validation.Payload>[] payload() value= []
meth public abstract !hasdefault java.lang.Class<?>[] groups() value= []
meth public abstract !hasdefault java.lang.String message() value= "{jakarta.validation.constraints.Null.message}"

CLSS public abstract interface static !annotation jakarta.validation.constraints.Null$List
 outer jakarta.validation.constraints.Null
 anno 0 java.lang.annotation.Documented()
 anno 0 java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy value=RUNTIME)
 anno 0 java.lang.annotation.Target(java.lang.annotation.ElementType[] value=[METHOD, FIELD, ANNOTATION_TYPE, CONSTRUCTOR, PARAMETER, TYPE_USE])
intf java.lang.annotation.Annotation
meth public abstract jakarta.validation.constraints.Null[] value()

CLSS public abstract interface !annotation jakarta.validation.constraints.Past
 anno 0 jakarta.validation.Constraint(java.lang.Class<? extends jakarta.validation.ConstraintValidator<?,?>>[] validatedBy=[])
 anno 0 java.lang.annotation.Documented()
 anno 0 java.lang.annotation.Repeatable(java.lang.Class<? extends java.lang.annotation.Annotation> value=class jakarta.validation.constraints.Past$List)
 anno 0 java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy value=RUNTIME)
 anno 0 java.lang.annotation.Target(java.lang.annotation.ElementType[] value=[METHOD, FIELD, ANNOTATION_TYPE, CONSTRUCTOR, PARAMETER, TYPE_USE])
innr public abstract interface static !annotation List
intf java.lang.annotation.Annotation
meth public abstract !hasdefault java.lang.Class<? extends jakarta.validation.Payload>[] payload() value= []
meth public abstract !hasdefault java.lang.Class<?>[] groups() value= []
meth public abstract !hasdefault java.lang.String message() value= "{jakarta.validation.constraints.Past.message}"

CLSS public abstract interface static !annotation jakarta.validation.constraints.Past$List
 outer jakarta.validation.constraints.Past
 anno 0 java.lang.annotation.Documented()
 anno 0 java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy value=RUNTIME)
 anno 0 java.lang.annotation.Target(java.lang.annotation.ElementType[] value=[METHOD, FIELD, ANNOTATION_TYPE, CONSTRUCTOR, PARAMETER, TYPE_USE])
intf java.lang.annotation.Annotation
meth public abstract jakarta.validation.constraints.Past[] value()

CLSS public abstract interface !annotation jakarta.validation.constraints.PastOrPresent
 anno 0 jakarta.validation.Constraint(java.lang.Class<? extends jakarta.validation.ConstraintValidator<?,?>>[] validatedBy=[])
 anno 0 java.lang.annotation.Documented()
 anno 0 java.lang.annotation.Repeatable(java.lang.Class<? extends java.lang.annotation.Annotation> value=class jakarta.validation.constraints.PastOrPresent$List)
 anno 0 java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy value=RUNTIME)
 anno 0 java.lang.annotation.Target(java.lang.annotation.ElementType[] value=[METHOD, FIELD, ANNOTATION_TYPE, CONSTRUCTOR, PARAMETER, TYPE_USE])
innr public abstract interface static !annotation List
intf java.lang.annotation.Annotation
meth public abstract !hasdefault java.lang.Class<? extends jakarta.validation.Payload>[] payload() value= []
meth public abstract !hasdefault java.lang.Class<?>[] groups() value= []
meth public abstract !hasdefault java.lang.String message() value= "{jakarta.validation.constraints.PastOrPresent.message}"

CLSS public abstract interface static !annotation jakarta.validation.constraints.PastOrPresent$List
 outer jakarta.validation.constraints.PastOrPresent
 anno 0 java.lang.annotation.Documented()
 anno 0 java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy value=RUNTIME)
 anno 0 java.lang.annotation.Target(java.lang.annotation.ElementType[] value=[METHOD, FIELD, ANNOTATION_TYPE, CONSTRUCTOR, PARAMETER, TYPE_USE])
intf java.lang.annotation.Annotation
meth public abstract jakarta.validation.constraints.PastOrPresent[] value()

CLSS public abstract interface !annotation jakarta.validation.constraints.Pattern
 anno 0 jakarta.validation.Constraint(java.lang.Class<? extends jakarta.validation.ConstraintValidator<?,?>>[] validatedBy=[])
 anno 0 java.lang.annotation.Documented()
 anno 0 java.lang.annotation.Repeatable(java.lang.Class<? extends java.lang.annotation.Annotation> value=class jakarta.validation.constraints.Pattern$List)
 anno 0 java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy value=RUNTIME)
 anno 0 java.lang.annotation.Target(java.lang.annotation.ElementType[] value=[METHOD, FIELD, ANNOTATION_TYPE, CONSTRUCTOR, PARAMETER, TYPE_USE])
innr public abstract interface static !annotation List
innr public final static !enum Flag
intf java.lang.annotation.Annotation
meth public abstract !hasdefault jakarta.validation.constraints.Pattern$Flag[] flags() value= []
meth public abstract !hasdefault java.lang.Class<? extends jakarta.validation.Payload>[] payload() value= []
meth public abstract !hasdefault java.lang.Class<?>[] groups() value= []
meth public abstract !hasdefault java.lang.String message() value= "{jakarta.validation.constraints.Pattern.message}"
meth public abstract java.lang.String regexp()

CLSS public final static !enum jakarta.validation.constraints.Pattern$Flag
 outer jakarta.validation.constraints.Pattern
fld public final static jakarta.validation.constraints.Pattern$Flag CANON_EQ
fld public final static jakarta.validation.constraints.Pattern$Flag CASE_INSENSITIVE
fld public final static jakarta.validation.constraints.Pattern$Flag COMMENTS
fld public final static jakarta.validation.constraints.Pattern$Flag DOTALL
fld public final static jakarta.validation.constraints.Pattern$Flag MULTILINE
fld public final static jakarta.validation.constraints.Pattern$Flag UNICODE_CASE
fld public final static jakarta.validation.constraints.Pattern$Flag UNIX_LINES
meth public int getValue()
meth public static jakarta.validation.constraints.Pattern$Flag valueOf(java.lang.String)
meth public static jakarta.validation.constraints.Pattern$Flag[] values()
supr java.lang.Enum<jakarta.validation.constraints.Pattern$Flag>
hfds value

CLSS public abstract interface static !annotation jakarta.validation.constraints.Pattern$List
 outer jakarta.validation.constraints.Pattern
 anno 0 java.lang.annotation.Documented()
 anno 0 java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy value=RUNTIME)
 anno 0 java.lang.annotation.Target(java.lang.annotation.ElementType[] value=[METHOD, FIELD, ANNOTATION_TYPE, CONSTRUCTOR, PARAMETER, TYPE_USE])
intf java.lang.annotation.Annotation
meth public abstract jakarta.validation.constraints.Pattern[] value()

CLSS public abstract interface !annotation jakarta.validation.constraints.Positive
 anno 0 jakarta.validation.Constraint(java.lang.Class<? extends jakarta.validation.ConstraintValidator<?,?>>[] validatedBy=[])
 anno 0 java.lang.annotation.Documented()
 anno 0 java.lang.annotation.Repeatable(java.lang.Class<? extends java.lang.annotation.Annotation> value=class jakarta.validation.constraints.Positive$List)
 anno 0 java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy value=RUNTIME)
 anno 0 java.lang.annotation.Target(java.lang.annotation.ElementType[] value=[METHOD, FIELD, ANNOTATION_TYPE, CONSTRUCTOR, PARAMETER, TYPE_USE])
innr public abstract interface static !annotation List
intf java.lang.annotation.Annotation
meth public abstract !hasdefault java.lang.Class<? extends jakarta.validation.Payload>[] payload() value= []
meth public abstract !hasdefault java.lang.Class<?>[] groups() value= []
meth public abstract !hasdefault java.lang.String message() value= "{jakarta.validation.constraints.Positive.message}"

CLSS public abstract interface static !annotation jakarta.validation.constraints.Positive$List
 outer jakarta.validation.constraints.Positive
 anno 0 java.lang.annotation.Documented()
 anno 0 java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy value=RUNTIME)
 anno 0 java.lang.annotation.Target(java.lang.annotation.ElementType[] value=[METHOD, FIELD, ANNOTATION_TYPE, CONSTRUCTOR, PARAMETER, TYPE_USE])
intf java.lang.annotation.Annotation
meth public abstract jakarta.validation.constraints.Positive[] value()

CLSS public abstract interface !annotation jakarta.validation.constraints.PositiveOrZero
 anno 0 jakarta.validation.Constraint(java.lang.Class<? extends jakarta.validation.ConstraintValidator<?,?>>[] validatedBy=[])
 anno 0 java.lang.annotation.Documented()
 anno 0 java.lang.annotation.Repeatable(java.lang.Class<? extends java.lang.annotation.Annotation> value=class jakarta.validation.constraints.PositiveOrZero$List)
 anno 0 java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy value=RUNTIME)
 anno 0 java.lang.annotation.Target(java.lang.annotation.ElementType[] value=[METHOD, FIELD, ANNOTATION_TYPE, CONSTRUCTOR, PARAMETER, TYPE_USE])
innr public abstract interface static !annotation List
intf java.lang.annotation.Annotation
meth public abstract !hasdefault java.lang.Class<? extends jakarta.validation.Payload>[] payload() value= []
meth public abstract !hasdefault java.lang.Class<?>[] groups() value= []
meth public abstract !hasdefault java.lang.String message() value= "{jakarta.validation.constraints.PositiveOrZero.message}"

CLSS public abstract interface static !annotation jakarta.validation.constraints.PositiveOrZero$List
 outer jakarta.validation.constraints.PositiveOrZero
 anno 0 java.lang.annotation.Documented()
 anno 0 java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy value=RUNTIME)
 anno 0 java.lang.annotation.Target(java.lang.annotation.ElementType[] value=[METHOD, FIELD, ANNOTATION_TYPE, CONSTRUCTOR, PARAMETER, TYPE_USE])
intf java.lang.annotation.Annotation
meth public abstract jakarta.validation.constraints.PositiveOrZero[] value()

CLSS public abstract interface !annotation jakarta.validation.constraints.Size
 anno 0 jakarta.validation.Constraint(java.lang.Class<? extends jakarta.validation.ConstraintValidator<?,?>>[] validatedBy=[])
 anno 0 java.lang.annotation.Documented()
 anno 0 java.lang.annotation.Repeatable(java.lang.Class<? extends java.lang.annotation.Annotation> value=class jakarta.validation.constraints.Size$List)
 anno 0 java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy value=RUNTIME)
 anno 0 java.lang.annotation.Target(java.lang.annotation.ElementType[] value=[METHOD, FIELD, ANNOTATION_TYPE, CONSTRUCTOR, PARAMETER, TYPE_USE])
innr public abstract interface static !annotation List
intf java.lang.annotation.Annotation
meth public abstract !hasdefault int max() value= 2147483647
meth public abstract !hasdefault int min() value= 0
meth public abstract !hasdefault java.lang.Class<? extends jakarta.validation.Payload>[] payload() value= []
meth public abstract !hasdefault java.lang.Class<?>[] groups() value= []
meth public abstract !hasdefault java.lang.String message() value= "{jakarta.validation.constraints.Size.message}"

CLSS public abstract interface static !annotation jakarta.validation.constraints.Size$List
 outer jakarta.validation.constraints.Size
 anno 0 java.lang.annotation.Documented()
 anno 0 java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy value=RUNTIME)
 anno 0 java.lang.annotation.Target(java.lang.annotation.ElementType[] value=[METHOD, FIELD, ANNOTATION_TYPE, CONSTRUCTOR, PARAMETER, TYPE_USE])
intf java.lang.annotation.Annotation
meth public abstract jakarta.validation.constraints.Size[] value()

CLSS public abstract interface !annotation jakarta.validation.constraintvalidation.SupportedValidationTarget
 anno 0 java.lang.annotation.Documented()
 anno 0 java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy value=RUNTIME)
 anno 0 java.lang.annotation.Target(java.lang.annotation.ElementType[] value=[TYPE])
intf java.lang.annotation.Annotation
meth public abstract jakarta.validation.constraintvalidation.ValidationTarget[] value()

CLSS public final !enum jakarta.validation.constraintvalidation.ValidationTarget
fld public final static jakarta.validation.constraintvalidation.ValidationTarget ANNOTATED_ELEMENT
fld public final static jakarta.validation.constraintvalidation.ValidationTarget PARAMETERS
meth public static jakarta.validation.constraintvalidation.ValidationTarget valueOf(java.lang.String)
meth public static jakarta.validation.constraintvalidation.ValidationTarget[] values()
supr java.lang.Enum<jakarta.validation.constraintvalidation.ValidationTarget>

CLSS public final !enum jakarta.validation.executable.ExecutableType
fld public final static jakarta.validation.executable.ExecutableType ALL
fld public final static jakarta.validation.executable.ExecutableType CONSTRUCTORS
fld public final static jakarta.validation.executable.ExecutableType GETTER_METHODS
fld public final static jakarta.validation.executable.ExecutableType IMPLICIT
fld public final static jakarta.validation.executable.ExecutableType NONE
fld public final static jakarta.validation.executable.ExecutableType NON_GETTER_METHODS
meth public static jakarta.validation.executable.ExecutableType valueOf(java.lang.String)
meth public static jakarta.validation.executable.ExecutableType[] values()
supr java.lang.Enum<jakarta.validation.executable.ExecutableType>

CLSS public abstract interface jakarta.validation.executable.ExecutableValidator
meth public abstract !varargs <%0 extends java.lang.Object> java.util.Set<jakarta.validation.ConstraintViolation<{%%0}>> validateConstructorParameters(java.lang.reflect.Constructor<? extends {%%0}>,java.lang.Object[],java.lang.Class<?>[])
meth public abstract !varargs <%0 extends java.lang.Object> java.util.Set<jakarta.validation.ConstraintViolation<{%%0}>> validateConstructorReturnValue(java.lang.reflect.Constructor<? extends {%%0}>,{%%0},java.lang.Class<?>[])
meth public abstract !varargs <%0 extends java.lang.Object> java.util.Set<jakarta.validation.ConstraintViolation<{%%0}>> validateParameters({%%0},java.lang.reflect.Method,java.lang.Object[],java.lang.Class<?>[])
meth public abstract !varargs <%0 extends java.lang.Object> java.util.Set<jakarta.validation.ConstraintViolation<{%%0}>> validateReturnValue({%%0},java.lang.reflect.Method,java.lang.Object,java.lang.Class<?>[])

CLSS public abstract interface !annotation jakarta.validation.executable.ValidateOnExecution
 anno 0 java.lang.annotation.Documented()
 anno 0 java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy value=RUNTIME)
 anno 0 java.lang.annotation.Target(java.lang.annotation.ElementType[] value=[CONSTRUCTOR, METHOD, TYPE, PACKAGE])
intf java.lang.annotation.Annotation
meth public abstract !hasdefault jakarta.validation.executable.ExecutableType[] type() value= [IMPLICIT]

CLSS public abstract interface !annotation jakarta.validation.groups.ConvertGroup
 anno 0 java.lang.annotation.Documented()
 anno 0 java.lang.annotation.Repeatable(java.lang.Class<? extends java.lang.annotation.Annotation> value=class jakarta.validation.groups.ConvertGroup$List)
 anno 0 java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy value=RUNTIME)
 anno 0 java.lang.annotation.Target(java.lang.annotation.ElementType[] value=[METHOD, FIELD, CONSTRUCTOR, PARAMETER, TYPE_USE])
innr public abstract interface static !annotation List
intf java.lang.annotation.Annotation
meth public abstract !hasdefault java.lang.Class<?> from() value= class jakarta.validation.groups.Default
meth public abstract java.lang.Class<?> to()

CLSS public abstract interface static !annotation jakarta.validation.groups.ConvertGroup$List
 outer jakarta.validation.groups.ConvertGroup
 anno 0 java.lang.annotation.Documented()
 anno 0 java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy value=RUNTIME)
 anno 0 java.lang.annotation.Target(java.lang.annotation.ElementType[] value=[METHOD, FIELD, CONSTRUCTOR, PARAMETER, TYPE_USE])
intf java.lang.annotation.Annotation
meth public abstract jakarta.validation.groups.ConvertGroup[] value()

CLSS public abstract interface jakarta.validation.groups.Default

CLSS public abstract interface jakarta.validation.metadata.BeanDescriptor
intf jakarta.validation.metadata.ElementDescriptor
meth public abstract !varargs jakarta.validation.metadata.ConstructorDescriptor getConstraintsForConstructor(java.lang.Class<?>[])
meth public abstract !varargs jakarta.validation.metadata.MethodDescriptor getConstraintsForMethod(java.lang.String,java.lang.Class<?>[])
meth public abstract !varargs java.util.Set<jakarta.validation.metadata.MethodDescriptor> getConstrainedMethods(jakarta.validation.metadata.MethodType,jakarta.validation.metadata.MethodType[])
meth public abstract boolean isBeanConstrained()
meth public abstract jakarta.validation.metadata.PropertyDescriptor getConstraintsForProperty(java.lang.String)
meth public abstract java.util.Set<jakarta.validation.metadata.ConstructorDescriptor> getConstrainedConstructors()
meth public abstract java.util.Set<jakarta.validation.metadata.PropertyDescriptor> getConstrainedProperties()

CLSS public abstract interface jakarta.validation.metadata.CascadableDescriptor
meth public abstract boolean isCascaded()
meth public abstract java.util.Set<jakarta.validation.metadata.GroupConversionDescriptor> getGroupConversions()

CLSS public abstract interface jakarta.validation.metadata.ConstraintDescriptor<%0 extends java.lang.annotation.Annotation>
meth public abstract <%0 extends java.lang.Object> {%%0} unwrap(java.lang.Class<{%%0}>)
meth public abstract boolean isReportAsSingleViolation()
meth public abstract jakarta.validation.ConstraintTarget getValidationAppliesTo()
meth public abstract jakarta.validation.metadata.ValidateUnwrappedValue getValueUnwrapping()
meth public abstract java.lang.String getMessageTemplate()
meth public abstract java.util.List<java.lang.Class<? extends jakarta.validation.ConstraintValidator<{jakarta.validation.metadata.ConstraintDescriptor%0},?>>> getConstraintValidatorClasses()
meth public abstract java.util.Map<java.lang.String,java.lang.Object> getAttributes()
meth public abstract java.util.Set<jakarta.validation.metadata.ConstraintDescriptor<?>> getComposingConstraints()
meth public abstract java.util.Set<java.lang.Class<? extends jakarta.validation.Payload>> getPayload()
meth public abstract java.util.Set<java.lang.Class<?>> getGroups()
meth public abstract {jakarta.validation.metadata.ConstraintDescriptor%0} getAnnotation()

CLSS public abstract interface jakarta.validation.metadata.ConstructorDescriptor
intf jakarta.validation.metadata.ExecutableDescriptor

CLSS public abstract interface jakarta.validation.metadata.ContainerDescriptor
meth public abstract java.util.Set<jakarta.validation.metadata.ContainerElementTypeDescriptor> getConstrainedContainerElementTypes()

CLSS public abstract interface jakarta.validation.metadata.ContainerElementTypeDescriptor
intf jakarta.validation.metadata.CascadableDescriptor
intf jakarta.validation.metadata.ContainerDescriptor
intf jakarta.validation.metadata.ElementDescriptor
meth public abstract java.lang.Class<?> getContainerClass()
meth public abstract java.lang.Integer getTypeArgumentIndex()

CLSS public abstract interface jakarta.validation.metadata.CrossParameterDescriptor
intf jakarta.validation.metadata.ElementDescriptor
meth public abstract java.lang.Class<?> getElementClass()

CLSS public abstract interface jakarta.validation.metadata.ElementDescriptor
innr public abstract interface static ConstraintFinder
meth public abstract boolean hasConstraints()
meth public abstract jakarta.validation.metadata.ElementDescriptor$ConstraintFinder findConstraints()
meth public abstract java.lang.Class<?> getElementClass()
meth public abstract java.util.Set<jakarta.validation.metadata.ConstraintDescriptor<?>> getConstraintDescriptors()

CLSS public abstract interface static jakarta.validation.metadata.ElementDescriptor$ConstraintFinder
 outer jakarta.validation.metadata.ElementDescriptor
meth public abstract !varargs jakarta.validation.metadata.ElementDescriptor$ConstraintFinder declaredOn(java.lang.annotation.ElementType[])
meth public abstract !varargs jakarta.validation.metadata.ElementDescriptor$ConstraintFinder unorderedAndMatchingGroups(java.lang.Class<?>[])
meth public abstract boolean hasConstraints()
meth public abstract jakarta.validation.metadata.ElementDescriptor$ConstraintFinder lookingAt(jakarta.validation.metadata.Scope)
meth public abstract java.util.Set<jakarta.validation.metadata.ConstraintDescriptor<?>> getConstraintDescriptors()

CLSS public abstract interface jakarta.validation.metadata.ExecutableDescriptor
intf jakarta.validation.metadata.ElementDescriptor
meth public abstract boolean hasConstrainedParameters()
meth public abstract boolean hasConstrainedReturnValue()
meth public abstract boolean hasConstraints()
meth public abstract jakarta.validation.metadata.CrossParameterDescriptor getCrossParameterDescriptor()
meth public abstract jakarta.validation.metadata.ElementDescriptor$ConstraintFinder findConstraints()
meth public abstract jakarta.validation.metadata.ReturnValueDescriptor getReturnValueDescriptor()
meth public abstract java.lang.String getName()
meth public abstract java.util.List<jakarta.validation.metadata.ParameterDescriptor> getParameterDescriptors()
meth public abstract java.util.Set<jakarta.validation.metadata.ConstraintDescriptor<?>> getConstraintDescriptors()

CLSS public abstract interface jakarta.validation.metadata.GroupConversionDescriptor
meth public abstract java.lang.Class<?> getFrom()
meth public abstract java.lang.Class<?> getTo()

CLSS public abstract interface jakarta.validation.metadata.MethodDescriptor
intf jakarta.validation.metadata.ExecutableDescriptor

CLSS public final !enum jakarta.validation.metadata.MethodType
fld public final static jakarta.validation.metadata.MethodType GETTER
fld public final static jakarta.validation.metadata.MethodType NON_GETTER
meth public static jakarta.validation.metadata.MethodType valueOf(java.lang.String)
meth public static jakarta.validation.metadata.MethodType[] values()
supr java.lang.Enum<jakarta.validation.metadata.MethodType>

CLSS public abstract interface jakarta.validation.metadata.ParameterDescriptor
intf jakarta.validation.metadata.CascadableDescriptor
intf jakarta.validation.metadata.ContainerDescriptor
intf jakarta.validation.metadata.ElementDescriptor
meth public abstract int getIndex()
meth public abstract java.lang.String getName()

CLSS public abstract interface jakarta.validation.metadata.PropertyDescriptor
intf jakarta.validation.metadata.CascadableDescriptor
intf jakarta.validation.metadata.ContainerDescriptor
intf jakarta.validation.metadata.ElementDescriptor
meth public abstract java.lang.String getPropertyName()

CLSS public abstract interface jakarta.validation.metadata.ReturnValueDescriptor
intf jakarta.validation.metadata.CascadableDescriptor
intf jakarta.validation.metadata.ContainerDescriptor
intf jakarta.validation.metadata.ElementDescriptor

CLSS public final !enum jakarta.validation.metadata.Scope
fld public final static jakarta.validation.metadata.Scope HIERARCHY
fld public final static jakarta.validation.metadata.Scope LOCAL_ELEMENT
meth public static jakarta.validation.metadata.Scope valueOf(java.lang.String)
meth public static jakarta.validation.metadata.Scope[] values()
supr java.lang.Enum<jakarta.validation.metadata.Scope>

CLSS public final !enum jakarta.validation.metadata.ValidateUnwrappedValue
fld public final static jakarta.validation.metadata.ValidateUnwrappedValue DEFAULT
fld public final static jakarta.validation.metadata.ValidateUnwrappedValue SKIP
fld public final static jakarta.validation.metadata.ValidateUnwrappedValue UNWRAP
meth public static jakarta.validation.metadata.ValidateUnwrappedValue valueOf(java.lang.String)
meth public static jakarta.validation.metadata.ValidateUnwrappedValue[] values()
supr java.lang.Enum<jakarta.validation.metadata.ValidateUnwrappedValue>

CLSS public abstract interface jakarta.validation.spi.BootstrapState
meth public abstract jakarta.validation.ValidationProviderResolver getDefaultValidationProviderResolver()
meth public abstract jakarta.validation.ValidationProviderResolver getValidationProviderResolver()

CLSS public abstract interface jakarta.validation.spi.ConfigurationState
meth public abstract boolean isIgnoreXmlConfiguration()
meth public abstract jakarta.validation.ClockProvider getClockProvider()
meth public abstract jakarta.validation.ConstraintValidatorFactory getConstraintValidatorFactory()
meth public abstract jakarta.validation.MessageInterpolator getMessageInterpolator()
meth public abstract jakarta.validation.ParameterNameProvider getParameterNameProvider()
meth public abstract jakarta.validation.TraversableResolver getTraversableResolver()
meth public abstract java.util.Map<java.lang.String,java.lang.String> getProperties()
meth public abstract java.util.Set<jakarta.validation.valueextraction.ValueExtractor<?>> getValueExtractors()
meth public abstract java.util.Set<java.io.InputStream> getMappingStreams()

CLSS public abstract interface jakarta.validation.spi.ValidationProvider<%0 extends jakarta.validation.Configuration<{jakarta.validation.spi.ValidationProvider%0}>>
meth public abstract jakarta.validation.Configuration<?> createGenericConfiguration(jakarta.validation.spi.BootstrapState)
meth public abstract jakarta.validation.ValidatorFactory buildValidatorFactory(jakarta.validation.spi.ConfigurationState)
meth public abstract {jakarta.validation.spi.ValidationProvider%0} createSpecializedConfiguration(jakarta.validation.spi.BootstrapState)

CLSS public abstract interface !annotation jakarta.validation.valueextraction.ExtractedValue
 anno 0 java.lang.annotation.Documented()
 anno 0 java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy value=RUNTIME)
 anno 0 java.lang.annotation.Target(java.lang.annotation.ElementType[] value=[TYPE_USE])
intf java.lang.annotation.Annotation
meth public abstract !hasdefault java.lang.Class<?> type() value= class void

CLSS public abstract interface !annotation jakarta.validation.valueextraction.UnwrapByDefault
 anno 0 java.lang.annotation.Documented()
 anno 0 java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy value=RUNTIME)
 anno 0 java.lang.annotation.Target(java.lang.annotation.ElementType[] value=[TYPE])
intf java.lang.annotation.Annotation

CLSS public abstract interface jakarta.validation.valueextraction.Unwrapping
innr public abstract interface static Skip
innr public abstract interface static Unwrap

CLSS public abstract interface static jakarta.validation.valueextraction.Unwrapping$Skip
 outer jakarta.validation.valueextraction.Unwrapping
intf jakarta.validation.Payload

CLSS public abstract interface static jakarta.validation.valueextraction.Unwrapping$Unwrap
 outer jakarta.validation.valueextraction.Unwrapping
intf jakarta.validation.Payload

CLSS public abstract interface jakarta.validation.valueextraction.ValueExtractor<%0 extends java.lang.Object>
innr public abstract interface static ValueReceiver
meth public abstract void extractValues({jakarta.validation.valueextraction.ValueExtractor%0},jakarta.validation.valueextraction.ValueExtractor$ValueReceiver)

CLSS public abstract interface static jakarta.validation.valueextraction.ValueExtractor$ValueReceiver
 outer jakarta.validation.valueextraction.ValueExtractor
meth public abstract void indexedValue(java.lang.String,int,java.lang.Object)
meth public abstract void iterableValue(java.lang.String,java.lang.Object)
meth public abstract void keyedValue(java.lang.String,java.lang.Object,java.lang.Object)
meth public abstract void value(java.lang.String,java.lang.Object)

CLSS public jakarta.validation.valueextraction.ValueExtractorDeclarationException
cons public <init>()
cons public <init>(java.lang.String)
cons public <init>(java.lang.String,java.lang.Throwable)
cons public <init>(java.lang.Throwable)
supr jakarta.validation.ValidationException

CLSS public jakarta.validation.valueextraction.ValueExtractorDefinitionException
cons public <init>()
cons public <init>(java.lang.String)
cons public <init>(java.lang.String,java.lang.Throwable)
cons public <init>(java.lang.Throwable)
supr jakarta.validation.ValidationException

CLSS public abstract interface !annotation jakarta.websocket.ClientEndpoint
 anno 0 java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy value=RUNTIME)
 anno 0 java.lang.annotation.Target(java.lang.annotation.ElementType[] value=[TYPE])
intf java.lang.annotation.Annotation
meth public abstract !hasdefault java.lang.Class<? extends jakarta.websocket.ClientEndpointConfig$Configurator> configurator() value= class jakarta.websocket.ClientEndpointConfig$Configurator
meth public abstract !hasdefault java.lang.Class<? extends jakarta.websocket.Decoder>[] decoders() value= []
meth public abstract !hasdefault java.lang.Class<? extends jakarta.websocket.Encoder>[] encoders() value= []
meth public abstract !hasdefault java.lang.String[] subprotocols() value= []

CLSS public abstract interface jakarta.websocket.ClientEndpointConfig
innr public final static Builder
innr public static Configurator
intf jakarta.websocket.EndpointConfig
meth public abstract jakarta.websocket.ClientEndpointConfig$Configurator getConfigurator()
meth public abstract java.util.List<jakarta.websocket.Extension> getExtensions()
meth public abstract java.util.List<java.lang.String> getPreferredSubprotocols()

CLSS public final static jakarta.websocket.ClientEndpointConfig$Builder
 outer jakarta.websocket.ClientEndpointConfig
meth public jakarta.websocket.ClientEndpointConfig build()
meth public jakarta.websocket.ClientEndpointConfig$Builder configurator(jakarta.websocket.ClientEndpointConfig$Configurator)
meth public jakarta.websocket.ClientEndpointConfig$Builder decoders(java.util.List<java.lang.Class<? extends jakarta.websocket.Decoder>>)
meth public jakarta.websocket.ClientEndpointConfig$Builder encoders(java.util.List<java.lang.Class<? extends jakarta.websocket.Encoder>>)
meth public jakarta.websocket.ClientEndpointConfig$Builder extensions(java.util.List<jakarta.websocket.Extension>)
meth public jakarta.websocket.ClientEndpointConfig$Builder preferredSubprotocols(java.util.List<java.lang.String>)
meth public static jakarta.websocket.ClientEndpointConfig$Builder create()
supr java.lang.Object
hfds clientEndpointConfigurator,decoders,encoders,extensions,preferredSubprotocols

CLSS public static jakarta.websocket.ClientEndpointConfig$Configurator
 outer jakarta.websocket.ClientEndpointConfig
cons public <init>()
meth public void afterResponse(jakarta.websocket.HandshakeResponse)
meth public void beforeRequest(java.util.Map<java.lang.String,java.util.List<java.lang.String>>)
supr java.lang.Object

CLSS public jakarta.websocket.CloseReason
cons public <init>(jakarta.websocket.CloseReason$CloseCode,java.lang.String)
innr public abstract interface static CloseCode
innr public final static !enum CloseCodes
meth public jakarta.websocket.CloseReason$CloseCode getCloseCode()
meth public java.lang.String getReasonPhrase()
meth public java.lang.String toString()
supr java.lang.Object
hfds closeCode,reasonPhrase

CLSS public abstract interface static jakarta.websocket.CloseReason$CloseCode
 outer jakarta.websocket.CloseReason
meth public abstract int getCode()

CLSS public final static !enum jakarta.websocket.CloseReason$CloseCodes
 outer jakarta.websocket.CloseReason
fld public final static jakarta.websocket.CloseReason$CloseCodes CANNOT_ACCEPT
fld public final static jakarta.websocket.CloseReason$CloseCodes CLOSED_ABNORMALLY
fld public final static jakarta.websocket.CloseReason$CloseCodes GOING_AWAY
fld public final static jakarta.websocket.CloseReason$CloseCodes NORMAL_CLOSURE
fld public final static jakarta.websocket.CloseReason$CloseCodes NOT_CONSISTENT
fld public final static jakarta.websocket.CloseReason$CloseCodes NO_EXTENSION
fld public final static jakarta.websocket.CloseReason$CloseCodes NO_STATUS_CODE
fld public final static jakarta.websocket.CloseReason$CloseCodes PROTOCOL_ERROR
fld public final static jakarta.websocket.CloseReason$CloseCodes RESERVED
fld public final static jakarta.websocket.CloseReason$CloseCodes SERVICE_RESTART
fld public final static jakarta.websocket.CloseReason$CloseCodes TLS_HANDSHAKE_FAILURE
fld public final static jakarta.websocket.CloseReason$CloseCodes TOO_BIG
fld public final static jakarta.websocket.CloseReason$CloseCodes TRY_AGAIN_LATER
fld public final static jakarta.websocket.CloseReason$CloseCodes UNEXPECTED_CONDITION
fld public final static jakarta.websocket.CloseReason$CloseCodes VIOLATED_POLICY
intf jakarta.websocket.CloseReason$CloseCode
meth public int getCode()
meth public static jakarta.websocket.CloseReason$CloseCode getCloseCode(int)
meth public static jakarta.websocket.CloseReason$CloseCodes valueOf(java.lang.String)
meth public static jakarta.websocket.CloseReason$CloseCodes[] values()
supr java.lang.Enum<jakarta.websocket.CloseReason$CloseCodes>
hfds code

CLSS public abstract jakarta.websocket.ContainerProvider
cons public <init>()
meth protected abstract jakarta.websocket.WebSocketContainer getContainer()
meth public static jakarta.websocket.WebSocketContainer getWebSocketContainer()
supr java.lang.Object

CLSS public jakarta.websocket.DecodeException
cons public <init>(java.lang.String,java.lang.String)
cons public <init>(java.lang.String,java.lang.String,java.lang.Throwable)
cons public <init>(java.nio.ByteBuffer,java.lang.String)
cons public <init>(java.nio.ByteBuffer,java.lang.String,java.lang.Throwable)
meth public java.lang.String getText()
meth public java.nio.ByteBuffer getBytes()
supr java.lang.Exception
hfds bb,encodedString,serialVersionUID

CLSS public abstract interface jakarta.websocket.Decoder
innr public abstract interface static Binary
innr public abstract interface static BinaryStream
innr public abstract interface static Text
innr public abstract interface static TextStream
meth public abstract void destroy()
meth public abstract void init(jakarta.websocket.EndpointConfig)

CLSS public abstract interface static jakarta.websocket.Decoder$Binary<%0 extends java.lang.Object>
 outer jakarta.websocket.Decoder
intf jakarta.websocket.Decoder
meth public abstract boolean willDecode(java.nio.ByteBuffer)
meth public abstract {jakarta.websocket.Decoder$Binary%0} decode(java.nio.ByteBuffer) throws jakarta.websocket.DecodeException

CLSS public abstract interface static jakarta.websocket.Decoder$BinaryStream<%0 extends java.lang.Object>
 outer jakarta.websocket.Decoder
intf jakarta.websocket.Decoder
meth public abstract {jakarta.websocket.Decoder$BinaryStream%0} decode(java.io.InputStream) throws jakarta.websocket.DecodeException,java.io.IOException

CLSS public abstract interface static jakarta.websocket.Decoder$Text<%0 extends java.lang.Object>
 outer jakarta.websocket.Decoder
intf jakarta.websocket.Decoder
meth public abstract boolean willDecode(java.lang.String)
meth public abstract {jakarta.websocket.Decoder$Text%0} decode(java.lang.String) throws jakarta.websocket.DecodeException

CLSS public abstract interface static jakarta.websocket.Decoder$TextStream<%0 extends java.lang.Object>
 outer jakarta.websocket.Decoder
intf jakarta.websocket.Decoder
meth public abstract {jakarta.websocket.Decoder$TextStream%0} decode(java.io.Reader) throws jakarta.websocket.DecodeException,java.io.IOException

CLSS public jakarta.websocket.DeploymentException
cons public <init>(java.lang.String)
cons public <init>(java.lang.String,java.lang.Throwable)
supr java.lang.Exception
hfds serialVersionUID

CLSS public jakarta.websocket.EncodeException
cons public <init>(java.lang.Object,java.lang.String)
cons public <init>(java.lang.Object,java.lang.String,java.lang.Throwable)
meth public java.lang.Object getObject()
supr java.lang.Exception
hfds object,serialVersionUID

CLSS public abstract interface jakarta.websocket.Encoder
innr public abstract interface static Binary
innr public abstract interface static BinaryStream
innr public abstract interface static Text
innr public abstract interface static TextStream
meth public abstract void destroy()
meth public abstract void init(jakarta.websocket.EndpointConfig)

CLSS public abstract interface static jakarta.websocket.Encoder$Binary<%0 extends java.lang.Object>
 outer jakarta.websocket.Encoder
intf jakarta.websocket.Encoder
meth public abstract java.nio.ByteBuffer encode({jakarta.websocket.Encoder$Binary%0}) throws jakarta.websocket.EncodeException

CLSS public abstract interface static jakarta.websocket.Encoder$BinaryStream<%0 extends java.lang.Object>
 outer jakarta.websocket.Encoder
intf jakarta.websocket.Encoder
meth public abstract void encode({jakarta.websocket.Encoder$BinaryStream%0},java.io.OutputStream) throws jakarta.websocket.EncodeException,java.io.IOException

CLSS public abstract interface static jakarta.websocket.Encoder$Text<%0 extends java.lang.Object>
 outer jakarta.websocket.Encoder
intf jakarta.websocket.Encoder
meth public abstract java.lang.String encode({jakarta.websocket.Encoder$Text%0}) throws jakarta.websocket.EncodeException

CLSS public abstract interface static jakarta.websocket.Encoder$TextStream<%0 extends java.lang.Object>
 outer jakarta.websocket.Encoder
intf jakarta.websocket.Encoder
meth public abstract void encode({jakarta.websocket.Encoder$TextStream%0},java.io.Writer) throws jakarta.websocket.EncodeException,java.io.IOException

CLSS public abstract jakarta.websocket.Endpoint
cons public <init>()
meth public abstract void onOpen(jakarta.websocket.Session,jakarta.websocket.EndpointConfig)
meth public void onClose(jakarta.websocket.Session,jakarta.websocket.CloseReason)
meth public void onError(jakarta.websocket.Session,java.lang.Throwable)
supr java.lang.Object

CLSS public abstract interface jakarta.websocket.EndpointConfig
meth public abstract java.util.List<java.lang.Class<? extends jakarta.websocket.Decoder>> getDecoders()
meth public abstract java.util.List<java.lang.Class<? extends jakarta.websocket.Encoder>> getEncoders()
meth public abstract java.util.Map<java.lang.String,java.lang.Object> getUserProperties()

CLSS public abstract interface jakarta.websocket.Extension
innr public abstract interface static Parameter
meth public abstract java.lang.String getName()
meth public abstract java.util.List<jakarta.websocket.Extension$Parameter> getParameters()

CLSS public abstract interface static jakarta.websocket.Extension$Parameter
 outer jakarta.websocket.Extension
meth public abstract java.lang.String getName()
meth public abstract java.lang.String getValue()

CLSS public abstract interface jakarta.websocket.HandshakeResponse
fld public final static java.lang.String SEC_WEBSOCKET_ACCEPT = "Sec-WebSocket-Accept"
meth public abstract java.util.Map<java.lang.String,java.util.List<java.lang.String>> getHeaders()

CLSS public abstract interface jakarta.websocket.MessageHandler
innr public abstract interface static Partial
innr public abstract interface static Whole

CLSS public abstract interface static jakarta.websocket.MessageHandler$Partial<%0 extends java.lang.Object>
 outer jakarta.websocket.MessageHandler
intf jakarta.websocket.MessageHandler
meth public abstract void onMessage({jakarta.websocket.MessageHandler$Partial%0},boolean)

CLSS public abstract interface static jakarta.websocket.MessageHandler$Whole<%0 extends java.lang.Object>
 outer jakarta.websocket.MessageHandler
intf jakarta.websocket.MessageHandler
meth public abstract void onMessage({jakarta.websocket.MessageHandler$Whole%0})

CLSS public abstract interface !annotation jakarta.websocket.OnClose
 anno 0 java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy value=RUNTIME)
 anno 0 java.lang.annotation.Target(java.lang.annotation.ElementType[] value=[METHOD])
intf java.lang.annotation.Annotation

CLSS public abstract interface !annotation jakarta.websocket.OnError
 anno 0 java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy value=RUNTIME)
 anno 0 java.lang.annotation.Target(java.lang.annotation.ElementType[] value=[METHOD])
intf java.lang.annotation.Annotation

CLSS public abstract interface !annotation jakarta.websocket.OnMessage
 anno 0 java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy value=RUNTIME)
 anno 0 java.lang.annotation.Target(java.lang.annotation.ElementType[] value=[METHOD])
intf java.lang.annotation.Annotation
meth public abstract !hasdefault long maxMessageSize() value= -1

CLSS public abstract interface !annotation jakarta.websocket.OnOpen
 anno 0 java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy value=RUNTIME)
 anno 0 java.lang.annotation.Target(java.lang.annotation.ElementType[] value=[METHOD])
intf java.lang.annotation.Annotation

CLSS public abstract interface jakarta.websocket.PongMessage
meth public abstract java.nio.ByteBuffer getApplicationData()

CLSS public abstract interface jakarta.websocket.RemoteEndpoint
innr public abstract interface static Async
innr public abstract interface static Basic
meth public abstract boolean getBatchingAllowed()
meth public abstract void flushBatch() throws java.io.IOException
meth public abstract void sendPing(java.nio.ByteBuffer) throws java.io.IOException
meth public abstract void sendPong(java.nio.ByteBuffer) throws java.io.IOException
meth public abstract void setBatchingAllowed(boolean) throws java.io.IOException

CLSS public abstract interface static jakarta.websocket.RemoteEndpoint$Async
 outer jakarta.websocket.RemoteEndpoint
intf jakarta.websocket.RemoteEndpoint
meth public abstract java.util.concurrent.Future<java.lang.Void> sendBinary(java.nio.ByteBuffer)
meth public abstract java.util.concurrent.Future<java.lang.Void> sendObject(java.lang.Object)
meth public abstract java.util.concurrent.Future<java.lang.Void> sendText(java.lang.String)
meth public abstract long getSendTimeout()
meth public abstract void sendBinary(java.nio.ByteBuffer,jakarta.websocket.SendHandler)
meth public abstract void sendObject(java.lang.Object,jakarta.websocket.SendHandler)
meth public abstract void sendText(java.lang.String,jakarta.websocket.SendHandler)
meth public abstract void setSendTimeout(long)

CLSS public abstract interface static jakarta.websocket.RemoteEndpoint$Basic
 outer jakarta.websocket.RemoteEndpoint
intf jakarta.websocket.RemoteEndpoint
meth public abstract java.io.OutputStream getSendStream() throws java.io.IOException
meth public abstract java.io.Writer getSendWriter() throws java.io.IOException
meth public abstract void sendBinary(java.nio.ByteBuffer) throws java.io.IOException
meth public abstract void sendBinary(java.nio.ByteBuffer,boolean) throws java.io.IOException
meth public abstract void sendObject(java.lang.Object) throws jakarta.websocket.EncodeException,java.io.IOException
meth public abstract void sendText(java.lang.String) throws java.io.IOException
meth public abstract void sendText(java.lang.String,boolean) throws java.io.IOException

CLSS public abstract interface jakarta.websocket.SendHandler
meth public abstract void onResult(jakarta.websocket.SendResult)

CLSS public final jakarta.websocket.SendResult
cons public <init>()
cons public <init>(java.lang.Throwable)
meth public boolean isOK()
meth public java.lang.Throwable getException()
supr java.lang.Object
hfds exception,isOK

CLSS public abstract interface jakarta.websocket.Session
intf java.io.Closeable
meth public abstract <%0 extends java.lang.Object> void addMessageHandler(java.lang.Class<{%%0}>,jakarta.websocket.MessageHandler$Partial<{%%0}>)
meth public abstract <%0 extends java.lang.Object> void addMessageHandler(java.lang.Class<{%%0}>,jakarta.websocket.MessageHandler$Whole<{%%0}>)
meth public abstract boolean isOpen()
meth public abstract boolean isSecure()
meth public abstract int getMaxBinaryMessageBufferSize()
meth public abstract int getMaxTextMessageBufferSize()
meth public abstract jakarta.websocket.RemoteEndpoint$Async getAsyncRemote()
meth public abstract jakarta.websocket.RemoteEndpoint$Basic getBasicRemote()
meth public abstract jakarta.websocket.WebSocketContainer getContainer()
meth public abstract java.lang.String getId()
meth public abstract java.lang.String getNegotiatedSubprotocol()
meth public abstract java.lang.String getProtocolVersion()
meth public abstract java.lang.String getQueryString()
meth public abstract java.net.URI getRequestURI()
meth public abstract java.security.Principal getUserPrincipal()
meth public abstract java.util.List<jakarta.websocket.Extension> getNegotiatedExtensions()
meth public abstract java.util.Map<java.lang.String,java.lang.Object> getUserProperties()
meth public abstract java.util.Map<java.lang.String,java.lang.String> getPathParameters()
meth public abstract java.util.Map<java.lang.String,java.util.List<java.lang.String>> getRequestParameterMap()
meth public abstract java.util.Set<jakarta.websocket.MessageHandler> getMessageHandlers()
meth public abstract java.util.Set<jakarta.websocket.Session> getOpenSessions()
meth public abstract long getMaxIdleTimeout()
meth public abstract void addMessageHandler(jakarta.websocket.MessageHandler)
meth public abstract void close() throws java.io.IOException
meth public abstract void close(jakarta.websocket.CloseReason) throws java.io.IOException
meth public abstract void removeMessageHandler(jakarta.websocket.MessageHandler)
meth public abstract void setMaxBinaryMessageBufferSize(int)
meth public abstract void setMaxIdleTimeout(long)
meth public abstract void setMaxTextMessageBufferSize(int)

CLSS public jakarta.websocket.SessionException
cons public <init>(java.lang.String,java.lang.Throwable,jakarta.websocket.Session)
meth public jakarta.websocket.Session getSession()
supr java.lang.Exception
hfds serialVersionUID,session

CLSS public abstract interface jakarta.websocket.WebSocketContainer
meth public abstract int getDefaultMaxBinaryMessageBufferSize()
meth public abstract int getDefaultMaxTextMessageBufferSize()
meth public abstract jakarta.websocket.Session connectToServer(jakarta.websocket.Endpoint,jakarta.websocket.ClientEndpointConfig,java.net.URI) throws jakarta.websocket.DeploymentException,java.io.IOException
meth public abstract jakarta.websocket.Session connectToServer(java.lang.Class<? extends jakarta.websocket.Endpoint>,jakarta.websocket.ClientEndpointConfig,java.net.URI) throws jakarta.websocket.DeploymentException,java.io.IOException
meth public abstract jakarta.websocket.Session connectToServer(java.lang.Class<?>,java.net.URI) throws jakarta.websocket.DeploymentException,java.io.IOException
meth public abstract jakarta.websocket.Session connectToServer(java.lang.Object,java.net.URI) throws jakarta.websocket.DeploymentException,java.io.IOException
meth public abstract java.util.Set<jakarta.websocket.Extension> getInstalledExtensions()
meth public abstract long getDefaultAsyncSendTimeout()
meth public abstract long getDefaultMaxSessionIdleTimeout()
meth public abstract void setAsyncSendTimeout(long)
meth public abstract void setDefaultMaxBinaryMessageBufferSize(int)
meth public abstract void setDefaultMaxSessionIdleTimeout(long)
meth public abstract void setDefaultMaxTextMessageBufferSize(int)

CLSS public abstract interface jakarta.websocket.server.HandshakeRequest
fld public final static java.lang.String SEC_WEBSOCKET_EXTENSIONS = "Sec-WebSocket-Extensions"
fld public final static java.lang.String SEC_WEBSOCKET_KEY = "Sec-WebSocket-Key"
fld public final static java.lang.String SEC_WEBSOCKET_PROTOCOL = "Sec-WebSocket-Protocol"
fld public final static java.lang.String SEC_WEBSOCKET_VERSION = "Sec-WebSocket-Version"
meth public abstract boolean isUserInRole(java.lang.String)
meth public abstract java.lang.Object getHttpSession()
meth public abstract java.lang.String getQueryString()
meth public abstract java.net.URI getRequestURI()
meth public abstract java.security.Principal getUserPrincipal()
meth public abstract java.util.Map<java.lang.String,java.util.List<java.lang.String>> getHeaders()
meth public abstract java.util.Map<java.lang.String,java.util.List<java.lang.String>> getParameterMap()

CLSS public abstract interface !annotation jakarta.websocket.server.PathParam
 anno 0 java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy value=RUNTIME)
 anno 0 java.lang.annotation.Target(java.lang.annotation.ElementType[] value=[PARAMETER])
intf java.lang.annotation.Annotation
meth public abstract java.lang.String value()

CLSS public abstract interface jakarta.websocket.server.ServerApplicationConfig
meth public abstract java.util.Set<jakarta.websocket.server.ServerEndpointConfig> getEndpointConfigs(java.util.Set<java.lang.Class<? extends jakarta.websocket.Endpoint>>)
meth public abstract java.util.Set<java.lang.Class<?>> getAnnotatedEndpointClasses(java.util.Set<java.lang.Class<?>>)

CLSS public abstract interface jakarta.websocket.server.ServerContainer
intf jakarta.websocket.WebSocketContainer
meth public abstract void addEndpoint(jakarta.websocket.server.ServerEndpointConfig) throws jakarta.websocket.DeploymentException
meth public abstract void addEndpoint(java.lang.Class<?>) throws jakarta.websocket.DeploymentException

CLSS public abstract interface !annotation jakarta.websocket.server.ServerEndpoint
 anno 0 java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy value=RUNTIME)
 anno 0 java.lang.annotation.Target(java.lang.annotation.ElementType[] value=[TYPE])
intf java.lang.annotation.Annotation
meth public abstract !hasdefault java.lang.Class<? extends jakarta.websocket.Decoder>[] decoders() value= []
meth public abstract !hasdefault java.lang.Class<? extends jakarta.websocket.Encoder>[] encoders() value= []
meth public abstract !hasdefault java.lang.Class<? extends jakarta.websocket.server.ServerEndpointConfig$Configurator> configurator() value= class jakarta.websocket.server.ServerEndpointConfig$Configurator
meth public abstract !hasdefault java.lang.String[] subprotocols() value= []
meth public abstract java.lang.String value()

CLSS public abstract interface jakarta.websocket.server.ServerEndpointConfig
innr public final static Builder
innr public static Configurator
intf jakarta.websocket.EndpointConfig
meth public abstract jakarta.websocket.server.ServerEndpointConfig$Configurator getConfigurator()
meth public abstract java.lang.Class<?> getEndpointClass()
meth public abstract java.lang.String getPath()
meth public abstract java.util.List<jakarta.websocket.Extension> getExtensions()
meth public abstract java.util.List<java.lang.String> getSubprotocols()

CLSS public final static jakarta.websocket.server.ServerEndpointConfig$Builder
 outer jakarta.websocket.server.ServerEndpointConfig
meth public jakarta.websocket.server.ServerEndpointConfig build()
meth public jakarta.websocket.server.ServerEndpointConfig$Builder configurator(jakarta.websocket.server.ServerEndpointConfig$Configurator)
meth public jakarta.websocket.server.ServerEndpointConfig$Builder decoders(java.util.List<java.lang.Class<? extends jakarta.websocket.Decoder>>)
meth public jakarta.websocket.server.ServerEndpointConfig$Builder encoders(java.util.List<java.lang.Class<? extends jakarta.websocket.Encoder>>)
meth public jakarta.websocket.server.ServerEndpointConfig$Builder extensions(java.util.List<jakarta.websocket.Extension>)
meth public jakarta.websocket.server.ServerEndpointConfig$Builder subprotocols(java.util.List<java.lang.String>)
meth public static jakarta.websocket.server.ServerEndpointConfig$Builder create(java.lang.Class<?>,java.lang.String)
supr java.lang.Object
hfds decoders,encoders,endpointClass,extensions,path,serverEndpointConfigurator,subprotocols

CLSS public static jakarta.websocket.server.ServerEndpointConfig$Configurator
 outer jakarta.websocket.server.ServerEndpointConfig
cons public <init>()
meth public <%0 extends java.lang.Object> {%%0} getEndpointInstance(java.lang.Class<{%%0}>) throws java.lang.InstantiationException
meth public boolean checkOrigin(java.lang.String)
meth public java.lang.String getNegotiatedSubprotocol(java.util.List<java.lang.String>,java.util.List<java.lang.String>)
meth public java.util.List<jakarta.websocket.Extension> getNegotiatedExtensions(java.util.List<jakarta.websocket.Extension>,java.util.List<jakarta.websocket.Extension>)
meth public void modifyHandshake(jakarta.websocket.server.ServerEndpointConfig,jakarta.websocket.server.HandshakeRequest,jakarta.websocket.HandshakeResponse)
supr java.lang.Object
hfds containerDefaultConfigurator

CLSS public abstract interface java.io.Closeable
intf java.lang.AutoCloseable
meth public abstract void close() throws java.io.IOException

CLSS public abstract interface java.io.Flushable
meth public abstract void flush() throws java.io.IOException

CLSS public abstract interface java.io.Serializable

CLSS public abstract java.io.Writer
cons protected <init>()
cons protected <init>(java.lang.Object)
fld protected java.lang.Object lock
intf java.io.Closeable
intf java.io.Flushable
intf java.lang.Appendable
meth public abstract void close() throws java.io.IOException
meth public abstract void flush() throws java.io.IOException
meth public abstract void write(char[],int,int) throws java.io.IOException
meth public java.io.Writer append(char) throws java.io.IOException
meth public java.io.Writer append(java.lang.CharSequence) throws java.io.IOException
meth public java.io.Writer append(java.lang.CharSequence,int,int) throws java.io.IOException
meth public void write(char[]) throws java.io.IOException
meth public void write(int) throws java.io.IOException
meth public void write(java.lang.String) throws java.io.IOException
meth public void write(java.lang.String,int,int) throws java.io.IOException
supr java.lang.Object
hfds WRITE_BUFFER_SIZE,writeBuffer

CLSS public abstract interface java.lang.Appendable
meth public abstract java.lang.Appendable append(char) throws java.io.IOException
meth public abstract java.lang.Appendable append(java.lang.CharSequence) throws java.io.IOException
meth public abstract java.lang.Appendable append(java.lang.CharSequence,int,int) throws java.io.IOException

CLSS public abstract interface java.lang.AutoCloseable
meth public abstract void close() throws java.lang.Exception

CLSS public abstract interface java.lang.Cloneable

CLSS public abstract interface java.lang.Comparable<%0 extends java.lang.Object>
meth public abstract int compareTo({java.lang.Comparable%0})

CLSS public abstract interface !annotation java.lang.Deprecated
 anno 0 java.lang.annotation.Documented()
 anno 0 java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy value=RUNTIME)
 anno 0 java.lang.annotation.Target(java.lang.annotation.ElementType[] value=[CONSTRUCTOR, FIELD, LOCAL_VARIABLE, METHOD, PACKAGE, PARAMETER, TYPE])
intf java.lang.annotation.Annotation

CLSS public abstract java.lang.Enum<%0 extends java.lang.Enum<{java.lang.Enum%0}>>
cons protected <init>(java.lang.String,int)
intf java.io.Serializable
intf java.lang.Comparable<{java.lang.Enum%0}>
meth protected final java.lang.Object clone() throws java.lang.CloneNotSupportedException
meth protected final void finalize()
meth public final boolean equals(java.lang.Object)
meth public final int compareTo({java.lang.Enum%0})
meth public final int hashCode()
meth public final int ordinal()
meth public final java.lang.Class<{java.lang.Enum%0}> getDeclaringClass()
meth public final java.lang.String name()
meth public java.lang.String toString()
meth public static <%0 extends java.lang.Enum<{%%0}>> {%%0} valueOf(java.lang.Class<{%%0}>,java.lang.String)
supr java.lang.Object
hfds name,ordinal

CLSS public java.lang.Exception
cons protected <init>(java.lang.String,java.lang.Throwable,boolean,boolean)
cons public <init>()
cons public <init>(java.lang.String)
cons public <init>(java.lang.String,java.lang.Throwable)
cons public <init>(java.lang.Throwable)
supr java.lang.Throwable
hfds serialVersionUID

CLSS public abstract interface !annotation java.lang.FunctionalInterface
 anno 0 java.lang.annotation.Documented()
 anno 0 java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy value=RUNTIME)
 anno 0 java.lang.annotation.Target(java.lang.annotation.ElementType[] value=[TYPE])
intf java.lang.annotation.Annotation

CLSS public abstract interface java.lang.Iterable<%0 extends java.lang.Object>
meth public abstract java.util.Iterator<{java.lang.Iterable%0}> iterator()
meth public java.util.Spliterator<{java.lang.Iterable%0}> spliterator()
meth public void forEach(java.util.function.Consumer<? super {java.lang.Iterable%0}>)

CLSS public java.lang.Object
cons public <init>()
meth protected java.lang.Object clone() throws java.lang.CloneNotSupportedException
meth protected void finalize() throws java.lang.Throwable
meth public boolean equals(java.lang.Object)
meth public final java.lang.Class<?> getClass()
meth public final void notify()
meth public final void notifyAll()
meth public final void wait() throws java.lang.InterruptedException
meth public final void wait(long) throws java.lang.InterruptedException
meth public final void wait(long,int) throws java.lang.InterruptedException
meth public int hashCode()
meth public java.lang.String toString()

CLSS public abstract interface java.lang.Runnable
 anno 0 java.lang.FunctionalInterface()
meth public abstract void run()

CLSS public java.lang.RuntimeException
cons protected <init>(java.lang.String,java.lang.Throwable,boolean,boolean)
cons public <init>()
cons public <init>(java.lang.String)
cons public <init>(java.lang.String,java.lang.Throwable)
cons public <init>(java.lang.Throwable)
supr java.lang.Exception
hfds serialVersionUID

CLSS public java.lang.Throwable
cons protected <init>(java.lang.String,java.lang.Throwable,boolean,boolean)
cons public <init>()
cons public <init>(java.lang.String)
cons public <init>(java.lang.String,java.lang.Throwable)
cons public <init>(java.lang.Throwable)
intf java.io.Serializable
meth public final java.lang.Throwable[] getSuppressed()
meth public final void addSuppressed(java.lang.Throwable)
meth public java.lang.StackTraceElement[] getStackTrace()
meth public java.lang.String getLocalizedMessage()
meth public java.lang.String getMessage()
meth public java.lang.String toString()
meth public java.lang.Throwable fillInStackTrace()
meth public java.lang.Throwable getCause()
meth public java.lang.Throwable initCause(java.lang.Throwable)
meth public void printStackTrace()
meth public void printStackTrace(java.io.PrintStream)
meth public void printStackTrace(java.io.PrintWriter)
meth public void setStackTrace(java.lang.StackTraceElement[])
supr java.lang.Object
hfds CAUSE_CAPTION,EMPTY_THROWABLE_ARRAY,NULL_CAUSE_MESSAGE,SELF_SUPPRESSION_MESSAGE,SUPPRESSED_CAPTION,SUPPRESSED_SENTINEL,UNASSIGNED_STACK,backtrace,cause,detailMessage,serialVersionUID,stackTrace,suppressedExceptions
hcls PrintStreamOrWriter,SentinelHolder,WrappedPrintStream,WrappedPrintWriter

CLSS public abstract interface java.lang.annotation.Annotation
meth public abstract boolean equals(java.lang.Object)
meth public abstract int hashCode()
meth public abstract java.lang.Class<? extends java.lang.annotation.Annotation> annotationType()
meth public abstract java.lang.String toString()

CLSS public abstract interface !annotation java.lang.annotation.Documented
 anno 0 java.lang.annotation.Documented()
 anno 0 java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy value=RUNTIME)
 anno 0 java.lang.annotation.Target(java.lang.annotation.ElementType[] value=[ANNOTATION_TYPE])
intf java.lang.annotation.Annotation

CLSS public abstract interface !annotation java.lang.annotation.Inherited
 anno 0 java.lang.annotation.Documented()
 anno 0 java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy value=RUNTIME)
 anno 0 java.lang.annotation.Target(java.lang.annotation.ElementType[] value=[ANNOTATION_TYPE])
intf java.lang.annotation.Annotation

CLSS public abstract interface !annotation java.lang.annotation.Repeatable
 anno 0 java.lang.annotation.Documented()
 anno 0 java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy value=RUNTIME)
 anno 0 java.lang.annotation.Target(java.lang.annotation.ElementType[] value=[ANNOTATION_TYPE])
intf java.lang.annotation.Annotation
meth public abstract java.lang.Class<? extends java.lang.annotation.Annotation> value()

CLSS public abstract interface !annotation java.lang.annotation.Retention
 anno 0 java.lang.annotation.Documented()
 anno 0 java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy value=RUNTIME)
 anno 0 java.lang.annotation.Target(java.lang.annotation.ElementType[] value=[ANNOTATION_TYPE])
intf java.lang.annotation.Annotation
meth public abstract java.lang.annotation.RetentionPolicy value()

CLSS public abstract interface !annotation java.lang.annotation.Target
 anno 0 java.lang.annotation.Documented()
 anno 0 java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy value=RUNTIME)
 anno 0 java.lang.annotation.Target(java.lang.annotation.ElementType[] value=[ANNOTATION_TYPE])
intf java.lang.annotation.Annotation
meth public abstract java.lang.annotation.ElementType[] value()

CLSS public abstract interface java.rmi.Remote

CLSS public abstract java.security.BasicPermission
cons public <init>(java.lang.String)
cons public <init>(java.lang.String,java.lang.String)
intf java.io.Serializable
meth public boolean equals(java.lang.Object)
meth public boolean implies(java.security.Permission)
meth public int hashCode()
meth public java.lang.String getActions()
meth public java.security.PermissionCollection newPermissionCollection()
supr java.security.Permission
hfds exitVM,path,serialVersionUID,wildcard

CLSS public java.security.GeneralSecurityException
cons public <init>()
cons public <init>(java.lang.String)
cons public <init>(java.lang.String,java.lang.Throwable)
cons public <init>(java.lang.Throwable)
supr java.lang.Exception
hfds serialVersionUID

CLSS public abstract interface java.security.Guard
meth public abstract void checkGuard(java.lang.Object)

CLSS public abstract java.security.Permission
cons public <init>(java.lang.String)
intf java.io.Serializable
intf java.security.Guard
meth public abstract boolean equals(java.lang.Object)
meth public abstract boolean implies(java.security.Permission)
meth public abstract int hashCode()
meth public abstract java.lang.String getActions()
meth public final java.lang.String getName()
meth public java.lang.String toString()
meth public java.security.PermissionCollection newPermissionCollection()
meth public void checkGuard(java.lang.Object)
supr java.lang.Object
hfds name,serialVersionUID

CLSS public abstract interface java.security.Principal
meth public abstract boolean equals(java.lang.Object)
meth public abstract int hashCode()
meth public abstract java.lang.String getName()
meth public abstract java.lang.String toString()
meth public boolean implies(javax.security.auth.Subject)

CLSS public abstract interface java.sql.ResultSet
fld public final static int CLOSE_CURSORS_AT_COMMIT = 2
fld public final static int CONCUR_READ_ONLY = 1007
fld public final static int CONCUR_UPDATABLE = 1008
fld public final static int FETCH_FORWARD = 1000
fld public final static int FETCH_REVERSE = 1001
fld public final static int FETCH_UNKNOWN = 1002
fld public final static int HOLD_CURSORS_OVER_COMMIT = 1
fld public final static int TYPE_FORWARD_ONLY = 1003
fld public final static int TYPE_SCROLL_INSENSITIVE = 1004
fld public final static int TYPE_SCROLL_SENSITIVE = 1005
intf java.lang.AutoCloseable
intf java.sql.Wrapper
meth public abstract <%0 extends java.lang.Object> {%%0} getObject(int,java.lang.Class<{%%0}>) throws java.sql.SQLException
meth public abstract <%0 extends java.lang.Object> {%%0} getObject(java.lang.String,java.lang.Class<{%%0}>) throws java.sql.SQLException
meth public abstract boolean absolute(int) throws java.sql.SQLException
meth public abstract boolean first() throws java.sql.SQLException
meth public abstract boolean getBoolean(int) throws java.sql.SQLException
meth public abstract boolean getBoolean(java.lang.String) throws java.sql.SQLException
meth public abstract boolean isAfterLast() throws java.sql.SQLException
meth public abstract boolean isBeforeFirst() throws java.sql.SQLException
meth public abstract boolean isClosed() throws java.sql.SQLException
meth public abstract boolean isFirst() throws java.sql.SQLException
meth public abstract boolean isLast() throws java.sql.SQLException
meth public abstract boolean last() throws java.sql.SQLException
meth public abstract boolean next() throws java.sql.SQLException
meth public abstract boolean previous() throws java.sql.SQLException
meth public abstract boolean relative(int) throws java.sql.SQLException
meth public abstract boolean rowDeleted() throws java.sql.SQLException
meth public abstract boolean rowInserted() throws java.sql.SQLException
meth public abstract boolean rowUpdated() throws java.sql.SQLException
meth public abstract boolean wasNull() throws java.sql.SQLException
meth public abstract byte getByte(int) throws java.sql.SQLException
meth public abstract byte getByte(java.lang.String) throws java.sql.SQLException
meth public abstract byte[] getBytes(int) throws java.sql.SQLException
meth public abstract byte[] getBytes(java.lang.String) throws java.sql.SQLException
meth public abstract double getDouble(int) throws java.sql.SQLException
meth public abstract double getDouble(java.lang.String) throws java.sql.SQLException
meth public abstract float getFloat(int) throws java.sql.SQLException
meth public abstract float getFloat(java.lang.String) throws java.sql.SQLException
meth public abstract int findColumn(java.lang.String) throws java.sql.SQLException
meth public abstract int getConcurrency() throws java.sql.SQLException
meth public abstract int getFetchDirection() throws java.sql.SQLException
meth public abstract int getFetchSize() throws java.sql.SQLException
meth public abstract int getHoldability() throws java.sql.SQLException
meth public abstract int getInt(int) throws java.sql.SQLException
meth public abstract int getInt(java.lang.String) throws java.sql.SQLException
meth public abstract int getRow() throws java.sql.SQLException
meth public abstract int getType() throws java.sql.SQLException
meth public abstract java.io.InputStream getAsciiStream(int) throws java.sql.SQLException
meth public abstract java.io.InputStream getAsciiStream(java.lang.String) throws java.sql.SQLException
meth public abstract java.io.InputStream getBinaryStream(int) throws java.sql.SQLException
meth public abstract java.io.InputStream getBinaryStream(java.lang.String) throws java.sql.SQLException
meth public abstract java.io.InputStream getUnicodeStream(int) throws java.sql.SQLException
 anno 0 java.lang.Deprecated()
meth public abstract java.io.InputStream getUnicodeStream(java.lang.String) throws java.sql.SQLException
 anno 0 java.lang.Deprecated()
meth public abstract java.io.Reader getCharacterStream(int) throws java.sql.SQLException
meth public abstract java.io.Reader getCharacterStream(java.lang.String) throws java.sql.SQLException
meth public abstract java.io.Reader getNCharacterStream(int) throws java.sql.SQLException
meth public abstract java.io.Reader getNCharacterStream(java.lang.String) throws java.sql.SQLException
meth public abstract java.lang.Object getObject(int) throws java.sql.SQLException
meth public abstract java.lang.Object getObject(int,java.util.Map<java.lang.String,java.lang.Class<?>>) throws java.sql.SQLException
meth public abstract java.lang.Object getObject(java.lang.String) throws java.sql.SQLException
meth public abstract java.lang.Object getObject(java.lang.String,java.util.Map<java.lang.String,java.lang.Class<?>>) throws java.sql.SQLException
meth public abstract java.lang.String getCursorName() throws java.sql.SQLException
meth public abstract java.lang.String getNString(int) throws java.sql.SQLException
meth public abstract java.lang.String getNString(java.lang.String) throws java.sql.SQLException
meth public abstract java.lang.String getString(int) throws java.sql.SQLException
meth public abstract java.lang.String getString(java.lang.String) throws java.sql.SQLException
meth public abstract java.math.BigDecimal getBigDecimal(int) throws java.sql.SQLException
meth public abstract java.math.BigDecimal getBigDecimal(int,int) throws java.sql.SQLException
 anno 0 java.lang.Deprecated()
meth public abstract java.math.BigDecimal getBigDecimal(java.lang.String) throws java.sql.SQLException
meth public abstract java.math.BigDecimal getBigDecimal(java.lang.String,int) throws java.sql.SQLException
 anno 0 java.lang.Deprecated()
meth public abstract java.net.URL getURL(int) throws java.sql.SQLException
meth public abstract java.net.URL getURL(java.lang.String) throws java.sql.SQLException
meth public abstract java.sql.Array getArray(int) throws java.sql.SQLException
meth public abstract java.sql.Array getArray(java.lang.String) throws java.sql.SQLException
meth public abstract java.sql.Blob getBlob(int) throws java.sql.SQLException
meth public abstract java.sql.Blob getBlob(java.lang.String) throws java.sql.SQLException
meth public abstract java.sql.Clob getClob(int) throws java.sql.SQLException
meth public abstract java.sql.Clob getClob(java.lang.String) throws java.sql.SQLException
meth public abstract java.sql.Date getDate(int) throws java.sql.SQLException
meth public abstract java.sql.Date getDate(int,java.util.Calendar) throws java.sql.SQLException
meth public abstract java.sql.Date getDate(java.lang.String) throws java.sql.SQLException
meth public abstract java.sql.Date getDate(java.lang.String,java.util.Calendar) throws java.sql.SQLException
meth public abstract java.sql.NClob getNClob(int) throws java.sql.SQLException
meth public abstract java.sql.NClob getNClob(java.lang.String) throws java.sql.SQLException
meth public abstract java.sql.Ref getRef(int) throws java.sql.SQLException
meth public abstract java.sql.Ref getRef(java.lang.String) throws java.sql.SQLException
meth public abstract java.sql.ResultSetMetaData getMetaData() throws java.sql.SQLException
meth public abstract java.sql.RowId getRowId(int) throws java.sql.SQLException
meth public abstract java.sql.RowId getRowId(java.lang.String) throws java.sql.SQLException
meth public abstract java.sql.SQLWarning getWarnings() throws java.sql.SQLException
meth public abstract java.sql.SQLXML getSQLXML(int) throws java.sql.SQLException
meth public abstract java.sql.SQLXML getSQLXML(java.lang.String) throws java.sql.SQLException
meth public abstract java.sql.Statement getStatement() throws java.sql.SQLException
meth public abstract java.sql.Time getTime(int) throws java.sql.SQLException
meth public abstract java.sql.Time getTime(int,java.util.Calendar) throws java.sql.SQLException
meth public abstract java.sql.Time getTime(java.lang.String) throws java.sql.SQLException
meth public abstract java.sql.Time getTime(java.lang.String,java.util.Calendar) throws java.sql.SQLException
meth public abstract java.sql.Timestamp getTimestamp(int) throws java.sql.SQLException
meth public abstract java.sql.Timestamp getTimestamp(int,java.util.Calendar) throws java.sql.SQLException
meth public abstract java.sql.Timestamp getTimestamp(java.lang.String) throws java.sql.SQLException
meth public abstract java.sql.Timestamp getTimestamp(java.lang.String,java.util.Calendar) throws java.sql.SQLException
meth public abstract long getLong(int) throws java.sql.SQLException
meth public abstract long getLong(java.lang.String) throws java.sql.SQLException
meth public abstract short getShort(int) throws java.sql.SQLException
meth public abstract short getShort(java.lang.String) throws java.sql.SQLException
meth public abstract void afterLast() throws java.sql.SQLException
meth public abstract void beforeFirst() throws java.sql.SQLException
meth public abstract void cancelRowUpdates() throws java.sql.SQLException
meth public abstract void clearWarnings() throws java.sql.SQLException
meth public abstract void close() throws java.sql.SQLException
meth public abstract void deleteRow() throws java.sql.SQLException
meth public abstract void insertRow() throws java.sql.SQLException
meth public abstract void moveToCurrentRow() throws java.sql.SQLException
meth public abstract void moveToInsertRow() throws java.sql.SQLException
meth public abstract void refreshRow() throws java.sql.SQLException
meth public abstract void setFetchDirection(int) throws java.sql.SQLException
meth public abstract void setFetchSize(int) throws java.sql.SQLException
meth public abstract void updateArray(int,java.sql.Array) throws java.sql.SQLException
meth public abstract void updateArray(java.lang.String,java.sql.Array) throws java.sql.SQLException
meth public abstract void updateAsciiStream(int,java.io.InputStream) throws java.sql.SQLException
meth public abstract void updateAsciiStream(int,java.io.InputStream,int) throws java.sql.SQLException
meth public abstract void updateAsciiStream(int,java.io.InputStream,long) throws java.sql.SQLException
meth public abstract void updateAsciiStream(java.lang.String,java.io.InputStream) throws java.sql.SQLException
meth public abstract void updateAsciiStream(java.lang.String,java.io.InputStream,int) throws java.sql.SQLException
meth public abstract void updateAsciiStream(java.lang.String,java.io.InputStream,long) throws java.sql.SQLException
meth public abstract void updateBigDecimal(int,java.math.BigDecimal) throws java.sql.SQLException
meth public abstract void updateBigDecimal(java.lang.String,java.math.BigDecimal) throws java.sql.SQLException
meth public abstract void updateBinaryStream(int,java.io.InputStream) throws java.sql.SQLException
meth public abstract void updateBinaryStream(int,java.io.InputStream,int) throws java.sql.SQLException
meth public abstract void updateBinaryStream(int,java.io.InputStream,long) throws java.sql.SQLException
meth public abstract void updateBinaryStream(java.lang.String,java.io.InputStream) throws java.sql.SQLException
meth public abstract void updateBinaryStream(java.lang.String,java.io.InputStream,int) throws java.sql.SQLException
meth public abstract void updateBinaryStream(java.lang.String,java.io.InputStream,long) throws java.sql.SQLException
meth public abstract void updateBlob(int,java.io.InputStream) throws java.sql.SQLException
meth public abstract void updateBlob(int,java.io.InputStream,long) throws java.sql.SQLException
meth public abstract void updateBlob(int,java.sql.Blob) throws java.sql.SQLException
meth public abstract void updateBlob(java.lang.String,java.io.InputStream) throws java.sql.SQLException
meth public abstract void updateBlob(java.lang.String,java.io.InputStream,long) throws java.sql.SQLException
meth public abstract void updateBlob(java.lang.String,java.sql.Blob) throws java.sql.SQLException
meth public abstract void updateBoolean(int,boolean) throws java.sql.SQLException
meth public abstract void updateBoolean(java.lang.String,boolean) throws java.sql.SQLException
meth public abstract void updateByte(int,byte) throws java.sql.SQLException
meth public abstract void updateByte(java.lang.String,byte) throws java.sql.SQLException
meth public abstract void updateBytes(int,byte[]) throws java.sql.SQLException
meth public abstract void updateBytes(java.lang.String,byte[]) throws java.sql.SQLException
meth public abstract void updateCharacterStream(int,java.io.Reader) throws java.sql.SQLException
meth public abstract void updateCharacterStream(int,java.io.Reader,int) throws java.sql.SQLException
meth public abstract void updateCharacterStream(int,java.io.Reader,long) throws java.sql.SQLException
meth public abstract void updateCharacterStream(java.lang.String,java.io.Reader) throws java.sql.SQLException
meth public abstract void updateCharacterStream(java.lang.String,java.io.Reader,int) throws java.sql.SQLException
meth public abstract void updateCharacterStream(java.lang.String,java.io.Reader,long) throws java.sql.SQLException
meth public abstract void updateClob(int,java.io.Reader) throws java.sql.SQLException
meth public abstract void updateClob(int,java.io.Reader,long) throws java.sql.SQLException
meth public abstract void updateClob(int,java.sql.Clob) throws java.sql.SQLException
meth public abstract void updateClob(java.lang.String,java.io.Reader) throws java.sql.SQLException
meth public abstract void updateClob(java.lang.String,java.io.Reader,long) throws java.sql.SQLException
meth public abstract void updateClob(java.lang.String,java.sql.Clob) throws java.sql.SQLException
meth public abstract void updateDate(int,java.sql.Date) throws java.sql.SQLException
meth public abstract void updateDate(java.lang.String,java.sql.Date) throws java.sql.SQLException
meth public abstract void updateDouble(int,double) throws java.sql.SQLException
meth public abstract void updateDouble(java.lang.String,double) throws java.sql.SQLException
meth public abstract void updateFloat(int,float) throws java.sql.SQLException
meth public abstract void updateFloat(java.lang.String,float) throws java.sql.SQLException
meth public abstract void updateInt(int,int) throws java.sql.SQLException
meth public abstract void updateInt(java.lang.String,int) throws java.sql.SQLException
meth public abstract void updateLong(int,long) throws java.sql.SQLException
meth public abstract void updateLong(java.lang.String,long) throws java.sql.SQLException
meth public abstract void updateNCharacterStream(int,java.io.Reader) throws java.sql.SQLException
meth public abstract void updateNCharacterStream(int,java.io.Reader,long) throws java.sql.SQLException
meth public abstract void updateNCharacterStream(java.lang.String,java.io.Reader) throws java.sql.SQLException
meth public abstract void updateNCharacterStream(java.lang.String,java.io.Reader,long) throws java.sql.SQLException
meth public abstract void updateNClob(int,java.io.Reader) throws java.sql.SQLException
meth public abstract void updateNClob(int,java.io.Reader,long) throws java.sql.SQLException
meth public abstract void updateNClob(int,java.sql.NClob) throws java.sql.SQLException
meth public abstract void updateNClob(java.lang.String,java.io.Reader) throws java.sql.SQLException
meth public abstract void updateNClob(java.lang.String,java.io.Reader,long) throws java.sql.SQLException
meth public abstract void updateNClob(java.lang.String,java.sql.NClob) throws java.sql.SQLException
meth public abstract void updateNString(int,java.lang.String) throws java.sql.SQLException
meth public abstract void updateNString(java.lang.String,java.lang.String) throws java.sql.SQLException
meth public abstract void updateNull(int) throws java.sql.SQLException
meth public abstract void updateNull(java.lang.String) throws java.sql.SQLException
meth public abstract void updateObject(int,java.lang.Object) throws java.sql.SQLException
meth public abstract void updateObject(int,java.lang.Object,int) throws java.sql.SQLException
meth public abstract void updateObject(java.lang.String,java.lang.Object) throws java.sql.SQLException
meth public abstract void updateObject(java.lang.String,java.lang.Object,int) throws java.sql.SQLException
meth public abstract void updateRef(int,java.sql.Ref) throws java.sql.SQLException
meth public abstract void updateRef(java.lang.String,java.sql.Ref) throws java.sql.SQLException
meth public abstract void updateRow() throws java.sql.SQLException
meth public abstract void updateRowId(int,java.sql.RowId) throws java.sql.SQLException
meth public abstract void updateRowId(java.lang.String,java.sql.RowId) throws java.sql.SQLException
meth public abstract void updateSQLXML(int,java.sql.SQLXML) throws java.sql.SQLException
meth public abstract void updateSQLXML(java.lang.String,java.sql.SQLXML) throws java.sql.SQLException
meth public abstract void updateShort(int,short) throws java.sql.SQLException
meth public abstract void updateShort(java.lang.String,short) throws java.sql.SQLException
meth public abstract void updateString(int,java.lang.String) throws java.sql.SQLException
meth public abstract void updateString(java.lang.String,java.lang.String) throws java.sql.SQLException
meth public abstract void updateTime(int,java.sql.Time) throws java.sql.SQLException
meth public abstract void updateTime(java.lang.String,java.sql.Time) throws java.sql.SQLException
meth public abstract void updateTimestamp(int,java.sql.Timestamp) throws java.sql.SQLException
meth public abstract void updateTimestamp(java.lang.String,java.sql.Timestamp) throws java.sql.SQLException
meth public void updateObject(int,java.lang.Object,java.sql.SQLType) throws java.sql.SQLException
meth public void updateObject(int,java.lang.Object,java.sql.SQLType,int) throws java.sql.SQLException
meth public void updateObject(java.lang.String,java.lang.Object,java.sql.SQLType) throws java.sql.SQLException
meth public void updateObject(java.lang.String,java.lang.Object,java.sql.SQLType,int) throws java.sql.SQLException

CLSS public abstract interface java.sql.Wrapper
meth public abstract <%0 extends java.lang.Object> {%%0} unwrap(java.lang.Class<{%%0}>) throws java.sql.SQLException
meth public abstract boolean isWrapperFor(java.lang.Class<?>) throws java.sql.SQLException

CLSS public abstract interface java.util.Collection<%0 extends java.lang.Object>
intf java.lang.Iterable<{java.util.Collection%0}>
meth public abstract <%0 extends java.lang.Object> {%%0}[] toArray({%%0}[])
meth public abstract boolean add({java.util.Collection%0})
meth public abstract boolean addAll(java.util.Collection<? extends {java.util.Collection%0}>)
meth public abstract boolean contains(java.lang.Object)
meth public abstract boolean containsAll(java.util.Collection<?>)
meth public abstract boolean equals(java.lang.Object)
meth public abstract boolean isEmpty()
meth public abstract boolean remove(java.lang.Object)
meth public abstract boolean removeAll(java.util.Collection<?>)
meth public abstract boolean retainAll(java.util.Collection<?>)
meth public abstract int hashCode()
meth public abstract int size()
meth public abstract java.lang.Object[] toArray()
meth public abstract java.util.Iterator<{java.util.Collection%0}> iterator()
meth public abstract void clear()
meth public boolean removeIf(java.util.function.Predicate<? super {java.util.Collection%0}>)
meth public java.util.Spliterator<{java.util.Collection%0}> spliterator()
meth public java.util.stream.Stream<{java.util.Collection%0}> parallelStream()
meth public java.util.stream.Stream<{java.util.Collection%0}> stream()

CLSS public abstract interface java.util.EventListener

CLSS public java.util.EventObject
cons public <init>(java.lang.Object)
fld protected java.lang.Object source
intf java.io.Serializable
meth public java.lang.Object getSource()
meth public java.lang.String toString()
supr java.lang.Object
hfds serialVersionUID

CLSS public abstract interface java.util.List<%0 extends java.lang.Object>
intf java.util.Collection<{java.util.List%0}>
meth public abstract <%0 extends java.lang.Object> {%%0}[] toArray({%%0}[])
meth public abstract boolean add({java.util.List%0})
meth public abstract boolean addAll(int,java.util.Collection<? extends {java.util.List%0}>)
meth public abstract boolean addAll(java.util.Collection<? extends {java.util.List%0}>)
meth public abstract boolean contains(java.lang.Object)
meth public abstract boolean containsAll(java.util.Collection<?>)
meth public abstract boolean equals(java.lang.Object)
meth public abstract boolean isEmpty()
meth public abstract boolean remove(java.lang.Object)
meth public abstract boolean removeAll(java.util.Collection<?>)
meth public abstract boolean retainAll(java.util.Collection<?>)
meth public abstract int hashCode()
meth public abstract int indexOf(java.lang.Object)
meth public abstract int lastIndexOf(java.lang.Object)
meth public abstract int size()
meth public abstract java.lang.Object[] toArray()
meth public abstract java.util.Iterator<{java.util.List%0}> iterator()
meth public abstract java.util.List<{java.util.List%0}> subList(int,int)
meth public abstract java.util.ListIterator<{java.util.List%0}> listIterator()
meth public abstract java.util.ListIterator<{java.util.List%0}> listIterator(int)
meth public abstract void add(int,{java.util.List%0})
meth public abstract void clear()
meth public abstract {java.util.List%0} get(int)
meth public abstract {java.util.List%0} remove(int)
meth public abstract {java.util.List%0} set(int,{java.util.List%0})
meth public java.util.Spliterator<{java.util.List%0}> spliterator()
meth public void replaceAll(java.util.function.UnaryOperator<{java.util.List%0}>)
meth public void sort(java.util.Comparator<? super {java.util.List%0}>)

CLSS public abstract interface java.util.Map<%0 extends java.lang.Object, %1 extends java.lang.Object>
innr public abstract interface static Entry
meth public abstract boolean containsKey(java.lang.Object)
meth public abstract boolean containsValue(java.lang.Object)
meth public abstract boolean equals(java.lang.Object)
meth public abstract boolean isEmpty()
meth public abstract int hashCode()
meth public abstract int size()
meth public abstract java.util.Collection<{java.util.Map%1}> values()
meth public abstract java.util.Set<java.util.Map$Entry<{java.util.Map%0},{java.util.Map%1}>> entrySet()
meth public abstract java.util.Set<{java.util.Map%0}> keySet()
meth public abstract void clear()
meth public abstract void putAll(java.util.Map<? extends {java.util.Map%0},? extends {java.util.Map%1}>)
meth public abstract {java.util.Map%1} get(java.lang.Object)
meth public abstract {java.util.Map%1} put({java.util.Map%0},{java.util.Map%1})
meth public abstract {java.util.Map%1} remove(java.lang.Object)
meth public boolean remove(java.lang.Object,java.lang.Object)
meth public boolean replace({java.util.Map%0},{java.util.Map%1},{java.util.Map%1})
meth public void forEach(java.util.function.BiConsumer<? super {java.util.Map%0},? super {java.util.Map%1}>)
meth public void replaceAll(java.util.function.BiFunction<? super {java.util.Map%0},? super {java.util.Map%1},? extends {java.util.Map%1}>)
meth public {java.util.Map%1} compute({java.util.Map%0},java.util.function.BiFunction<? super {java.util.Map%0},? super {java.util.Map%1},? extends {java.util.Map%1}>)
meth public {java.util.Map%1} computeIfAbsent({java.util.Map%0},java.util.function.Function<? super {java.util.Map%0},? extends {java.util.Map%1}>)
meth public {java.util.Map%1} computeIfPresent({java.util.Map%0},java.util.function.BiFunction<? super {java.util.Map%0},? super {java.util.Map%1},? extends {java.util.Map%1}>)
meth public {java.util.Map%1} getOrDefault(java.lang.Object,{java.util.Map%1})
meth public {java.util.Map%1} merge({java.util.Map%0},{java.util.Map%1},java.util.function.BiFunction<? super {java.util.Map%1},? super {java.util.Map%1},? extends {java.util.Map%1}>)
meth public {java.util.Map%1} putIfAbsent({java.util.Map%0},{java.util.Map%1})
meth public {java.util.Map%1} replace({java.util.Map%0},{java.util.Map%1})

CLSS public java.util.concurrent.ExecutionException
cons protected <init>()
cons protected <init>(java.lang.String)
cons public <init>(java.lang.String,java.lang.Throwable)
cons public <init>(java.lang.Throwable)
supr java.lang.Exception
hfds serialVersionUID

CLSS public abstract interface java.util.concurrent.Executor
meth public abstract void execute(java.lang.Runnable)

CLSS public abstract interface java.util.concurrent.ExecutorService
intf java.util.concurrent.Executor
meth public abstract <%0 extends java.lang.Object> java.util.List<java.util.concurrent.Future<{%%0}>> invokeAll(java.util.Collection<? extends java.util.concurrent.Callable<{%%0}>>) throws java.lang.InterruptedException
meth public abstract <%0 extends java.lang.Object> java.util.List<java.util.concurrent.Future<{%%0}>> invokeAll(java.util.Collection<? extends java.util.concurrent.Callable<{%%0}>>,long,java.util.concurrent.TimeUnit) throws java.lang.InterruptedException
meth public abstract <%0 extends java.lang.Object> java.util.concurrent.Future<{%%0}> submit(java.lang.Runnable,{%%0})
meth public abstract <%0 extends java.lang.Object> java.util.concurrent.Future<{%%0}> submit(java.util.concurrent.Callable<{%%0}>)
meth public abstract <%0 extends java.lang.Object> {%%0} invokeAny(java.util.Collection<? extends java.util.concurrent.Callable<{%%0}>>) throws java.lang.InterruptedException,java.util.concurrent.ExecutionException
meth public abstract <%0 extends java.lang.Object> {%%0} invokeAny(java.util.Collection<? extends java.util.concurrent.Callable<{%%0}>>,long,java.util.concurrent.TimeUnit) throws java.lang.InterruptedException,java.util.concurrent.ExecutionException,java.util.concurrent.TimeoutException
meth public abstract boolean awaitTermination(long,java.util.concurrent.TimeUnit) throws java.lang.InterruptedException
meth public abstract boolean isShutdown()
meth public abstract boolean isTerminated()
meth public abstract java.util.List<java.lang.Runnable> shutdownNow()
meth public abstract java.util.concurrent.Future<?> submit(java.lang.Runnable)
meth public abstract void shutdown()

CLSS public abstract interface java.util.concurrent.Future<%0 extends java.lang.Object>
meth public abstract boolean cancel(boolean)
meth public abstract boolean isCancelled()
meth public abstract boolean isDone()
meth public abstract {java.util.concurrent.Future%0} get() throws java.lang.InterruptedException,java.util.concurrent.ExecutionException
meth public abstract {java.util.concurrent.Future%0} get(long,java.util.concurrent.TimeUnit) throws java.lang.InterruptedException,java.util.concurrent.ExecutionException,java.util.concurrent.TimeoutException

CLSS public abstract interface java.util.concurrent.ScheduledExecutorService
intf java.util.concurrent.ExecutorService
meth public abstract <%0 extends java.lang.Object> java.util.concurrent.ScheduledFuture<{%%0}> schedule(java.util.concurrent.Callable<{%%0}>,long,java.util.concurrent.TimeUnit)
meth public abstract java.util.concurrent.ScheduledFuture<?> schedule(java.lang.Runnable,long,java.util.concurrent.TimeUnit)
meth public abstract java.util.concurrent.ScheduledFuture<?> scheduleAtFixedRate(java.lang.Runnable,long,long,java.util.concurrent.TimeUnit)
meth public abstract java.util.concurrent.ScheduledFuture<?> scheduleWithFixedDelay(java.lang.Runnable,long,long,java.util.concurrent.TimeUnit)

CLSS public abstract interface java.util.concurrent.ThreadFactory
meth public abstract java.lang.Thread newThread(java.lang.Runnable)

CLSS public abstract interface javax.naming.Referenceable
meth public abstract javax.naming.Reference getReference() throws javax.naming.NamingException

CLSS public abstract interface javax.security.auth.callback.Callback

CLSS public javax.security.auth.login.LoginException
cons public <init>()
cons public <init>(java.lang.String)
supr java.security.GeneralSecurityException
hfds serialVersionUID

