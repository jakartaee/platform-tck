<?xml version="1.0" encoding="UTF-8"?>
<!--

    Copyright (c) 2018, 2020 Oracle and/or its affiliates. All rights reserved.

    This program and the accompanying materials are made available under the
    terms of the Eclipse Public License v. 2.0, which is available at
    http://www.eclipse.org/legal/epl-2.0.

    This Source Code may also be made available under the following Secondary
    Licenses when the conditions for such availability set forth in the
    Eclipse Public License v. 2.0 are satisfied: GNU General Public License,
    version 2 with the GNU Classpath Exception, which is available at
    https://www.gnu.org/software/classpath/license.html.

    SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0

-->

<ejb-jar version="2.1" xmlns="http://java.sun.com/xml/ns/j2ee" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://java.sun.com/xml/ns/j2ee http://java.sun.com/xml/ns/j2ee/ejb-jar_2_1.xsd">
  <display-name>Ejb1</display-name>
  <enterprise-beans>
    <entity>
      <display-name>CreditCardEJB</display-name>
      <ejb-name>CreditCardEJB</ejb-name>
      <local-home>com.sun.ts.tests.ejb.ee.pm.ejbql.schema.CreditCardLocalHome</local-home>
      <local>com.sun.ts.tests.ejb.ee.pm.ejbql.schema.CreditCardLocal</local>
      <ejb-class>com.sun.ts.tests.ejb.ee.pm.ejbql.schema.CreditCardEJB</ejb-class>
      <persistence-type>Container</persistence-type>
      <prim-key-class>java.lang.String</prim-key-class>
      <reentrant>false</reentrant>
      <cmp-version>2.x</cmp-version>
      <abstract-schema-name>CreditCardBean</abstract-schema-name>
      <cmp-field>
        <field-name>expires</field-name>
      </cmp-field>
      <cmp-field>
        <field-name>type</field-name>
      </cmp-field>
      <cmp-field>
        <field-name>number</field-name>
      </cmp-field>
      <cmp-field>
        <field-name>balance</field-name>
      </cmp-field>
      <cmp-field>
        <field-name>approved</field-name>
      </cmp-field>
      <cmp-field>
        <field-name>id</field-name>
      </cmp-field>
      <primkey-field>id</primkey-field>
      <ejb-ref>
        <ejb-ref-name>ejb/Order</ejb-ref-name>
        <ejb-ref-type>Entity</ejb-ref-type>
        <home>com.sun.ts.tests.ejb.ee.pm.ejbql.schema.OrderHome</home>
        <remote>com.sun.ts.tests.ejb.ee.pm.ejbql.schema.Order</remote>
        <ejb-link>OrderEJB</ejb-link>
      </ejb-ref>
      <ejb-ref>
        <ejb-ref-name>ejb/Customer</ejb-ref-name>
        <ejb-ref-type>Entity</ejb-ref-type>
        <home>com.sun.ts.tests.ejb.ee.pm.ejbql.schema.CustomerHome</home>
        <remote>com.sun.ts.tests.ejb.ee.pm.ejbql.schema.Customer</remote>
        <ejb-link>CustomerEJB</ejb-link>
      </ejb-ref>
      <ejb-local-ref>
        <ejb-ref-name>ejb/OrderLocal</ejb-ref-name>
        <ejb-ref-type>Entity</ejb-ref-type>
        <local-home>com.sun.ts.tests.ejb.ee.pm.ejbql.schema.OrderLocalHome</local-home>
        <local>com.sun.ts.tests.ejb.ee.pm.ejbql.schema.OrderLocal</local>
        <ejb-link>OrderEJB</ejb-link>
      </ejb-local-ref>
      <ejb-local-ref>
        <ejb-ref-name>ejb/CustomerLocal</ejb-ref-name>
        <ejb-ref-type>Entity</ejb-ref-type>
        <local-home>com.sun.ts.tests.ejb.ee.pm.ejbql.schema.CustomerLocalHome</local-home>
        <local>com.sun.ts.tests.ejb.ee.pm.ejbql.schema.CustomerLocal</local>
        <ejb-link>CustomerEJB</ejb-link>
      </ejb-local-ref>
      <security-identity>
        <description></description>
        <use-caller-identity></use-caller-identity>
      </security-identity>
    </entity>
    <entity>
      <display-name>CustomerEJB</display-name>
      <ejb-name>CustomerEJB</ejb-name>
      <home>com.sun.ts.tests.ejb.ee.pm.ejbql.schema.CustomerHome</home>
      <remote>com.sun.ts.tests.ejb.ee.pm.ejbql.schema.Customer</remote>
      <local-home>com.sun.ts.tests.ejb.ee.pm.ejbql.schema.CustomerLocalHome</local-home>
      <local>com.sun.ts.tests.ejb.ee.pm.ejbql.schema.CustomerLocal</local>
      <ejb-class>com.sun.ts.tests.ejb.ee.pm.ejbql.schema.CustomerEJB</ejb-class>
      <persistence-type>Container</persistence-type>
      <prim-key-class>java.lang.String</prim-key-class>
      <reentrant>false</reentrant>
      <cmp-version>2.x</cmp-version>
      <abstract-schema-name>CustomerBean</abstract-schema-name>
      <cmp-field>
        <field-name>name</field-name>
      </cmp-field>
      <cmp-field>
        <field-name>country</field-name>
      </cmp-field>
      <cmp-field>
        <field-name>id</field-name>
      </cmp-field>
      <primkey-field>id</primkey-field>
      <ejb-ref>
        <ejb-ref-name>ejb/Order</ejb-ref-name>
        <ejb-ref-type>Entity</ejb-ref-type>
        <home>com.sun.ts.tests.ejb.ee.pm.ejbql.schema.OrderHome</home>
        <remote>com.sun.ts.tests.ejb.ee.pm.ejbql.schema.Order</remote>
        <ejb-link>OrderEJB</ejb-link>
      </ejb-ref>
      <ejb-ref>
        <ejb-ref-name>ejb/Customer</ejb-ref-name>
        <ejb-ref-type>Entity</ejb-ref-type>
        <home>com.sun.ts.tests.ejb.ee.pm.ejbql.schema.OrderHome</home>
        <remote>com.sun.ts.tests.ejb.ee.pm.ejbql.schema.Order</remote>
        <ejb-link>OrderEJB</ejb-link>
      </ejb-ref>
      <ejb-ref>
        <ejb-ref-name>ejb/Alias</ejb-ref-name>
        <ejb-ref-type>Entity</ejb-ref-type>
        <home>com.sun.ts.tests.ejb.ee.pm.ejbql.schema.AliasHome</home>
        <remote>com.sun.ts.tests.ejb.ee.pm.ejbql.schema.Alias</remote>
        <ejb-link>AliasEJB</ejb-link>
      </ejb-ref>
      <ejb-local-ref>
        <ejb-ref-name>ejb/OrderLocal</ejb-ref-name>
        <ejb-ref-type>Entity</ejb-ref-type>
        <local-home>com.sun.ts.tests.ejb.ee.pm.ejbql.schema.OrderLocalHome</local-home>
        <local>com.sun.ts.tests.ejb.ee.pm.ejbql.schema.OrderLocal</local>
        <ejb-link>OrderEJB</ejb-link>
      </ejb-local-ref>
      <ejb-local-ref>
        <ejb-ref-name>ejb/PhoneLocal</ejb-ref-name>
        <ejb-ref-type>Entity</ejb-ref-type>
        <local-home>com.sun.ts.tests.ejb.ee.pm.ejbql.schema.PhoneLocalHome</local-home>
        <local>com.sun.ts.tests.ejb.ee.pm.ejbql.schema.PhoneLocal</local>
        <ejb-link>PhoneEJB</ejb-link>
      </ejb-local-ref>
      <ejb-local-ref>
        <ejb-ref-name>ejb/AddressLocal</ejb-ref-name>
        <ejb-ref-type>Entity</ejb-ref-type>
        <local-home>com.sun.ts.tests.ejb.ee.pm.ejbql.schema.AddressLocalHome</local-home>
        <local>com.sun.ts.tests.ejb.ee.pm.ejbql.schema.AddressLocal</local>
        <ejb-link>AddressEJB</ejb-link>
      </ejb-local-ref>
      <ejb-local-ref>
        <ejb-ref-name>ejb/AliasLocal</ejb-ref-name>
        <ejb-ref-type>Entity</ejb-ref-type>
        <local-home>com.sun.ts.tests.ejb.ee.pm.ejbql.schema.AliasLocalHome</local-home>
        <local>com.sun.ts.tests.ejb.ee.pm.ejbql.schema.AliasLocal</local>
        <ejb-link>AliasEJB</ejb-link>
      </ejb-local-ref>
      <ejb-local-ref>
        <ejb-ref-name>ejb/CreditCardLocal</ejb-ref-name>
        <ejb-ref-type>Entity</ejb-ref-type>
        <local-home>com.sun.ts.tests.ejb.ee.pm.ejbql.schema.CreditCardLocalHome</local-home>
        <local>com.sun.ts.tests.ejb.ee.pm.ejbql.schema.CreditCardLocal</local>
        <ejb-link>CreditCardEJB</ejb-link>
      </ejb-local-ref>
      <ejb-local-ref>
        <ejb-ref-name>ejb/CustomerLocal</ejb-ref-name>
        <ejb-ref-type>Entity</ejb-ref-type>
        <local-home>com.sun.ts.tests.ejb.ee.pm.ejbql.schema.CustomerLocalHome</local-home>
        <local>com.sun.ts.tests.ejb.ee.pm.ejbql.schema.CustomerLocal</local>
        <ejb-link>CustomerEJB</ejb-link>
      </ejb-local-ref>
      <ejb-local-ref>
        <ejb-ref-name>ejb/SpouseLocal</ejb-ref-name>
        <ejb-ref-type>Entity</ejb-ref-type>
        <local-home>com.sun.ts.tests.ejb.ee.pm.ejbql.schema.SpouseLocalHome</local-home>
        <local>com.sun.ts.tests.ejb.ee.pm.ejbql.schema.SpouseLocal</local>
        <ejb-link>SpouseEJB</ejb-link>
       </ejb-local-ref>
       <ejb-local-ref>
        <ejb-ref-name>ejb/InfoLocal</ejb-ref-name>
        <ejb-ref-type>Entity</ejb-ref-type>
        <local-home>com.sun.ts.tests.ejb.ee.pm.ejbql.schema.InfoLocalHome</local-home>
        <local>com.sun.ts.tests.ejb.ee.pm.ejbql.schema.InfoLocal</local>
        <ejb-link>InfoEJB</ejb-link>
       </ejb-local-ref>
      <security-identity>
        <description></description>
        <use-caller-identity></use-caller-identity>
      </security-identity>
      <query>
        <description></description>
        <query-method>
          <method-name>ejbSelectCreditCard</method-name>
          <method-params>
            <method-param>java.lang.String</method-param>
          </method-params>
        </query-method>
        <ejb-ql>SELECT OBJECT(c) FROM CreditCardBean AS c WHERE c.id = ?1</ejb-ql>
      </query>
      <query>
        <description></description>
        <query-method>
          <method-name>findCustomerByQuery29</method-name>
          <method-params>
            <method-param>java.lang.String</method-param>
            <method-param>java.lang.String</method-param>
            <method-param>java.lang.String</method-param>
            <method-param>java.lang.String</method-param>
          </method-params>
        </query-method>
        <ejb-ql>SELECT ObJeCt(c) from CustomerBean c WHERE c.home.city = ?2 AND c.home.state = ?3</ejb-ql>
      </query>
      <query>
        <description></description>
        <query-method>
          <method-name>findCustomersByQuery30</method-name>
          <method-params />
        </query-method>
        <ejb-ql>Select DISTINCT Object(c) FROM CustomerBean c, IN(c.orders) o where o.totalPrice &lt; 1250</ejb-ql>
      </query>
      <query>
        <description></description>
        <query-method>
          <method-name>findCustomerByQuery16</method-name>
          <method-params />
        </query-method>
        <ejb-ql>Select Object(c) FROM CustomerBean c where c.home.zip = c.work.zip</ejb-ql>
      </query>
      <query>
        <description></description>
        <query-method>
          <method-name>findCustomersByQuery32</method-name>
          <method-params>
            <method-param>java.lang.String</method-param>
          </method-params>
        </query-method>
        <ejb-ql>SELECT Distinct ObJeCt(c) from CustomerBean c WHERE c.home.city = ?1</ejb-ql>
      </query>
      <query>
        <description></description>
        <query-method>
          <method-name>findCustomersByWorkCity</method-name>
          <method-params>
            <method-param>java.lang.String</method-param>
          </method-params>
        </query-method>
        <ejb-ql>Select Distinct Object(c) FROM CustomerBean c where c.work.city = ?1</ejb-ql>
      </query>
      <query>
        <description></description>
        <query-method>
          <method-name>ejbSelectCustomerAddressByCollection</method-name>
          <method-params>
            <method-param>java.lang.String</method-param>
          </method-params>
        </query-method>
        <ejb-ql>Select DISTINCT c.work.street FROM CustomerBean c WHERE c.work.state = ?1</ejb-ql>
      </query>
      <query>
        <description></description>
        <query-method>
          <method-name>ejbSelectCustomersByAlias</method-name>
          <method-params>
            <method-param>java.lang.String</method-param>
          </method-params>
        </query-method>
        <result-type-mapping>Remote</result-type-mapping>
        <ejb-ql>SELECT OBJECT(c) From CustomerBean c, in(c.aliases) a WHERE a.alias = ?1</ejb-ql>
      </query>
      <query>
        <description></description>
        <query-method>
          <method-name>ejbSelectCustomersByAlias</method-name>
          <method-params>
            <method-param>java.lang.String</method-param>
            <method-param>java.lang.String</method-param>
          </method-params>
        </query-method>
        <result-type-mapping>Remote</result-type-mapping>
        <ejb-ql>SELECT OBJECT(c) From CustomerBean c, in(c.aliases) a WHERE a.alias = ?1 or a.id = ?2</ejb-ql>
      </query>
      <query>
        <description></description>
        <query-method>
          <method-name>ejbSelectAllWorkAddresses</method-name>
          <method-params />
        </query-method>
        <ejb-ql>SELECT Distinct c.work From CustomerBean AS c, AddressBean AS a where a.street = '1 Network Drive'</ejb-ql>
      </query>
      <query>
        <description></description>
        <query-method>
          <method-name>findCustomersByQuery14</method-name>
          <method-params />
        </query-method>
        <ejb-ql>Select Distinct Object(c) FROM CustomerBean c, in(c.aliases) a WHERE a.customerNoop IS NULL</ejb-ql>
      </query>
      <query>
        <description></description>
        <query-method>
          <method-name>findCustomersByQuery15</method-name>
          <method-params />
        </query-method>
        <ejb-ql>sElEcT Distinct oBJeCt(c) FROM CustomerBean c, IN(c.aliases) a WHERE a.customerNoop IS NOT NULL</ejb-ql>
      </query>
      <query>
        <description></description>
        <query-method>
          <method-name>findAllCustomersByAliasName</method-name>
          <method-params>
            <method-param>java.lang.String</method-param>
          </method-params>
        </query-method>
        <ejb-ql>Select Distinct OBJECT(c) FrOm CustomerBean c, In(c.aliases) a WHERE a.alias = ?1</ejb-ql>
      </query>
      <query>
        <description></description>
        <query-method>
          <method-name>findCustomersByCreditCardType</method-name>
          <method-params>
            <method-param>java.lang.String</method-param>
          </method-params>
        </query-method>
        <ejb-ql>Select Distinct OBJECT(c) fRoM CustomerBean c, IN(c.creditCards) a where a.type = ?1</ejb-ql>
      </query>
      <query>
        <description></description>
        <query-method>
          <method-name>findCustomersByQuery10</method-name>
          <method-params />
        </query-method>
        <ejb-ql>select distinct object(c) FROM CustomerBean c WHERE c.home.zip LIKE '%77'</ejb-ql>
      </query>
      <query>
        <description></description>
        <query-method>
          <method-name>findCustomersByQuery11</method-name>
          <method-params />
        </query-method>
        <ejb-ql>Select Distinct Object(c) FROM CustomerBean c WHERE c.home.zip not like '%44_'</ejb-ql>
      </query>
      <query>
        <description></description>
        <query-method>
          <method-name>findCustomersByQuery12</method-name>
          <method-params />
        </query-method>
        <ejb-ql>Select Distinct Object(c) FROM CustomerBean c WHERE c.aliases IS EMPTY</ejb-ql>
      </query>
      <query>
        <description></description>
        <query-method>
          <method-name>findCustomerByQuery17</method-name>
          <method-params>
            <method-param>java.lang.String</method-param>
          </method-params>
        </query-method>
        <ejb-ql>Select Object(c) FROM CustomerBean c where c.name = ?1</ejb-ql>
      </query>
      <query>
        <description></description>
        <query-method>
          <method-name>findCustomersByQuery13</method-name>
          <method-params />
        </query-method>
        <ejb-ql>Select Distinct Object(c) FROM CustomerBean c WHERE c.aliases IS NOT EMPTY</ejb-ql>
      </query>
      <query>
        <description></description>
        <query-method>
          <method-name>findAllCustomers</method-name>
          <method-params />
        </query-method>
        <ejb-ql>Select Distinct OBJECT(c) FROM CustomerBean AS c</ejb-ql>
      </query>
      <query>
        <description></description>
        <query-method>
          <method-name>ejbSelectAllHomeZipCodesByCity</method-name>
          <method-params>
            <method-param>java.lang.String</method-param>
          </method-params>
        </query-method>
        <ejb-ql>SELECT c.home.zip FROM CustomerBean c WHERE c.home.city = ?1</ejb-ql>
      </query>
      <query>
        <description></description>
        <query-method>
          <method-name>ejbSelectHomeAddress</method-name>
          <method-params />
        </query-method>
        <ejb-ql>SELECT c.home FROM CustomerBean c WHERE c.name = 'Alan E. Frechette'</ejb-ql>
      </query>
      <query>
        <description></description>
        <query-method>
          <method-name>findCustomersByQuery9</method-name>
          <method-params />
        </query-method>
        <ejb-ql>SELECT DISTINCT OBJECT(c) FROM CustomerBean c WHERE c.home.city Not iN ('Swansea', 'Brookline')</ejb-ql>
      </query>
      <query>
        <description></description>
        <query-method>
          <method-name>findCustomersByQuery25</method-name>
          <method-params />
        </query-method>
        <ejb-ql>sELEct dIsTiNcT oBjEcT(c) FROM CustomerBean c WHERE c.work.zip IS NULL</ejb-ql>
      </query>
      <query>
        <description></description>
        <query-method>
          <method-name>findCustomersByQuery26</method-name>
          <method-params />
        </query-method>
        <ejb-ql>Select Distinct Object(c) FROM CustomerBean c WHERE c.work.zip IS NOT NULL</ejb-ql>
      </query>
      <query>
        <description></description>
        <query-method>
          <method-name>findCustomersByQuery27</method-name>
          <method-params />
        </query-method>
        <ejb-ql>Select Distinct Object(c) From CustomerBean c where c.name = c.name</ejb-ql>
      </query>
      <query>
        <description></description>
        <query-method>
          <method-name>findCustomerByName</method-name>
          <method-params>
            <method-param>java.lang.String</method-param>
          </method-params>
        </query-method>
        <ejb-ql>sElEcT oBjEcT(c) FROM CustomerBean c Where c.name = ?1</ejb-ql>
      </query>
      <query>
        <description></description>
        <query-method>
          <method-name>findCustomersByQuery28</method-name>
          <method-params />
        </query-method>
        <ejb-ql>select distinct object(c) FROM CustomerBean c, in(c.aliases) a WHERE a.alias LIKE 'sh\_ll' EsCaPe '\'</ejb-ql>
      </query>
      <query>
        <description></description>
        <query-method>
          <method-name>findCustomersByQuery8</method-name>
          <method-params />
        </query-method>
        <ejb-ql>select distinct object(c) FROM CustomerBean c WHERE c.home.city IN ('Lexington')</ejb-ql>
      </query>
      <query>
        <description></description>
        <query-method>
          <method-name>ejbSelectCustomerAddressBySet</method-name>
          <method-params>
            <method-param>java.lang.String</method-param>
          </method-params>
        </query-method>
        <ejb-ql>Select DISTINCT c.work.street FROM CustomerBean c WHERE c.work.state = ?1</ejb-ql>
      </query>
      <query>
        <description></description>
        <query-method>
          <method-name>findCustomersByQuery22</method-name>
          <method-params>
            <method-param>java.lang.String</method-param>
          </method-params>
        </query-method>
        <ejb-ql>Select Distinct Object(c) from CustomerBean c, in(c.aliases) a where c.name = ?1 AND a.customerNoop IS NULL</ejb-ql>
      </query>
      <query>
        <description></description>
        <query-method>
          <method-name>findCustomersByQuery23</method-name>
          <method-params>
            <method-param>java.lang.String</method-param>
          </method-params>
        </query-method>
        <ejb-ql>select distinct object(c) fRoM CustomerBean c, IN(c.aliases) a where c.name = ?1 OR a.customerNoop IS NULL</ejb-ql>
      </query>
      <query>
        <description></description>
        <query-method>
          <method-name>findCustomersByQuery24</method-name>
          <method-params />
        </query-method>
        <ejb-ql>SELECT DISTINCT OBJECT(c) from CustomerBean c, in(c.aliases) a where NOT a.customerNoop IS NULL</ejb-ql>
      </query>
      <query>
        <description></description>
        <query-method>
          <method-name>findCustomerByHomePhoneNumber</method-name>
          <method-params>
            <method-param>java.lang.String</method-param>
          </method-params>
        </query-method>
        <ejb-ql>Select OBJECT(c) FROM CustomerBean c, in(c.home.phones) p where p.number = ?1</ejb-ql>
      </query>
      <query>
        <description></description>
        <query-method>
          <method-name>ejbSelectHomeZipCodesByCity</method-name>
          <method-params>
            <method-param>java.lang.String</method-param>
          </method-params>
        </query-method>
        <ejb-ql>Select c.home.zip FROM CustomerBean c where c.home.city = ?1</ejb-ql>
      </query>
      <query>
        <description></description>
        <query-method>
          <method-name>findCustomerByHomeAddress</method-name>
          <method-params>
            <method-param>java.lang.String</method-param>
            <method-param>java.lang.String</method-param>
            <method-param>java.lang.String</method-param>
            <method-param>java.lang.String</method-param>
          </method-params>
        </query-method>
        <ejb-ql>SELECT ObJeCt(c) from CustomerBean c WHERE c.home.street = ?1 AND c.home.city = ?2 AND c.home.state = ?3 and c.home.zip = ?4</ejb-ql>
      </query>
      <query>
        <description></description>
        <query-method>
          <method-name>ejbSelectPhonesByArea</method-name>
          <method-params>
            <method-param>java.lang.String</method-param>
          </method-params>
        </query-method>
        <result-type-mapping>Local</result-type-mapping>
        <ejb-ql>SELECT OBJECT(c) From CustomerBean c, IN(c.home.phones) p where p.area = ?1</ejb-ql>
      </query>
      <query>
        <description></description>
        <query-method>
          <method-name>findCustomersByQuery33</method-name>
          <method-params />
        </query-method>
        <ejb-ql>SELECT DISTINCT OBJECT(c) from CustomerBean c where c.home.state IN('NH', 'RI')</ejb-ql>
      </query>
      <query>
        <description></description>
        <query-method>
          <method-name>findCustomersByQuery34</method-name>
          <method-params />
        </query-method>
        <ejb-ql>SELECT DISTINCT OBJECT(c) from CustomerBean c WHERE (c.home.state = 'NH') OR (c.home.state = 'RI')</ejb-ql>
      </query>
      <query>
        <description></description>
        <query-method>
          <method-name>findCustomersByQuery35</method-name>
          <method-params />
        </query-method>
        <ejb-ql>SELECT DISTINCT OBJECT(c) from CustomerBean c wHeRe c.home.state NOT IN('NH', 'RI')</ejb-ql>
      </query>
      <query>
        <description></description>
        <query-method>
          <method-name>findCustomersByQuery36</method-name>
          <method-params />
        </query-method>
        <ejb-ql>SELECT DISTINCT OBJECT(c) from CustomerBean c where NOT ((c.home.state = 'NH') OR (c.home.state = 'RI'))</ejb-ql>
      </query>
      <query>
        <description></description>
        <query-method>
          <method-name>findCustomersByQuery37</method-name>
          <method-params>
            <method-param>java.lang.String</method-param>
          </method-params>
        </query-method>
        <ejb-ql>SELECT OBJECT(c) From CustomerBean c where c.home.city IN(?1)</ejb-ql>
      </query>
      <query>
        <description></description>
        <query-method>
          <method-name>findCustomersByQuery38</method-name>
          <method-params>
            <method-param>java.lang.String</method-param>
          </method-params>
        </query-method>
        <ejb-ql>SELECT Distinct OBJECT(c) From CustomerBean c, IN(c.home.phones) p where p.area LIKE ?1</ejb-ql>
      </query>
      <query>
        <description></description>
        <query-method>
          <method-name>findCustomersByQuery39</method-name>
          <method-params />
        </query-method>
        <ejb-ql>Select Distinct Object(c) from CustomerBean c where c.name is null</ejb-ql>
      </query>
      <query>
        <description></description>
        <query-method>
          <method-name>findCustomerByQuery40</method-name>
          <method-params />
        </query-method>
        <ejb-ql>Select s.customer from SpouseBean s where s.id = '6'</ejb-ql>
      </query>
      <query>
        <description></description>
        <query-method>
          <method-name>findCustomersByQuery41</method-name>
          <method-params />
        </query-method>
        <ejb-ql>Select Distinct s.customer from SpouseBean s</ejb-ql>
      </query>
      <query>
        <description></description>
        <query-method>
          <method-name>findCustomersByQuery43</method-name>
          <method-params />
        </query-method>
        <ejb-ql>Select Object(c) from CustomerBean c where c.aliasesNoop IS NOT EMPTY or c.id &lt;&gt; '1'</ejb-ql>
      </query>
      <query>
        <description></description>
        <query-method>
          <method-name>findCustomersByQuery44</method-name>
          <method-params />
        </query-method>
        <ejb-ql>select distinct object(c) FROM CustomerBean c, in(c.aliases) a WHERE a.alias LIKE '%\_%' escape '\'</ejb-ql>
      </query>
      <query>
        <description></description>
        <query-method>
          <method-name>ejbSelectCustomersByQuery42</method-name>
          <method-params />
        </query-method>
        <ejb-ql>Select Distinct c.home from CustomerBean AS c, SpouseBean AS s where c.name LIKE '%ette%'</ejb-ql>
      </query>
      <query>
        <description></description>
        <query-method>
          <method-name>findCustomersByQuery42</method-name>
          <method-params>
            <method-param>double</method-param>
          </method-params>
        </query-method>
        <ejb-ql>Select Distinct Object(c) from CustomerBean c, IN(c.creditCards) b where SQRT(b.balance) = ?1</ejb-ql>
      </query>
      <query>
        <description></description>
        <query-method>
          <method-name>ejbSelectAllHomeCities</method-name>
          <method-params />
        </query-method>
        <ejb-ql>Select Count(c.home.city) from CustomerBean c</ejb-ql>
      </query>
      <query>
        <description></description>
        <query-method>
          <method-name>ejbSelectNotNullHomeCities</method-name>
          <method-params />
        </query-method>
        <ejb-ql>Select Count(Distinct c.home.city) from CustomerBean c</ejb-ql>
      </query>
      <query>
        <description></description>
        <query-method>
          <method-name>ejbSelectCustomersByWorkZipCode</method-name>
          <method-params />
        </query-method>
        <ejb-ql>Select c.work.zip from CustomerBean c</ejb-ql>
      </query>
      <query>
        <description></description>
        <query-method>
          <method-name>ejbSelectCustomersByNotNullWorkZipCode</method-name>
          <method-params />
        </query-method>
        <ejb-ql>Select c.work.zip from CustomerBean c where c.work.zip IS NOT NULL ORDER BY c.work.zip ASC</ejb-ql>
      </query>
      <query>
        <description></description>
        <query-method>
          <method-name>ejbSelectCustomerByHomeAddress</method-name>
          <method-params />
        </query-method>
        <ejb-ql>Select c.name from CustomerBean c where c.home.street = '212 Edgewood Drive'</ejb-ql>
      </query>
      <query>
        <description></description>
        <query-method>
          <method-name>findCustomersByHomeInfo</method-name>
          <method-params>
            <method-param>java.lang.String</method-param>
            <method-param>java.lang.String</method-param>
            <method-param>java.lang.String</method-param>
            <method-param>java.lang.String</method-param>
          </method-params>
        </query-method>
        <ejb-ql>SELECT ObJeCt(c) from CustomerBean c WHERE c.home.street = ?1 OR c.home.city = ?2 OR c.home.state = ?3 or c.home.zip = ?4</ejb-ql>
      </query>
    </entity>
    <entity>
      <display-name>PhoneEJB</display-name>
      <ejb-name>PhoneEJB</ejb-name>
      <local-home>com.sun.ts.tests.ejb.ee.pm.ejbql.schema.PhoneLocalHome</local-home>
      <local>com.sun.ts.tests.ejb.ee.pm.ejbql.schema.PhoneLocal</local>
      <ejb-class>com.sun.ts.tests.ejb.ee.pm.ejbql.schema.PhoneEJB</ejb-class>
      <persistence-type>Container</persistence-type>
      <prim-key-class>java.lang.String</prim-key-class>
      <reentrant>false</reentrant>
      <cmp-version>2.x</cmp-version>
      <abstract-schema-name>PhoneBean</abstract-schema-name>
      <cmp-field>
        <field-name>number</field-name>
      </cmp-field>
      <cmp-field>
        <field-name>area</field-name>
      </cmp-field>
      <cmp-field>
        <field-name>id</field-name>
      </cmp-field>
      <primkey-field>id</primkey-field>
      <ejb-local-ref>
        <ejb-ref-name>ejb/AddressLocal</ejb-ref-name>
        <ejb-ref-type>Entity</ejb-ref-type>
        <local-home>com.sun.ts.tests.ejb.ee.pm.ejbql.schema.AddressLocalHome</local-home>
        <local>com.sun.ts.tests.ejb.ee.pm.ejbql.schema.AddressLocal</local>
        <ejb-link>AddressEJB</ejb-link>
      </ejb-local-ref>
      <security-identity>
        <description></description>
        <use-caller-identity></use-caller-identity>
      </security-identity>
    </entity>
    <entity>
      <display-name>AddressEJB</display-name>
      <ejb-name>AddressEJB</ejb-name>
      <local-home>com.sun.ts.tests.ejb.ee.pm.ejbql.schema.AddressLocalHome</local-home>
      <local>com.sun.ts.tests.ejb.ee.pm.ejbql.schema.AddressLocal</local>
      <ejb-class>com.sun.ts.tests.ejb.ee.pm.ejbql.schema.AddressEJB</ejb-class>
      <persistence-type>Container</persistence-type>
      <prim-key-class>java.lang.String</prim-key-class>
      <reentrant>false</reentrant>
      <cmp-version>2.x</cmp-version>
      <abstract-schema-name>AddressBean</abstract-schema-name>
      <cmp-field>
        <field-name>zip</field-name>
      </cmp-field>
      <cmp-field>
        <field-name>state</field-name>
      </cmp-field>
      <cmp-field>
        <field-name>city</field-name>
      </cmp-field>
      <cmp-field>
        <field-name>street</field-name>
      </cmp-field>
      <cmp-field>
        <field-name>id</field-name>
      </cmp-field>
      <primkey-field>id</primkey-field>
      <ejb-local-ref>
        <ejb-ref-name>ejb/PhoneLocal</ejb-ref-name>
        <ejb-ref-type>Entity</ejb-ref-type>
        <local-home>com.sun.ts.tests.ejb.ee.pm.ejbql.schema.PhoneLocalHome</local-home>
        <local>com.sun.ts.tests.ejb.ee.pm.ejbql.schema.PhoneLocal</local>
        <ejb-link>PhoneEJB</ejb-link>
      </ejb-local-ref>
      <security-identity>
        <description></description>
        <use-caller-identity></use-caller-identity>
      </security-identity>
    </entity>
    <entity>
      <display-name>ProductEJB</display-name>
      <ejb-name>ProductEJB</ejb-name>
      <home>com.sun.ts.tests.ejb.ee.pm.ejbql.schema.ProductHome</home>
      <remote>com.sun.ts.tests.ejb.ee.pm.ejbql.schema.Product</remote>
      <local-home>com.sun.ts.tests.ejb.ee.pm.ejbql.schema.ProductLocalHome</local-home>
      <local>com.sun.ts.tests.ejb.ee.pm.ejbql.schema.ProductLocal</local>
      <ejb-class>com.sun.ts.tests.ejb.ee.pm.ejbql.schema.ProductEJB</ejb-class>
      <persistence-type>Container</persistence-type>
      <prim-key-class>java.lang.String</prim-key-class>
      <reentrant>false</reentrant>
      <cmp-version>2.x</cmp-version>
      <abstract-schema-name>ProductBean</abstract-schema-name>
      <cmp-field>
        <field-name>name</field-name>
      </cmp-field>
      <cmp-field>
        <field-name>partNumber</field-name>
      </cmp-field>
      <cmp-field>
        <field-name>price</field-name>
      </cmp-field>
      <cmp-field>
        <field-name>quantity</field-name>
      </cmp-field>
      <cmp-field>
        <field-name>id</field-name>
      </cmp-field>
      <primkey-field>id</primkey-field>
      <security-identity>
        <description></description>
        <use-caller-identity></use-caller-identity>
      </security-identity>
      <query>
        <description></description>
        <query-method>
          <method-name>ejbSelectAllProducts</method-name>
          <method-params />
        </query-method>
        <result-type-mapping>Remote</result-type-mapping>
        <ejb-ql>Select OBJECT(p) From ProductBean p where p.name LIKE 'ZZZ'</ejb-ql>
      </query>
      <query>
        <description></description>
        <query-method>
          <method-name>findAllProducts</method-name>
          <method-params />
        </query-method>
        <ejb-ql>SELECT DISTINCT OBJECT(p) FROM ProductBean p</ejb-ql>
      </query>
      <query>
        <description></description>
        <query-method>
          <method-name>findProductsByQuery1</method-name>
          <method-params />
        </query-method>
        <ejb-ql>Select DISTINCT OBJECT(p) FROM ProductBean p WHERE p.quantity = 100.0</ejb-ql>
      </query>
      <query>
        <description></description>
        <query-method>
          <method-name>findAllProductsByQuantity</method-name>
          <method-params />
        </query-method>
        <ejb-ql>Select DISTINCT OBJECT(p) From ProductBean p where p.quantity IS NULL</ejb-ql>
      </query>
      <query>
        <description></description>
        <query-method>
          <method-name>ejbSelectProductByType</method-name>
          <method-params />
        </query-method>
        <result-type-mapping>Remote</result-type-mapping>
        <ejb-ql>Select OBJECT(p) From ProductBean p where p.name LIKE '%PC'</ejb-ql>
      </query>
      <query>
        <description></description>
        <query-method>
          <method-name>findProductByName</method-name>
          <method-params>
            <method-param>java.lang.String</method-param>
          </method-params>
        </query-method>
        <ejb-ql>Select OBJECT(p) From ProductBean p where p.name LIKE ?1</ejb-ql>
      </query>
      <query>
        <description></description>
        <query-method>
          <method-name>ejbSelectProductByName</method-name>
          <method-params>
            <method-param>java.lang.String</method-param>
          </method-params>
        </query-method>
        <result-type-mapping>Remote</result-type-mapping>
        <ejb-ql>Select Object(p) From ProductBean p where p.name = ?1</ejb-ql>
      </query>
      <query>
        <description></description>
        <query-method>
          <method-name>ejbSelectProductsByPartNumber</method-name>
          <method-params />
        </query-method>
        <ejb-ql>Select p.partNumber from ProductBean p ORDER BY p.partNumber</ejb-ql>
      </query>
      <query>
        <description></description>
        <query-method>
          <method-name>findProductsByHighestQuantity</method-name>
          <method-params />
        </query-method>
        <ejb-ql>Select DISTINCT OBJECT(p) From ProductBean p ORDER BY p.quantity DESC</ejb-ql>
      </query>
      <query> 
        <description></description> 
       <query-method> 
          <method-name>ejbSelectCountSingle</method-name> 
          <method-params /> 
        </query-method> 
        <ejb-ql>SELECT Count(p.id) FROM ProductBean p</ejb-ql> 
      </query>
      <query> 
        <description></description> 
       <query-method> 
          <method-name>ejbSelectSumSingle</method-name> 
          <method-params /> 
        </query-method> 
        <ejb-ql>SELECT Sum(p.price) FROM ProductBean p</ejb-ql> 
      </query>
      <query>
        <description></description>
        <query-method>
          <method-name>findProductsByQuery9</method-name>
          <method-params />
        </query-method>
        <ejb-ql>Select DISTINCT OBJECT(P) From ProductBean p</ejb-ql>
      </query>
      <query>
        <description></description>
        <query-method>
          <method-name>findProductsByQuery2</method-name>
          <method-params />
        </query-method>
        <ejb-ql>Select DISTINCT OBJECT(p) From ProductBean p where p.quantity BETWEEN 10 AND 20</ejb-ql>
      </query>
      <query>
        <description></description>
        <query-method>
          <method-name>findProductsByQuery3</method-name>
          <method-params />
        </query-method>
        <ejb-ql>Select DISTINCT OBJECT(p) From ProductBean p where p.quantity &gt;= 10 AND p.quantity &lt;= 20</ejb-ql>
      </query>
      <query>
        <description></description>
        <query-method>
          <method-name>findProductsByQuery4</method-name>
          <method-params />
        </query-method>
        <ejb-ql>Select DISTINCT OBJECT(p) From ProductBean p where p.quantity NOT BETWEEN 10 AND 20</ejb-ql>
      </query>
      <query>
        <description></description>
        <query-method>
          <method-name>findProductsByQuery5</method-name>
          <method-params />
        </query-method>
        <ejb-ql>Select DISTINCT OBJECT(p) From ProductBean p where p.quantity &lt; 10 OR p.quantity &gt; 20</ejb-ql>
      </query>
      <query>
        <description></description>
        <query-method>
          <method-name>findProductsByQuery6</method-name>
          <method-params />
        </query-method>
        <ejb-ql>Select DISTINCT OBJECT(p) From ProductBean p where MOD(550, 100) = p.quantity</ejb-ql>
      </query>
      <query>
        <description></description>
        <query-method>
          <method-name>findProductsByQuery7</method-name>
          <method-params>
            <method-param>int</method-param>
          </method-params>
        </query-method>
        <ejb-ql>Select Distinct Object(p) from ProductBean p where p.quantity &gt; (500 + ?1) AND p.partNumber IS NULL</ejb-ql>
      </query>
      <query>
        <description></description>
        <query-method>
          <method-name>findProductsByQuery8</method-name>
          <method-params>
            <method-param>java.lang.String</method-param>
          </method-params>
        </query-method>
        <ejb-ql>Select Distinct Object(p) from ProductBean p where p.name = ?1</ejb-ql>
      </query>
    </entity>
    <entity>
      <display-name>AliasEJB</display-name>
      <ejb-name>AliasEJB</ejb-name>
      <home>com.sun.ts.tests.ejb.ee.pm.ejbql.schema.AliasHome</home>
      <remote>com.sun.ts.tests.ejb.ee.pm.ejbql.schema.Alias</remote>
      <local-home>com.sun.ts.tests.ejb.ee.pm.ejbql.schema.AliasLocalHome</local-home>
      <local>com.sun.ts.tests.ejb.ee.pm.ejbql.schema.AliasLocal</local>
      <ejb-class>com.sun.ts.tests.ejb.ee.pm.ejbql.schema.AliasEJB</ejb-class>
      <persistence-type>Container</persistence-type>
      <prim-key-class>java.lang.String</prim-key-class>
      <reentrant>false</reentrant>
      <cmp-version>2.x</cmp-version>
      <abstract-schema-name>AliasBean</abstract-schema-name>
      <cmp-field>
        <field-name>alias</field-name>
      </cmp-field>
      <cmp-field>
        <field-name>id</field-name>
      </cmp-field>
      <primkey-field>id</primkey-field>
      <ejb-ref>
        <ejb-ref-name>ejb/Customer</ejb-ref-name>
        <ejb-ref-type>Entity</ejb-ref-type>
        <home>com.sun.ts.tests.ejb.ee.pm.ejbql.schema.CustomerHome</home>
        <remote>com.sun.ts.tests.ejb.ee.pm.ejbql.schema.Customer</remote>
        <ejb-link>CustomerEJB</ejb-link>
      </ejb-ref>
      <ejb-local-ref>
        <ejb-ref-name>ejb/CustomerLocal</ejb-ref-name>
        <ejb-ref-type>Entity</ejb-ref-type>
        <local-home>com.sun.ts.tests.ejb.ee.pm.ejbql.schema.CustomerLocalHome</local-home>
        <local>com.sun.ts.tests.ejb.ee.pm.ejbql.schema.CustomerLocal</local>
        <ejb-link>CustomerEJB</ejb-link>
      </ejb-local-ref>
      <security-identity>
        <description></description>
        <use-caller-identity></use-caller-identity>
      </security-identity>
      <query>
        <description></description>
        <query-method>
          <method-name>findAliasesByQuery5</method-name>
          <method-params />
        </query-method>
        <ejb-ql>Select Distinct Object(a) from AliasBean a where LOCATE('ev', a.alias) = 3</ejb-ql>
      </query>
      <query>
        <description></description>
        <query-method>
          <method-name>findAliasesByQuery2</method-name>
          <method-params />
        </query-method>
        <ejb-ql>Select Distinct Object(a) From AliasBean a WHERE a.alias = CONCAT('ste', 'vie')</ejb-ql>
      </query>
      <query>
        <description></description>
        <query-method>
          <method-name>findAliasesByQuery6</method-name>
          <method-params />
        </query-method>
        <ejb-ql>Select Distinct Object(a) FROM AliasBean a WHERE a.customerNoop MEMBER OF a.customersNoop</ejb-ql>
      </query>
      <query>
        <description></description>
        <query-method>
          <method-name>findAliasesByQuery3</method-name>
          <method-params>
            <method-param>java.lang.String</method-param>
            <method-param>int</method-param>
            <method-param>int</method-param>
          </method-params>
        </query-method>
        <ejb-ql>Select Distinct Object(a) From AliasBean a WHERE a.alias = SUBSTRING(?1, ?2, ?3)</ejb-ql>
      </query>
      <query>
        <description></description>
        <query-method>
          <method-name>findAllAliases</method-name>
          <method-params />
        </query-method>
        <ejb-ql>Select Distinct Object(a) FROM AliasBean a</ejb-ql>
      </query>
      <query>
        <description></description>
        <query-method>
          <method-name>findAliasesByQuery7</method-name>
          <method-params />
        </query-method>
        <ejb-ql>Select Distinct Object(a) FROM AliasBean a WHERE a.customerNoop NOT MEMBER a.customersNoop</ejb-ql>
      </query>
      <query>
        <description></description>
        <query-method>
          <method-name>findAliasesByQuery4</method-name>
          <method-params />
        </query-method>
        <ejb-ql>Select Distinct Object(a) From AliasBean a WHERE LENGTH(a.alias) &gt; 4</ejb-ql>
      </query>
      <query>
        <description></description>
        <query-method>
          <method-name>findCustomerAliasesByOrder</method-name>
          <method-params />
        </query-method>
        <ejb-ql>Select Distinct Object(a) from CustomerBean c, IN(c.aliases) a WHERE a.alias IS NOT NULL ORDER BY a.alias, a.id</ejb-ql>
      </query>
      <query>
        <description></description>
        <query-method>
          <method-name>findAliasesByQuery8</method-name>
          <method-params>
            <method-param>java.lang.String</method-param>
          </method-params>
        </query-method>
        <ejb-ql>SELECT Distinct Object(a) FROM AliasBean AS a Where (a.alias IS NOT NULL AND ?1 IS NOT NULL) OR a.alias = ?1</ejb-ql>
      </query>
      <query>
        <description></description>
        <query-method>
          <method-name>findAliasesByQuery9</method-name>
          <method-params>
            <method-param>java.lang.String</method-param>
          </method-params>
        </query-method>
        <ejb-ql>Select Distinct Object(a) From AliasBean a where a.customerNoop Is Not Null OR a.id = ?1</ejb-ql>
      </query>
      <query>
        <description></description>
        <query-method>
          <method-name>findAliasesByQuery10</method-name>
          <method-params />
        </query-method>
        <ejb-ql>Select Distinct Object(a) From AliasBean a, in(a.customers) c where NOT c.name Is Null</ejb-ql>
      </query>
      <query>
        <description></description>
        <query-method>
          <method-name>findAliasesByQuery11</method-name>
          <method-params />
        </query-method>
        <ejb-ql>Select Distinct Object(a) From AliasBean a where a.customerNoop Is Null OR a.customerNoop &lt;&gt; a.customerNoop</ejb-ql>
      </query>

      <query>
        <description></description>
        <query-method>
          <method-name>findAliasesByQuery12</method-name>
          <method-params />
        </query-method>
        <ejb-ql>Select Distinct Object(a) From AliasBean a where a.customerNoop Is Null AND a.customerNoop &lt;&gt; a.customerNoop</ejb-ql>
      </query>
      <query>
        <description></description>
        <query-method>
          <method-name>ejbSelectNullAlias</method-name>
          <method-params>
            <method-param>java.lang.String</method-param>
          </method-params>
        </query-method>
        <ejb-ql>SELECT a.alias FROM AliasBean AS a WHERE (a.alias IS NULL AND ?1 IS NULL) OR a.alias = ?1</ejb-ql>
      </query>
    </entity>
    <entity>
      <display-name>LineItemEJB</display-name>
      <ejb-name>LineItemEJB</ejb-name>
      <local-home>com.sun.ts.tests.ejb.ee.pm.ejbql.schema.LineItemLocalHome</local-home>
      <local>com.sun.ts.tests.ejb.ee.pm.ejbql.schema.LineItemLocal</local>
      <ejb-class>com.sun.ts.tests.ejb.ee.pm.ejbql.schema.LineItemEJB</ejb-class>
      <persistence-type>Container</persistence-type>
      <prim-key-class>java.lang.String</prim-key-class>
      <reentrant>false</reentrant>
      <cmp-version>2.x</cmp-version>
      <abstract-schema-name>LineItemBean</abstract-schema-name>
      <cmp-field>
        <field-name>quantity</field-name>
      </cmp-field>
      <cmp-field>
        <field-name>id</field-name>
      </cmp-field>
      <primkey-field>id</primkey-field>
      <ejb-ref>
        <ejb-ref-name>ejb/Product</ejb-ref-name>
        <ejb-ref-type>Entity</ejb-ref-type>
        <home>com.sun.ts.tests.ejb.ee.pm.ejbql.schema.ProductHome</home>
        <remote>com.sun.ts.tests.ejb.ee.pm.ejbql.schema.Product</remote>
        <ejb-link>ProductEJB</ejb-link>
      </ejb-ref>
      <ejb-ref>
        <ejb-ref-name>ejb/Order</ejb-ref-name>
        <ejb-ref-type>Entity</ejb-ref-type>
        <home>com.sun.ts.tests.ejb.ee.pm.ejbql.schema.OrderHome</home>
        <remote>com.sun.ts.tests.ejb.ee.pm.ejbql.schema.Order</remote>
        <ejb-link>OrderEJB</ejb-link>
      </ejb-ref>
      <ejb-local-ref>
        <ejb-ref-name>ejb/ProductLocal</ejb-ref-name>
        <ejb-ref-type>Entity</ejb-ref-type>
        <local-home>com.sun.ts.tests.ejb.ee.pm.ejbql.schema.ProductLocalHome</local-home>
        <local>com.sun.ts.tests.ejb.ee.pm.ejbql.schema.ProductLocal</local>
        <ejb-link>ProductEJB</ejb-link>
      </ejb-local-ref>
      <ejb-local-ref>
        <ejb-ref-name>ejb/OrderLocal</ejb-ref-name>
        <ejb-ref-type>Entity</ejb-ref-type>
        <local-home>com.sun.ts.tests.ejb.ee.pm.ejbql.schema.OrderLocalHome</local-home>
        <local>com.sun.ts.tests.ejb.ee.pm.ejbql.schema.OrderLocal</local>
        <ejb-link>OrderEJB</ejb-link>
      </ejb-local-ref>
      <security-identity>
        <description></description>
        <use-caller-identity></use-caller-identity>
      </security-identity>
    </entity>
    <entity>
      <display-name>OrderEJB</display-name>
      <ejb-name>OrderEJB</ejb-name>
      <home>com.sun.ts.tests.ejb.ee.pm.ejbql.schema.OrderHome</home>
      <remote>com.sun.ts.tests.ejb.ee.pm.ejbql.schema.Order</remote>
      <local-home>com.sun.ts.tests.ejb.ee.pm.ejbql.schema.OrderLocalHome</local-home>
      <local>com.sun.ts.tests.ejb.ee.pm.ejbql.schema.OrderLocal</local>
      <ejb-class>com.sun.ts.tests.ejb.ee.pm.ejbql.schema.OrderEJB</ejb-class>
      <persistence-type>Container</persistence-type>
      <prim-key-class>java.lang.String</prim-key-class>
      <reentrant>false</reentrant>
      <cmp-version>2.x</cmp-version>
      <abstract-schema-name>OrderBean</abstract-schema-name>
      <cmp-field>
        <field-name>totalPrice</field-name>
      </cmp-field>
      <cmp-field>
        <field-name>id</field-name>
      </cmp-field>
      <primkey-field>id</primkey-field>
      <ejb-ref>
        <ejb-ref-name>ejb/Customer</ejb-ref-name>
        <ejb-ref-type>Entity</ejb-ref-type>
        <home>com.sun.ts.tests.ejb.ee.pm.ejbql.schema.CustomerHome</home>
        <remote>com.sun.ts.tests.ejb.ee.pm.ejbql.schema.Customer</remote>
        <ejb-link>CustomerEJB</ejb-link>
      </ejb-ref>
      <ejb-ref>
        <ejb-ref-name>ejb/Product</ejb-ref-name>
        <ejb-ref-type>Entity</ejb-ref-type>
        <home>com.sun.ts.tests.ejb.ee.pm.ejbql.schema.ProductHome</home>
        <remote>com.sun.ts.tests.ejb.ee.pm.ejbql.schema.Product</remote>
        <ejb-link>ProductEJB</ejb-link>
      </ejb-ref>
      <ejb-ref>
        <ejb-ref-name>ejb/Order</ejb-ref-name>
        <ejb-ref-type>Entity</ejb-ref-type>
        <home>com.sun.ts.tests.ejb.ee.pm.ejbql.schema.OrderHome</home>
        <remote>com.sun.ts.tests.ejb.ee.pm.ejbql.schema.Order</remote>
        <ejb-link>OrderEJB</ejb-link>
      </ejb-ref>
      <ejb-local-ref>
        <ejb-ref-name>ejb/ProductLocal</ejb-ref-name>
        <ejb-ref-type>Entity</ejb-ref-type>
        <local-home>com.sun.ts.tests.ejb.ee.pm.ejbql.schema.ProductLocalHome</local-home>
        <local>com.sun.ts.tests.ejb.ee.pm.ejbql.schema.ProductLocal</local>
        <ejb-link>ProductEJB</ejb-link>
      </ejb-local-ref>
      <ejb-local-ref>
        <ejb-ref-name>ejb/LineItemLocal</ejb-ref-name>
        <ejb-ref-type>Entity</ejb-ref-type>
        <local-home>com.sun.ts.tests.ejb.ee.pm.ejbql.schema.LineItemLocalHome</local-home>
        <local>com.sun.ts.tests.ejb.ee.pm.ejbql.schema.LineItemLocal</local>
        <ejb-link>LineItemEJB</ejb-link>
      </ejb-local-ref>
      <ejb-local-ref>
        <ejb-ref-name>ejb/CreditCardLocal</ejb-ref-name>
        <ejb-ref-type>Entity</ejb-ref-type>
        <local-home>com.sun.ts.tests.ejb.ee.pm.ejbql.schema.CreditCardLocalHome</local-home>
        <local>com.sun.ts.tests.ejb.ee.pm.ejbql.schema.CreditCardLocal</local>
        <ejb-link>CreditCardEJB</ejb-link>
      </ejb-local-ref>
      <ejb-local-ref>
        <ejb-ref-name>ejb/CustomerLocal</ejb-ref-name>
        <ejb-ref-type>Entity</ejb-ref-type>
        <local-home>com.sun.ts.tests.ejb.ee.pm.ejbql.schema.CustomerLocalHome</local-home>
        <local>com.sun.ts.tests.ejb.ee.pm.ejbql.schema.CustomerLocal</local>
        <ejb-link>CustomerEJB</ejb-link>
      </ejb-local-ref>
      <ejb-local-ref>
        <ejb-ref-name>ejb/OrderLocal</ejb-ref-name>
        <ejb-ref-type>Entity</ejb-ref-type>
        <local-home>com.sun.ts.tests.ejb.ee.pm.ejbql.schema.OrderLocalHome</local-home>
        <local>com.sun.ts.tests.ejb.ee.pm.ejbql.schema.OrderLocal</local>
        <ejb-link>OrderEJB</ejb-link>
      </ejb-local-ref>
      <security-identity>
        <description></description>
        <use-caller-identity></use-caller-identity>
      </security-identity>
      <query>
        <description></description>
        <query-method>
          <method-name>ejbSelectLineItem</method-name>
          <method-params>
            <method-param>java.lang.String</method-param>
          </method-params>
        </query-method>
        <ejb-ql>SELECT OBJECT(l) FROM LineItemBean AS l WHERE l.id = ?1</ejb-ql>
      </query>
      <query>
        <description></description>
        <query-method>
          <method-name>findApprovedCreditCards</method-name>
          <method-params />
        </query-method>
        <ejb-ql>Select Distinct Object(o) from OrderBean AS o WHERE o.creditCard.approved &lt;&gt; TRUE</ejb-ql>
      </query>
      <query>
        <description></description>
        <query-method>
          <method-name>ejbSelectAllLineItems</method-name>
          <method-params />
        </query-method>
        <result-type-mapping>Local</result-type-mapping>
        <ejb-ql>SELECT OBJECT(l) From OrderBean o, in(o.lineItems) l</ejb-ql>
      </query>
      <query>
        <description></description>
        <query-method>
          <method-name>findOrdersByQuery1</method-name>
          <method-params />
        </query-method>
        <ejb-ql>Select Distinct Object(o) FROM OrderBean o Where o.totalPrice &lt; 100</ejb-ql>
      </query>
      <query>
        <description></description>
        <query-method>
          <method-name>findOrdersByQuery2</method-name>
          <method-params />
        </query-method>
        <ejb-ql>Select Distinct Object(o) FROM OrderBean o Where o.totalPrice &gt; 553.95</ejb-ql>
      </query>
      <query>
        <description></description>
        <query-method>
          <method-name>findOrdersByQuery16</method-name>
          <method-params>
            <method-param>double</method-param>
          </method-params>
        </query-method>
        <ejb-ql>Select DISTINCT OBJECT(o) From OrderBean o WHERE o.totalPrice &gt; ABS(?1)</ejb-ql>
      </query>
      <query>
        <description></description>
        <query-method>
          <method-name>findOrdersByQuery17</method-name>
          <method-params />
        </query-method>
        <ejb-ql>Select Distinct Object(o) FROM OrderBean o, LineItemBean l WHERE l MEMBER o.lineItems</ejb-ql>
      </query>
      <query>
        <description></description>
        <query-method>
          <method-name>findOrdersByQuery18</method-name>
          <method-params />
        </query-method>
        <ejb-ql>Select Distinct Object(o) FROM OrderBean o WHERE o.sampleLineItem MEMBER o.lineItems</ejb-ql>
      </query>
      <query>
        <description></description>
        <query-method>
          <method-name>findOrdersByPrice</method-name>
          <method-params>
            <method-param>java.lang.String</method-param>
          </method-params>
        </query-method>
        <ejb-ql>Select DISTINCT OBJECT(o) from OrderBean o WHERE o.customer.name = ?1 ORDER BY o.totalPrice</ejb-ql>
      </query>
      <query>
        <description></description>
        <query-method>
          <method-name>findAllOrdersWithGreaterPrice</method-name>
          <method-params />
        </query-method>
        <ejb-ql>SELECT DISTINCT OBJECT(o1) FROM OrderBean o1, OrderBean o2 WHERE o1.totalPrice &gt; o2.totalPrice AND o2.customer.name = 'Karen R. Tegan'</ejb-ql>
      </query>
      <query>
        <description></description>
        <query-method>
          <method-name>ejbSelectAllExpiredCreditCards</method-name>
          <method-params />
        </query-method>
        <result-type-mapping>Remote</result-type-mapping>
        <ejb-ql>SELECT OBJECT(o) FROM OrderBean o WHERE o.creditCard.expires = '03/05'</ejb-ql>
      </query>
      <query>
        <description></description>
        <query-method>
          <method-name>findOrdersByQuery12</method-name>
          <method-params />
        </query-method>
        <ejb-ql>SELECT DISTINCT OBJECT(o) From OrderBean o where o.totalPrice BETWEEN 1000 AND 1200</ejb-ql>
      </query>
      <query>
        <description></description>
        <query-method>
          <method-name>findOrdersByQuery13</method-name>
          <method-params />
        </query-method>
        <ejb-ql>SELECT DISTINCT OBJECT(o) From OrderBean o where o.totalPrice NOT bETwEeN 1000 AND 1200</ejb-ql>
      </query>
      <query>
        <description></description>
        <query-method>
          <method-name>findOrdersByQuery3</method-name>
          <method-params />
        </query-method>
        <ejb-ql>Select Distinct Object(o) FROM OrderBean o WHERE NOT o.totalPrice &lt; 4500</ejb-ql>
      </query>
      <query>
        <description></description>
        <query-method>
          <method-name>ejbSelectSampleLineItems</method-name>
          <method-params>
            <method-param>com.sun.ts.tests.ejb.ee.pm.ejbql.schema.LineItemLocal</method-param>
          </method-params>
        </query-method>
        <result-type-mapping>Remote</result-type-mapping>
        <ejb-ql>Select Distinct Object(o) FROM OrderBean o, LineItemBean l WHERE ?1 NOT MEMBER o.lineItems</ejb-ql>
      </query>
      <query>
        <description></description>
        <query-method>
          <method-name>findOrdersByQuery14</method-name>
          <method-params />
        </query-method>
        <ejb-ql>select distinct object(o) From OrderBean o WHERE o.creditCard.approved = FALSE</ejb-ql>
      </query>
      <query>
        <description></description>
        <query-method>
          <method-name>findOrdersByQuery4</method-name>
          <method-params />
        </query-method>
        <ejb-ql>sElEcT dIsTiNcT ObJeCt(o) FROM OrderBean AS o,in(o.lineItems) l WHERE l.quantity &lt; 2 AND o.customer.name = 'Robert E. Bissett'</ejb-ql>
      </query>
      <query>
        <description></description>
        <query-method>
          <method-name>findAllOrdersByCustomerName</method-name>
          <method-params>
            <method-param>java.lang.String</method-param>
          </method-params>
        </query-method>
        <ejb-ql>Select Distinct Object(o) from OrderBean AS o WHERE o.customer.name = ?1</ejb-ql>
      </query>
      <query>
        <description></description>
        <query-method>
          <method-name>findOrdersByQuery5</method-name>
          <method-params />
        </query-method>
        <ejb-ql>SeLeCt DiStInCt oBjEcT(o) FROM OrderBean AS o WHERE o.customer.name = 'Karen R. Tegan' OR o.totalPrice &lt; 100</ejb-ql>
      </query>
      <query>
        <description></description>
        <query-method>
          <method-name>findOrdersByQuery6</method-name>
          <method-params />
        </query-method>
        <ejb-ql>select distinct object(o) FROM OrderBean AS o, in(o.lineItems) l WHERE (l.quantity &lt; 2) AND ((o.totalPrice &lt; (3 + 54 * 2 + -8)) OR (o.customer.name = 'Robert E. Bissett'))</ejb-ql>
      </query>
      <query>
        <description></description>
        <query-method>
          <method-name>findAllOrders</method-name>
          <method-params />
        </query-method>
        <ejb-ql>Select Distinct Object(o) FROM OrderBean AS o</ejb-ql>
      </query>
      <query>
        <description></description>
        <query-method>
          <method-name>findOrdersByQuery9</method-name>
          <method-params>
            <method-param>java.lang.String</method-param>
          </method-params>
        </query-method>
        <ejb-ql>SELECT DISTINCT OBJECT(o) FROM OrderBean o, in(o.lineItems) l WHERE l.quantity &lt; 2 AND o.customer.name = ?1</ejb-ql>
      </query>
      <query>
        <description></description>
        <query-method>
          <method-name>ejbSelectCreditCardBalances</method-name>
          <method-params />
        </query-method>   
        <ejb-ql>Select Distinct o.creditCard.balance from OrderBean o ORDER BY o.creditCard.balance ASC</ejb-ql>
      </query>
      <query>
        <description></description>
        <query-method>
          <method-name>ejbSelectAllCreditCardBalances</method-name>
          <method-params />
        </query-method>   
        <ejb-ql>Select Distinct o.creditCard.balance from OrderBean o</ejb-ql>
      </query>
      <query>
        <description>Test Min Single</description>
        <query-method>
          <method-name>ejbSelectMinSingle</method-name>
          <method-params />
        </query-method>
        <ejb-ql>SELECT MIN(o.id) FROM OrderBean o where o.customer.name = 'Robert E. Bissett'</ejb-ql>
      </query>
      <query>
        <description></description> 
        <query-method> 
          <method-name>ejbSelectMaxSingle</method-name> 
          <method-params /> 
        </query-method>   
        <ejb-ql>SELECT MAX(l.quantity) FROM LineItemBean l</ejb-ql> 
      </query>
      <query>
        <description></description> 
        <query-method> 
          <method-name>ejbSelectAvgSingle</method-name> 
          <method-params /> 
        </query-method>   
        <ejb-ql>SELECT AVG(o.totalPrice) FROM OrderBean o</ejb-ql> 
      </query>
      <query>
        <description></description> 
        <query-method> 
          <method-name>findOrdersByQuery19</method-name> 
          <method-params /> 
        </query-method>   
        <ejb-ql>Select Distinct Object(o) from OrderBean o, in(o.lineItems) l where l.quantity NOT IN (1, 5)</ejb-ql> 
      </query>
      <query>
        <description></description> 
        <query-method> 
          <method-name>findOrdersByQuery20</method-name> 
          <method-params /> 
        </query-method>   
        <ejb-ql>Select Distinct Object(o) from OrderBean o where o.customer.name IS NOT NULL</ejb-ql> 
      </query>
      <query>
        <description></description>
        <query-method>
          <method-name>findOrdersByQuery21</method-name>
          <method-params>
            <method-param>java.lang.String</method-param>
          </method-params>
        </query-method>
        <ejb-ql>Select Distinct Object(o) from OrderBean o where o.creditCard.type = ?1</ejb-ql>
     </query>
      <query>
        <description></description>
        <query-method>
          <method-name>findOrdersByQuery21</method-name>
          <method-params>
            <method-param>java.lang.String</method-param>
            <method-param>double</method-param>
          </method-params>
        </query-method>
        <ejb-ql>Select Distinct Object(o) from OrderBean o where o.creditCard.type = ?1 AND o.creditCard.balance = ?2</ejb-ql>
      </query>
      <query>
        <description></description>
        <query-method>
          <method-name>findOrdersByQuery22</method-name>
          <method-params>
            <method-param>double</method-param>
          </method-params>
        </query-method>
        <ejb-ql>Select Distinct Object(o) from OrderBean o where o.creditCard.balance &lt; ?1</ejb-ql>
      </query>
    </entity>
    <entity>
      <display-name>SpouseEJB</display-name>
      <ejb-name>SpouseEJB</ejb-name>
      <local-home>com.sun.ts.tests.ejb.ee.pm.ejbql.schema.SpouseLocalHome</local-home>
      <local>com.sun.ts.tests.ejb.ee.pm.ejbql.schema.SpouseLocal</local>
      <ejb-class>com.sun.ts.tests.ejb.ee.pm.ejbql.schema.SpouseEJB</ejb-class>
      <persistence-type>Container</persistence-type>
      <prim-key-class>java.lang.String</prim-key-class>
      <reentrant>false</reentrant>
      <cmp-version>2.x</cmp-version>
      <abstract-schema-name>SpouseBean</abstract-schema-name>
      <cmp-field>
        <field-name>socialSecurityNumber</field-name>
      </cmp-field>  
      <cmp-field>
        <field-name>maidenName</field-name>
      </cmp-field>  
      <cmp-field>
        <field-name>lastName</field-name>
      </cmp-field>  
      <cmp-field>
        <field-name>firstName</field-name>
      </cmp-field>  
      <cmp-field>
        <field-name>id</field-name>
      </cmp-field>  
      <primkey-field>id</primkey-field>
      <ejb-ref>
        <ejb-ref-name>ejb/Order</ejb-ref-name>
        <ejb-ref-type>Entity</ejb-ref-type>
        <home>com.sun.ts.tests.ejb.ee.pm.ejbql.schema.OrderHome</home>
        <remote>com.sun.ts.tests.ejb.ee.pm.ejbql.schema.Order</remote>
        <ejb-link>OrderEJB</ejb-link>
      </ejb-ref>    
      <ejb-ref>
        <ejb-ref-name>ejb/Customer</ejb-ref-name>
        <ejb-ref-type>Entity</ejb-ref-type>
        <home>com.sun.ts.tests.ejb.ee.pm.ejbql.schema.CustomerHome</home>
        <remote>com.sun.ts.tests.ejb.ee.pm.ejbql.schema.Customer</remote>
        <ejb-link>CustomerEJB</ejb-link>
      </ejb-ref>
      <ejb-local-ref>
        <ejb-ref-name>ejb/CustomerLocal</ejb-ref-name>
        <ejb-ref-type>Entity</ejb-ref-type>
        <local-home>com.sun.ts.tests.ejb.ee.pm.ejbql.schema.CustomerLocalHome</local-home>
        <local>com.sun.ts.tests.ejb.ee.pm.ejbql.schema.CustomerLocal</local>
        <ejb-link>CustomerEJB</ejb-link>
      </ejb-local-ref>
      <ejb-local-ref>
        <ejb-ref-name>ejb/InfoLocal</ejb-ref-name>
        <ejb-ref-type>Entity</ejb-ref-type>
        <local-home>com.sun.ts.tests.ejb.ee.pm.ejbql.schema.InfoLocalHome</local-home>
        <local>com.sun.ts.tests.ejb.ee.pm.ejbql.schema.InfoLocal</local>
        <ejb-link>InfoEJB</ejb-link>
      </ejb-local-ref>
      <security-identity>
        <description></description>
        <use-caller-identity></use-caller-identity>
      </security-identity>
      <query>
        <description></description>
        <query-method>
          <method-name>ejbSelectSpouseInfo</method-name>
          <method-params />
        </query-method>
        <ejb-ql>Select s.info.street from SpouseBean s where s.lastName = 'Mullen'</ejb-ql>
      </query>
    </entity>
    <entity>
      <display-name>InfoEJB</display-name>
      <ejb-name>InfoEJB</ejb-name>
      <local-home>com.sun.ts.tests.ejb.ee.pm.ejbql.schema.InfoLocalHome</local-home>
      <local>com.sun.ts.tests.ejb.ee.pm.ejbql.schema.InfoLocal</local>
      <ejb-class>com.sun.ts.tests.ejb.ee.pm.ejbql.schema.InfoEJB</ejb-class>
      <persistence-type>Container</persistence-type>
      <prim-key-class>java.lang.String</prim-key-class>
      <reentrant>false</reentrant>
      <cmp-version>2.x</cmp-version>
      <abstract-schema-name>InfoBean</abstract-schema-name>
      <cmp-field>
        <field-name>zip</field-name>
      </cmp-field>  
      <cmp-field>
        <field-name>state</field-name>
      </cmp-field>  
      <cmp-field>
        <field-name>city</field-name>
      </cmp-field>  
      <cmp-field>
        <field-name>street</field-name>
      </cmp-field>  
      <cmp-field>
        <field-name>id</field-name>
      </cmp-field>  
      <primkey-field>id</primkey-field>
      <ejb-local-ref>
        <ejb-ref-name>ejb/SpouseLocal</ejb-ref-name>
        <ejb-ref-type>Entity</ejb-ref-type>
        <local-home>com.sun.ts.tests.ejb.ee.pm.ejbql.schema.SpouseLocalHome</local-home>
        <local>com.sun.ts.tests.ejb.ee.pm.ejbql.schema.SpouseLocal</local>
        <ejb-link>SpouseEJB</ejb-link>
      </ejb-local-ref>
      <security-identity>
        <description></description>
        <use-caller-identity></use-caller-identity>
      </security-identity>
    </entity>
  </enterprise-beans>
  <relationships>
    <ejb-relation>
      <description>Description of relationship</description>
      <ejb-relation-name>TestName</ejb-relation-name>
      <ejb-relationship-role>
        <ejb-relationship-role-name>AliasEJB-CustomerEJB</ejb-relationship-role-name>
        <multiplicity>Many</multiplicity>
        <relationship-role-source>
          <ejb-name>AliasEJB</ejb-name>
        </relationship-role-source>
        <cmr-field>
          <cmr-field-name>customersNoop</cmr-field-name>
          <cmr-field-type>java.util.Collection</cmr-field-type>
        </cmr-field>
      </ejb-relationship-role>
      <ejb-relationship-role>
        <ejb-relationship-role-name>CustomerEJB-AliasEJB</ejb-relationship-role-name>
        <multiplicity>Many</multiplicity>
        <relationship-role-source>
          <ejb-name>CustomerEJB</ejb-name>
        </relationship-role-source>
        <cmr-field>
          <cmr-field-name>aliasesNoop</cmr-field-name>
          <cmr-field-type>java.util.Collection</cmr-field-type>
        </cmr-field>
      </ejb-relationship-role>
    </ejb-relation>
    <ejb-relation>
      <ejb-relationship-role>
        <ejb-relationship-role-name>AliasEJB-CustomerEJB</ejb-relationship-role-name>
        <multiplicity>Many</multiplicity>
        <relationship-role-source>
          <ejb-name>AliasEJB</ejb-name>
        </relationship-role-source>
        <cmr-field>
          <cmr-field-name>customers</cmr-field-name>
          <cmr-field-type>java.util.Collection</cmr-field-type>
        </cmr-field>
      </ejb-relationship-role>
      <ejb-relationship-role>
        <ejb-relationship-role-name>CustomerEJB-AliasEJB</ejb-relationship-role-name>
        <multiplicity>Many</multiplicity>
        <relationship-role-source>
          <ejb-name>CustomerEJB</ejb-name>
        </relationship-role-source>
        <cmr-field>
          <cmr-field-name>aliases</cmr-field-name>
          <cmr-field-type>java.util.Collection</cmr-field-type>
        </cmr-field>
      </ejb-relationship-role>
    </ejb-relation>
    <ejb-relation>
      <ejb-relationship-role>
        <ejb-relationship-role-name>OrderEJB-LineItemEJB</ejb-relationship-role-name>
        <multiplicity>One</multiplicity>
        <relationship-role-source>
          <ejb-name>OrderEJB</ejb-name>
        </relationship-role-source>
        <cmr-field>
          <cmr-field-name>sampleLineItem</cmr-field-name>
        </cmr-field>
      </ejb-relationship-role>
      <ejb-relationship-role>
        <ejb-relationship-role-name>LineItemEJB-OrderEJB</ejb-relationship-role-name>
        <multiplicity>One</multiplicity>
        <relationship-role-source>
          <ejb-name>LineItemEJB</ejb-name>
        </relationship-role-source>
      </ejb-relationship-role>
    </ejb-relation>
    <ejb-relation>
      <ejb-relationship-role>
        <ejb-relationship-role-name>OrderEJB-CreditCardEJB</ejb-relationship-role-name>
        <multiplicity>One</multiplicity>
        <relationship-role-source>
          <ejb-name>OrderEJB</ejb-name>
        </relationship-role-source>
        <cmr-field>
          <cmr-field-name>creditCard</cmr-field-name>
        </cmr-field>
      </ejb-relationship-role>
      <ejb-relationship-role>
        <ejb-relationship-role-name>CreditCardEJB-OrderEJB</ejb-relationship-role-name>
        <multiplicity>One</multiplicity>
        <relationship-role-source>
          <ejb-name>CreditCardEJB</ejb-name>
        </relationship-role-source>
        <cmr-field>
          <cmr-field-name>order</cmr-field-name>
        </cmr-field>
      </ejb-relationship-role>
    </ejb-relation>
    <ejb-relation>
      <ejb-relationship-role>
        <ejb-relationship-role-name>CustomerEJB-AddressEJB</ejb-relationship-role-name>
        <multiplicity>One</multiplicity>
        <relationship-role-source>
          <ejb-name>CustomerEJB</ejb-name>
        </relationship-role-source>
        <cmr-field>
          <cmr-field-name>home</cmr-field-name>
        </cmr-field>
      </ejb-relationship-role>
      <ejb-relationship-role>
        <ejb-relationship-role-name>AddressEJB-CustomerEJB</ejb-relationship-role-name>
        <multiplicity>One</multiplicity>
        <relationship-role-source>
          <ejb-name>AddressEJB</ejb-name>
        </relationship-role-source>
      </ejb-relationship-role>
    </ejb-relation>
    <ejb-relation>
      <ejb-relationship-role>
        <ejb-relationship-role-name>LineItemEJB-ProductEJB</ejb-relationship-role-name>
        <multiplicity>Many</multiplicity>
        <relationship-role-source>
          <ejb-name>LineItemEJB</ejb-name>
        </relationship-role-source>
        <cmr-field>
          <cmr-field-name>product</cmr-field-name>
        </cmr-field>
      </ejb-relationship-role>
      <ejb-relationship-role>
        <ejb-relationship-role-name>ProductEJB-LineItemEJB</ejb-relationship-role-name>
        <multiplicity>One</multiplicity>
        <relationship-role-source>
          <ejb-name>ProductEJB</ejb-name>
        </relationship-role-source>
      </ejb-relationship-role>
    </ejb-relation>
    <ejb-relation>
      <ejb-relationship-role>
        <ejb-relationship-role-name>CustomerEJB-OrderEJB</ejb-relationship-role-name>
        <multiplicity>One</multiplicity>
        <relationship-role-source>
          <ejb-name>CustomerEJB</ejb-name>
        </relationship-role-source>
        <cmr-field>
          <cmr-field-name>orders</cmr-field-name>
          <cmr-field-type>java.util.Collection</cmr-field-type>
        </cmr-field>
      </ejb-relationship-role>
      <ejb-relationship-role>
        <ejb-relationship-role-name>OrderEJB-CustomerEJB</ejb-relationship-role-name>
        <multiplicity>Many</multiplicity>
        <relationship-role-source>
          <ejb-name>OrderEJB</ejb-name>
        </relationship-role-source>
        <cmr-field>
          <cmr-field-name>customer</cmr-field-name>
        </cmr-field>
      </ejb-relationship-role>
    </ejb-relation>
    <ejb-relation>
      <ejb-relationship-role>
        <ejb-relationship-role-name>OrderEJB-LineItemEJB</ejb-relationship-role-name>
        <multiplicity>One</multiplicity>
        <relationship-role-source>
          <ejb-name>OrderEJB</ejb-name>
        </relationship-role-source>
        <cmr-field>
          <cmr-field-name>lineItems</cmr-field-name>
          <cmr-field-type>java.util.Collection</cmr-field-type>
        </cmr-field>
      </ejb-relationship-role>
      <ejb-relationship-role>
        <ejb-relationship-role-name>LineItemEJB-OrderEJB</ejb-relationship-role-name>
        <multiplicity>Many</multiplicity>
        <relationship-role-source>
          <ejb-name>LineItemEJB</ejb-name>
        </relationship-role-source>
        <cmr-field>
          <cmr-field-name>order</cmr-field-name>
        </cmr-field>
      </ejb-relationship-role>
    </ejb-relation>
    <ejb-relation>
      <ejb-relationship-role>
        <ejb-relationship-role-name>AddressEJB-PhoneEJB</ejb-relationship-role-name>
        <multiplicity>One</multiplicity>
        <relationship-role-source>
          <ejb-name>AddressEJB</ejb-name>
        </relationship-role-source>
        <cmr-field>
          <cmr-field-name>phones</cmr-field-name>
          <cmr-field-type>java.util.Collection</cmr-field-type>
        </cmr-field>
      </ejb-relationship-role>
      <ejb-relationship-role>
        <ejb-relationship-role-name>PhoneEJB-AddressEJB</ejb-relationship-role-name>
        <multiplicity>Many</multiplicity>
        <relationship-role-source>
          <ejb-name>PhoneEJB</ejb-name>
        </relationship-role-source>
        <cmr-field>
          <cmr-field-name>address</cmr-field-name>
        </cmr-field>
      </ejb-relationship-role>
    </ejb-relation>
    <ejb-relation>
      <ejb-relationship-role>
        <ejb-relationship-role-name>AliasEJB-CustomerEJB</ejb-relationship-role-name>
        <multiplicity>One</multiplicity>
        <relationship-role-source>
          <ejb-name>AliasEJB</ejb-name>
        </relationship-role-source>
        <cmr-field>
          <cmr-field-name>customerNoop</cmr-field-name>
        </cmr-field>
      </ejb-relationship-role>
      <ejb-relationship-role>
        <ejb-relationship-role-name>CustomerEJB-AliasEJB</ejb-relationship-role-name>
        <multiplicity>One</multiplicity>
        <relationship-role-source>
          <ejb-name>CustomerEJB</ejb-name>
        </relationship-role-source>
      </ejb-relationship-role>
    </ejb-relation>
    <ejb-relation>
      <ejb-relationship-role>
        <ejb-relationship-role-name>CustomerEJB-AddressEJB</ejb-relationship-role-name>
        <multiplicity>One</multiplicity>
        <relationship-role-source>
          <ejb-name>CustomerEJB</ejb-name>
        </relationship-role-source>
        <cmr-field>
          <cmr-field-name>work</cmr-field-name>
        </cmr-field>
      </ejb-relationship-role>
      <ejb-relationship-role>
        <ejb-relationship-role-name>AddressEJB-CustomerEJB</ejb-relationship-role-name>
        <multiplicity>One</multiplicity>
        <relationship-role-source>
          <ejb-name>AddressEJB</ejb-name>
        </relationship-role-source>
      </ejb-relationship-role>
    </ejb-relation>
    <ejb-relation>
      <ejb-relationship-role>
        <ejb-relationship-role-name>CustomerEJB-CreditCardEJB</ejb-relationship-role-name>
        <multiplicity>One</multiplicity>
        <relationship-role-source>
          <ejb-name>CustomerEJB</ejb-name>
        </relationship-role-source>
        <cmr-field>
          <cmr-field-name>creditCards</cmr-field-name>
          <cmr-field-type>java.util.Collection</cmr-field-type>
        </cmr-field>
      </ejb-relationship-role>
      <ejb-relationship-role>
        <ejb-relationship-role-name>CreditCardEJB-CustomerEJB</ejb-relationship-role-name>
        <multiplicity>Many</multiplicity>
        <relationship-role-source>
          <ejb-name>CreditCardEJB</ejb-name>
        </relationship-role-source>
        <cmr-field>
          <cmr-field-name>customer</cmr-field-name>
        </cmr-field>
      </ejb-relationship-role>
    </ejb-relation>
    <ejb-relation>
      <ejb-relationship-role>
        <ejb-relationship-role-name>SpouseEJB-InfoEJB</ejb-relationship-role-name>
        <multiplicity>One</multiplicity>
        <relationship-role-source>
          <ejb-name>SpouseEJB</ejb-name>
        </relationship-role-source>
        <cmr-field>
          <cmr-field-name>info</cmr-field-name>
        </cmr-field>
      </ejb-relationship-role>
      <ejb-relationship-role>
        <ejb-relationship-role-name>InfoEJB-SpouseEJB</ejb-relationship-role-name>
        <multiplicity>One</multiplicity>
        <relationship-role-source>
          <ejb-name>InfoEJB</ejb-name>
        </relationship-role-source>
        <cmr-field>
          <cmr-field-name>spouse</cmr-field-name>
        </cmr-field>
      </ejb-relationship-role>
    </ejb-relation>
    <ejb-relation>
      <ejb-relationship-role>
        <ejb-relationship-role-name>CustomerEJB-SpouseEJB</ejb-relationship-role-name>
        <multiplicity>One</multiplicity>
        <relationship-role-source>
          <ejb-name>CustomerEJB</ejb-name>
        </relationship-role-source>
        <cmr-field>
          <cmr-field-name>spouse</cmr-field-name>
        </cmr-field>
      </ejb-relationship-role>
      <ejb-relationship-role>
        <ejb-relationship-role-name>SpouseEJB-CustomerEJB</ejb-relationship-role-name>
        <multiplicity>One</multiplicity>
        <relationship-role-source>
          <ejb-name>SpouseEJB</ejb-name>
        </relationship-role-source>
        <cmr-field>
          <cmr-field-name>customer</cmr-field-name>
        </cmr-field>
      </ejb-relationship-role>
    </ejb-relation>
  </relationships>
  <assembly-descriptor>
    <container-transaction>
      <method>
        <ejb-name>CreditCardEJB</ejb-name>
        <method-intf>Local</method-intf>
        <method-name>getApproved</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>CreditCardEJB</ejb-name>
        <method-intf>Local</method-intf>
        <method-name>getCustomer</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>CreditCardEJB</ejb-name>
        <method-intf>LocalHome</method-intf>
        <method-name>remove</method-name>
        <method-params>
          <method-param>java.lang.Object</method-param>
        </method-params>
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>CreditCardEJB</ejb-name>
        <method-intf>Local</method-intf>
        <method-name>setOrder</method-name>
        <method-params>
          <method-param>com.sun.ts.tests.ejb.ee.pm.ejbql.schema.OrderLocal</method-param>
        </method-params>
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>CreditCardEJB</ejb-name>
        <method-intf>Local</method-intf>
        <method-name>getId</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>CreditCardEJB</ejb-name>
        <method-intf>Local</method-intf>
        <method-name>setNumber</method-name>
        <method-params>
          <method-param>java.lang.String</method-param>
        </method-params>
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>CreditCardEJB</ejb-name>
        <method-intf>LocalHome</method-intf>
        <method-name>create</method-name>
        <method-params>
          <method-param>java.lang.String</method-param>
          <method-param>java.lang.String</method-param>
          <method-param>java.lang.String</method-param>
          <method-param>java.lang.String</method-param>
          <method-param>boolean</method-param>
          <method-param>double</method-param>
          <method-param>com.sun.ts.tests.ejb.ee.pm.ejbql.schema.OrderLocal</method-param>
          <method-param>com.sun.ts.tests.ejb.ee.pm.ejbql.schema.CustomerLocal</method-param>
        </method-params>
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>CreditCardEJB</ejb-name>
        <method-intf>LocalHome</method-intf>
        <method-name>findByPrimaryKey</method-name>
        <method-params>
          <method-param>java.lang.String</method-param>
        </method-params>
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>CreditCardEJB</ejb-name>
        <method-intf>Local</method-intf>
        <method-name>setType</method-name>
        <method-params>
          <method-param>java.lang.String</method-param>
        </method-params>
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>CreditCardEJB</ejb-name>
        <method-intf>Local</method-intf>
        <method-name>getBalance</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>CreditCardEJB</ejb-name>
        <method-intf>Local</method-intf>
        <method-name>getType</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>CreditCardEJB</ejb-name>
        <method-intf>Local</method-intf>
        <method-name>setApproved</method-name>
        <method-params>
          <method-param>boolean</method-param>
        </method-params>
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>CreditCardEJB</ejb-name>
        <method-intf>Local</method-intf>
        <method-name>setCustomer</method-name>
        <method-params>
          <method-param>com.sun.ts.tests.ejb.ee.pm.ejbql.schema.CustomerLocal</method-param>
        </method-params>
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>CreditCardEJB</ejb-name>
        <method-intf>Local</method-intf>
        <method-name>setExpires</method-name>
        <method-params>
          <method-param>java.lang.String</method-param>
        </method-params>
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>CreditCardEJB</ejb-name>
        <method-intf>Local</method-intf>
        <method-name>setBalance</method-name>
        <method-params>
          <method-param>double</method-param>
        </method-params>
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>CreditCardEJB</ejb-name>
        <method-intf>Local</method-intf>
        <method-name>remove</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>CreditCardEJB</ejb-name>
        <method-intf>Local</method-intf>
        <method-name>getNumber</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>CreditCardEJB</ejb-name>
        <method-intf>Local</method-intf>
        <method-name>getOrder</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>CreditCardEJB</ejb-name>
        <method-intf>Local</method-intf>
        <method-name>getExpires</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>CustomerEJB</ejb-name>
        <method-intf>Local</method-intf>
        <method-name>getHome</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>CustomerEJB</ejb-name>
        <method-intf>Home</method-intf>
        <method-name>selectCustomerAddressByCollection</method-name>
        <method-params>
          <method-param>java.lang.String</method-param>
        </method-params>
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>CustomerEJB</ejb-name>
        <method-intf>Home</method-intf>
        <method-name>remove</method-name>
        <method-params>
          <method-param>java.lang.Object</method-param>
        </method-params>
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>CustomerEJB</ejb-name>
        <method-intf>LocalHome</method-intf>
        <method-name>remove</method-name>
        <method-params>
          <method-param>java.lang.Object</method-param>
        </method-params>
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>CustomerEJB</ejb-name>
        <method-intf>Home</method-intf>
        <method-name>selectHomeZipCodesByCity</method-name>
        <method-params>
          <method-param>java.lang.String</method-param>
        </method-params>
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>CustomerEJB</ejb-name>
        <method-intf>Home</method-intf>
        <method-name>findCustomersByQuery33</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>CustomerEJB</ejb-name>
        <method-intf>Home</method-intf>
        <method-name>findCustomersByQuery34</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>CustomerEJB</ejb-name>
        <method-intf>Home</method-intf>
        <method-name>findCustomersByQuery35</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>CustomerEJB</ejb-name>
        <method-intf>Home</method-intf>
        <method-name>findCustomersByQuery36</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>CustomerEJB</ejb-name>
        <method-intf>Home</method-intf>
        <method-name>findCustomersByQuery37</method-name>
        <method-params>
          <method-param>java.lang.String</method-param>
        </method-params>
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>CustomerEJB</ejb-name>
        <method-intf>Home</method-intf>
        <method-name>findCustomersByQuery38</method-name>
        <method-params>
          <method-param>java.lang.String</method-param>
        </method-params>
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>CustomerEJB</ejb-name>
        <method-intf>Home</method-intf>
        <method-name>findCustomersByQuery39</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>CustomerEJB</ejb-name>
        <method-intf>Home</method-intf>
        <method-name>findCustomerByQuery40</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>CustomerEJB</ejb-name>
        <method-intf>Home</method-intf>
        <method-name>findCustomersByQuery41</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>CustomerEJB</ejb-name>
        <method-intf>Home</method-intf>
        <method-name>findCustomersByQuery42</method-name>
        <method-params>
          <method-param>double</method-param>
        </method-params>
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>CustomerEJB</ejb-name>
        <method-intf>Home</method-intf>
        <method-name>findCustomersByQuery43</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>CustomerEJB</ejb-name>
        <method-intf>Home</method-intf>
        <method-name>findCustomersByQuery44</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>CustomerEJB</ejb-name>
        <method-intf>Home</method-intf>
        <method-name>findCustomersByQuery34</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>CustomerEJB</ejb-name>
        <method-intf>Home</method-intf>
        <method-name>findCustomersByQuery30</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>CustomerEJB</ejb-name>
        <method-intf>Home</method-intf>
        <method-name>findCustomerByQuery29</method-name>
        <method-params>
          <method-param>java.lang.String</method-param>
          <method-param>java.lang.String</method-param>
          <method-param>java.lang.String</method-param>
          <method-param>java.lang.String</method-param>
        </method-params>
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>CustomerEJB</ejb-name>
        <method-intf>LocalHome</method-intf>
        <method-name>findCustomerByQuery29</method-name>
        <method-params>
          <method-param>java.lang.String</method-param>
          <method-param>java.lang.String</method-param>
          <method-param>java.lang.String</method-param>
          <method-param>java.lang.String</method-param>
        </method-params>
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>CustomerEJB</ejb-name>
        <method-intf>Home</method-intf>
        <method-name>findAllCustomersByAliasName</method-name>
        <method-params>
          <method-param>java.lang.String</method-param>
        </method-params>
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>CustomerEJB</ejb-name>
        <method-intf>Home</method-intf>
        <method-name>findCustomerByQuery17</method-name>
        <method-params>
          <method-param>java.lang.String</method-param>
        </method-params>
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>CustomerEJB</ejb-name>
        <method-intf>Remote</method-intf>
        <method-name>getClientCreditCards</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>CustomerEJB</ejb-name>
        <method-intf>Remote</method-intf>
        <method-name>setCountry</method-name>
        <method-params>
          <method-param>com.sun.ts.tests.ejb.ee.pm.ejbql.schema.Country</method-param>
        </method-params>
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>CustomerEJB</ejb-name>
        <method-intf>Local</method-intf>
        <method-name>setCountry</method-name>
        <method-params>
          <method-param>com.sun.ts.tests.ejb.ee.pm.ejbql.schema.Country</method-param>
        </method-params>
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>CustomerEJB</ejb-name>
        <method-intf>Local</method-intf>
        <method-name>getOrders</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>CustomerEJB</ejb-name>
        <method-intf>Local</method-intf>
        <method-name>getCreditCards</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>CustomerEJB</ejb-name>
        <method-intf>Local</method-intf>
        <method-name>setHome</method-name>
        <method-params>
          <method-param>com.sun.ts.tests.ejb.ee.pm.ejbql.schema.AddressLocal</method-param>
        </method-params>
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>CustomerEJB</ejb-name>
        <method-intf>Home</method-intf>
        <method-name>findCustomersByQuery28</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>CustomerEJB</ejb-name>
        <method-intf>Home</method-intf>
        <method-name>getCustomersByWorkCity</method-name>
        <method-params>
          <method-param>java.lang.String</method-param>
        </method-params>
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>CustomerEJB</ejb-name>
        <method-intf>Home</method-intf>
        <method-name>findCustomersByQuery27</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>CustomerEJB</ejb-name>
        <method-intf>Home</method-intf>
        <method-name>findCustomersByQuery26</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>CustomerEJB</ejb-name>
        <method-intf>Home</method-intf>
        <method-name>findCustomersByQuery25</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>CustomerEJB</ejb-name>
        <method-intf>Home</method-intf>
        <method-name>findCustomersByQuery24</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>CustomerEJB</ejb-name>
        <method-intf>Home</method-intf>
        <method-name>remove</method-name>
        <method-params>
          <method-param>jakarta.ejb.Handle</method-param>
        </method-params>
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>CustomerEJB</ejb-name>
        <method-intf>Home</method-intf>
        <method-name>findCustomersByCreditCardType</method-name>
        <method-params>
          <method-param>java.lang.String</method-param>
        </method-params>
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>CustomerEJB</ejb-name>
        <method-intf>LocalHome</method-intf>
        <method-name>findCustomersByWorkCity</method-name>
        <method-params>
          <method-param>java.lang.String</method-param>
        </method-params>
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>CustomerEJB</ejb-name>
        <method-intf>Remote</method-intf>
        <method-name>getClientOrders</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>CustomerEJB</ejb-name>
        <method-intf>Home</method-intf>
        <method-name>findAllCustomers</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>CustomerEJB</ejb-name>
        <method-intf>Remote</method-intf>
        <method-name>initLogging</method-name>
        <method-params>
          <method-param>java.util.Properties</method-param>
        </method-params>
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>CustomerEJB</ejb-name>
        <method-intf>Home</method-intf>
        <method-name>selectCustomerAddressBySet</method-name>
        <method-params>
          <method-param>java.lang.String</method-param>
        </method-params>
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>CustomerEJB</ejb-name>
        <method-intf>Home</method-intf>
        <method-name>findCustomersByQuery15</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>CustomerEJB</ejb-name>
        <method-intf>Home</method-intf>
        <method-name>findCustomersByQuery14</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>CustomerEJB</ejb-name>
        <method-intf>Home</method-intf>
        <method-name>findCustomersByQuery13</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>CustomerEJB</ejb-name>
        <method-intf>Home</method-intf>
        <method-name>findCustomersByQuery12</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>CustomerEJB</ejb-name>
        <method-intf>Home</method-intf>
        <method-name>findCustomersByQuery11</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>CustomerEJB</ejb-name>
        <method-intf>Home</method-intf>
        <method-name>findCustomersByQuery10</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>CustomerEJB</ejb-name>
        <method-intf>Home</method-intf>
        <method-name>findCustomersByQuery9</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>CustomerEJB</ejb-name>
        <method-intf>Home</method-intf>
        <method-name>findCustomersByQuery8</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>CustomerEJB</ejb-name>
        <method-intf>Home</method-intf>
        <method-name>selectPhonesByArea</method-name>
        <method-params>
          <method-param>java.lang.String</method-param>
        </method-params>
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>CustomerEJB</ejb-name>
        <method-intf>Home</method-intf>
        <method-name>findCustomerByHomeAddress</method-name>
        <method-params>
          <method-param>java.lang.String</method-param>
          <method-param>java.lang.String</method-param>
          <method-param>java.lang.String</method-param>
          <method-param>java.lang.String</method-param>
        </method-params>
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>CustomerEJB</ejb-name>
        <method-intf>Home</method-intf>
        <method-name>findCustomersByHomeInfo</method-name>
        <method-params>
          <method-param>java.lang.String</method-param>
          <method-param>java.lang.String</method-param>
          <method-param>java.lang.String</method-param>
          <method-param>java.lang.String</method-param>
        </method-params>
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>CustomerEJB</ejb-name>
        <method-intf>Home</method-intf>
        <method-name>findCustomerByName</method-name>
        <method-params>
          <method-param>java.lang.String</method-param>
        </method-params>
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>CustomerEJB</ejb-name>
        <method-intf>Home</method-intf>
        <method-name>selectHomeAddress</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>CustomerEJB</ejb-name>
        <method-intf>Remote</method-intf>
        <method-name>getId</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>CustomerEJB</ejb-name>
        <method-intf>Local</method-intf>
        <method-name>getId</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>CustomerEJB</ejb-name>
        <method-intf>Home</method-intf>
        <method-name>selectCustomersByAlias</method-name>
        <method-params>
          <method-param>java.lang.String</method-param>
        </method-params>
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>CustomerEJB</ejb-name>
        <method-intf>Home</method-intf>
        <method-name>selectCustomersByQuery42</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>CustomerEJB</ejb-name>
        <method-intf>Home</method-intf>
        <method-name>findCustomersByQuery32</method-name>
        <method-params>
          <method-param>java.lang.String</method-param>
        </method-params>
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>CustomerEJB</ejb-name>
        <method-intf>LocalHome</method-intf>
        <method-name>findCustomersByQuery32</method-name>
        <method-params>
          <method-param>java.lang.String</method-param>
        </method-params>
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>CustomerEJB</ejb-name>
        <method-intf>Remote</method-intf>
        <method-name>getClientHomeAddress</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>CustomerEJB</ejb-name>
        <method-intf>Local</method-intf>
        <method-name>setOrders</method-name>
        <method-params>
          <method-param>java.util.Collection</method-param>
        </method-params>
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>CustomerEJB</ejb-name>
        <method-intf>Local</method-intf>
        <method-name>getAliases</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>CustomerEJB</ejb-name>
        <method-intf>Remote</method-intf>
        <method-name>addAlias</method-name>
        <method-params>
          <method-param>com.sun.ts.tests.ejb.ee.pm.ejbql.schema.Alias</method-param>
        </method-params>
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>CustomerEJB</ejb-name>
        <method-intf>Local</method-intf>
        <method-name>getWork</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>CustomerEJB</ejb-name>
        <method-intf>Remote</method-intf>
        <method-name>getClientWorkAddress</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>CustomerEJB</ejb-name>
        <method-intf>Home</method-intf>
        <method-name>findByPrimaryKey</method-name>
        <method-params>
          <method-param>java.lang.String</method-param>
        </method-params>
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>CustomerEJB</ejb-name>
        <method-intf>LocalHome</method-intf>
        <method-name>findByPrimaryKey</method-name>
        <method-params>
          <method-param>java.lang.String</method-param>
        </method-params>
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>CustomerEJB</ejb-name>
        <method-intf>Remote</method-intf>
        <method-name>getName</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>CustomerEJB</ejb-name>
        <method-intf>Local</method-intf>
        <method-name>getName</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>CustomerEJB</ejb-name>
        <method-intf>LocalHome</method-intf>
        <method-name>findCustomerByHomePhoneNumber</method-name>
        <method-params>
          <method-param>java.lang.String</method-param>
        </method-params>
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>CustomerEJB</ejb-name>
        <method-intf>Home</method-intf>
        <method-name>findCustomersByQuery23</method-name>
        <method-params>
          <method-param>java.lang.String</method-param>
        </method-params>
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>CustomerEJB</ejb-name>
        <method-intf>Home</method-intf>
        <method-name>findCustomersByQuery22</method-name>
        <method-params>
          <method-param>java.lang.String</method-param>
        </method-params>
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>CustomerEJB</ejb-name>
        <method-intf>Remote</method-intf>
        <method-name>getClientAliases</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>CustomerEJB</ejb-name>
        <method-intf>Home</method-intf>
        <method-name>findCustomerByQuery16</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>CustomerEJB</ejb-name>
        <method-intf>Remote</method-intf>
        <method-name>getCountry</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>CustomerEJB</ejb-name>
        <method-intf>Local</method-intf>
        <method-name>getCountry</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>CustomerEJB</ejb-name>
        <method-intf>Local</method-intf>
        <method-name>setAliases</method-name>
        <method-params>
          <method-param>java.util.Collection</method-param>
        </method-params>
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>CustomerEJB</ejb-name>
        <method-intf>Home</method-intf>
        <method-name>create</method-name>
        <method-params>
          <method-param>java.lang.String</method-param>
          <method-param>java.lang.String</method-param>
          <method-param>com.sun.ts.tests.ejb.ee.pm.ejbql.schema.AddressDVC</method-param>
          <method-param>com.sun.ts.tests.ejb.ee.pm.ejbql.schema.AddressDVC</method-param>
          <method-param>com.sun.ts.tests.ejb.ee.pm.ejbql.schema.Country</method-param>
        </method-params>
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>CustomerEJB</ejb-name>
        <method-intf>LocalHome</method-intf>
        <method-name>create</method-name>
        <method-params>
          <method-param>java.lang.String</method-param>
          <method-param>java.lang.String</method-param>
          <method-param>com.sun.ts.tests.ejb.ee.pm.ejbql.schema.AddressDVC</method-param>
          <method-param>com.sun.ts.tests.ejb.ee.pm.ejbql.schema.AddressDVC</method-param>
          <method-param>com.sun.ts.tests.ejb.ee.pm.ejbql.schema.Country</method-param>
        </method-params>
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>CustomerEJB</ejb-name>
        <method-intf>Local</method-intf>
        <method-name>setWork</method-name>
        <method-params>
          <method-param>com.sun.ts.tests.ejb.ee.pm.ejbql.schema.AddressLocal</method-param>
        </method-params>
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>CustomerEJB</ejb-name>
        <method-intf>Remote</method-intf>
        <method-name>remove</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>CustomerEJB</ejb-name>
        <method-intf>Local</method-intf>
        <method-name>remove</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>CustomerEJB</ejb-name>
        <method-intf>Local</method-intf>
        <method-name>setCreditCards</method-name>
        <method-params>
          <method-param>java.util.Collection</method-param>
        </method-params>
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>CustomerEJB</ejb-name>
        <method-intf>Remote</method-intf>
        <method-name>addOrder</method-name>
        <method-params>
          <method-param>com.sun.ts.tests.ejb.ee.pm.ejbql.schema.Order</method-param>
        </method-params>
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>CustomerEJB</ejb-name>
        <method-intf>Remote</method-intf>
        <method-name>addSpouse</method-name>
        <method-params>
          <method-param>com.sun.ts.tests.ejb.ee.pm.ejbql.schema.SpouseDVC</method-param>
        </method-params>
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>CustomerEJB</ejb-name>
        <method-intf>Home</method-intf>
        <method-name>selectAllHomeZipCodesByCity</method-name>
        <method-params>
          <method-param>java.lang.String</method-param>
        </method-params>
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>CustomerEJB</ejb-name>
        <method-intf>Home</method-intf>
        <method-name>getCustomersByQuery32</method-name>
        <method-params>
          <method-param>java.lang.String</method-param>
        </method-params>
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>CustomerEJB</ejb-name>
        <method-intf>Home</method-intf>
        <method-name>getCustomerByQuery29</method-name>
        <method-params>
          <method-param>java.lang.String</method-param>
          <method-param>java.lang.String</method-param>
          <method-param>java.lang.String</method-param>
          <method-param>java.lang.String</method-param>
        </method-params>
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>CustomerEJB</ejb-name>
        <method-intf>Remote</method-intf>
        <method-name>addCreditCard</method-name>
        <method-params>
          <method-param>com.sun.ts.tests.ejb.ee.pm.ejbql.schema.CreditCardDVC</method-param>
        </method-params>
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>CustomerEJB</ejb-name>
        <method-intf>Remote</method-intf>
        <method-name>setName</method-name>
        <method-params>
          <method-param>java.lang.String</method-param>
        </method-params>
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>CustomerEJB</ejb-name>
        <method-intf>Local</method-intf>
        <method-name>setName</method-name>
        <method-params>
          <method-param>java.lang.String</method-param>
        </method-params>
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>CustomerEJB</ejb-name>
        <method-intf>Home</method-intf>
        <method-name>selectAllWorkAddresses</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>CustomerEJB</ejb-name>
        <method-intf>Home</method-intf>
        <method-name>getCustomerByHomePhoneNumber</method-name>
        <method-params>
          <method-param>java.lang.String</method-param>
        </method-params>
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>CustomerEJB</ejb-name>
        <method-intf>Home</method-intf>
        <method-name>selectCustomersByWorkZipCode</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>CustomerEJB</ejb-name>
        <method-intf>Home</method-intf>
        <method-name>selectCustomersByNotNullWorkZipCode</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>CustomerEJB</ejb-name>
        <method-intf>Home</method-intf>
        <method-name>selectCustomerByHomeAddress</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>CustomerEJB</ejb-name>
        <method-intf>Home</method-intf>
        <method-name>selectAllHomeCities</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>CustomerEJB</ejb-name>
        <method-intf>Home</method-intf>
        <method-name>selectNotNullHomeCities</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>CustomerEJB</ejb-name>
        <method-intf>Home</method-intf>
        <method-name>getSpouseInfo</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>CustomerEJB</ejb-name>
        <method-intf>Home</method-intf>
        <method-name>addSpouseEntry</method-name>
        <method-params>
          <method-param>com.sun.ts.tests.ejb.ee.pm.ejbql.schema.SpouseDVC</method-param>
        </method-params>
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>PhoneEJB</ejb-name>
        <method-intf>LocalHome</method-intf>
        <method-name>remove</method-name>
        <method-params>
          <method-param>java.lang.Object</method-param>
        </method-params>
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>PhoneEJB</ejb-name>
        <method-intf>Local</method-intf>
        <method-name>getNumber</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>PhoneEJB</ejb-name>
        <method-intf>LocalHome</method-intf>
        <method-name>create</method-name>
        <method-params>
          <method-param>java.lang.String</method-param>
          <method-param>java.lang.String</method-param>
          <method-param>java.lang.String</method-param>
        </method-params>
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>PhoneEJB</ejb-name>
        <method-intf>LocalHome</method-intf>
        <method-name>findByPrimaryKey</method-name>
        <method-params>
          <method-param>java.lang.String</method-param>
        </method-params>
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>PhoneEJB</ejb-name>
        <method-intf>Local</method-intf>
        <method-name>getArea</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>PhoneEJB</ejb-name>
        <method-intf>Local</method-intf>
        <method-name>setAddress</method-name>
        <method-params>
          <method-param>com.sun.ts.tests.ejb.ee.pm.ejbql.schema.AddressLocal</method-param>
        </method-params>
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>PhoneEJB</ejb-name>
        <method-intf>Local</method-intf>
        <method-name>getId</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>PhoneEJB</ejb-name>
        <method-intf>LocalHome</method-intf>
        <method-name>create</method-name>
        <method-params>
          <method-param>java.lang.String</method-param>
          <method-param>java.lang.String</method-param>
          <method-param>java.lang.String</method-param>
          <method-param>com.sun.ts.tests.ejb.ee.pm.ejbql.schema.AddressLocal</method-param>
        </method-params>
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>PhoneEJB</ejb-name>
        <method-intf>Local</method-intf>
        <method-name>setArea</method-name>
        <method-params>
          <method-param>java.lang.String</method-param>
        </method-params>
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>PhoneEJB</ejb-name>
        <method-intf>Local</method-intf>
        <method-name>remove</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>PhoneEJB</ejb-name>
        <method-intf>Local</method-intf>
        <method-name>getAddress</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>PhoneEJB</ejb-name>
        <method-intf>Local</method-intf>
        <method-name>setNumber</method-name>
        <method-params>
          <method-param>java.lang.String</method-param>
        </method-params>
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>AddressEJB</ejb-name>
        <method-intf>Local</method-intf>
        <method-name>getZip</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>AddressEJB</ejb-name>
        <method-intf>LocalHome</method-intf>
        <method-name>remove</method-name>
        <method-params>
          <method-param>java.lang.Object</method-param>
        </method-params>
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>AddressEJB</ejb-name>
        <method-intf>LocalHome</method-intf>
        <method-name>create</method-name>
        <method-params>
          <method-param>java.lang.String</method-param>
          <method-param>java.lang.String</method-param>
          <method-param>java.lang.String</method-param>
          <method-param>java.lang.String</method-param>
          <method-param>java.lang.String</method-param>
        </method-params>
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>AddressEJB</ejb-name>
        <method-intf>Local</method-intf>
        <method-name>getStreet</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>AddressEJB</ejb-name>
        <method-intf>LocalHome</method-intf>
        <method-name>findByPrimaryKey</method-name>
        <method-params>
          <method-param>java.lang.String</method-param>
        </method-params>
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>AddressEJB</ejb-name>
        <method-intf>Local</method-intf>
        <method-name>setZip</method-name>
        <method-params>
          <method-param>java.lang.String</method-param>
        </method-params>
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>AddressEJB</ejb-name>
        <method-intf>Local</method-intf>
        <method-name>getId</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>AddressEJB</ejb-name>
        <method-intf>LocalHome</method-intf>
        <method-name>create</method-name>
        <method-params>
          <method-param>java.lang.String</method-param>
          <method-param>java.lang.String</method-param>
          <method-param>java.lang.String</method-param>
          <method-param>java.lang.String</method-param>
          <method-param>java.lang.String</method-param>
          <method-param>java.util.Collection</method-param>
        </method-params>
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>AddressEJB</ejb-name>
        <method-intf>Local</method-intf>
        <method-name>setState</method-name>
        <method-params>
          <method-param>java.lang.String</method-param>
        </method-params>
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>AddressEJB</ejb-name>
        <method-intf>Local</method-intf>
        <method-name>getCity</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>AddressEJB</ejb-name>
        <method-intf>Local</method-intf>
        <method-name>remove</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>AddressEJB</ejb-name>
        <method-intf>Local</method-intf>
        <method-name>setStreet</method-name>
        <method-params>
          <method-param>java.lang.String</method-param>
        </method-params>
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>AddressEJB</ejb-name>
        <method-intf>Local</method-intf>
        <method-name>setPhones</method-name>
        <method-params>
          <method-param>java.util.Collection</method-param>
        </method-params>
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>AddressEJB</ejb-name>
        <method-intf>Local</method-intf>
        <method-name>getState</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>AddressEJB</ejb-name>
        <method-intf>Local</method-intf>
        <method-name>setCity</method-name>
        <method-params>
          <method-param>java.lang.String</method-param>
        </method-params>
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>AddressEJB</ejb-name>
        <method-intf>Local</method-intf>
        <method-name>getPhones</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>ProductEJB</ejb-name>
        <method-intf>Local</method-intf>
        <method-name>getQuantity</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>ProductEJB</ejb-name>
        <method-intf>Remote</method-intf>
        <method-name>getQuantity</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>ProductEJB</ejb-name>
        <method-intf>LocalHome</method-intf>
        <method-name>remove</method-name>
        <method-params>
          <method-param>java.lang.Object</method-param>
        </method-params>
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>ProductEJB</ejb-name>
        <method-intf>Home</method-intf>
        <method-name>findProductsByQuery1</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>ProductEJB</ejb-name>
        <method-intf>Home</method-intf>
        <method-name>findProductsByQuery2</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>ProductEJB</ejb-name>
        <method-intf>Home</method-intf>
        <method-name>findProductsByQuery3</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>ProductEJB</ejb-name>
        <method-intf>Home</method-intf>
        <method-name>findProductsByQuery4</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>ProductEJB</ejb-name>
        <method-intf>Home</method-intf>
        <method-name>findProductsByQuery5</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>ProductEJB</ejb-name>
        <method-intf>Home</method-intf>
        <method-name>findProductsByQuery6</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>ProductEJB</ejb-name>
        <method-intf>Home</method-intf>
        <method-name>findProductsByQuery7</method-name>
        <method-params>
          <method-param>int</method-param>
        </method-params>
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>ProductEJB</ejb-name>
        <method-intf>Home</method-intf>
        <method-name>findProductsByQuery8</method-name>
        <method-params>
          <method-param>java.lang.String</method-param>
        </method-params>
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>ProductEJB</ejb-name>
        <method-intf>Home</method-intf>
        <method-name>findProductsByQuery9</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>ProductEJB</ejb-name>
        <method-intf>Home</method-intf>
        <method-name>remove</method-name>
        <method-params>
          <method-param>java.lang.Object</method-param>
        </method-params>
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>ProductEJB</ejb-name>
        <method-intf>Home</method-intf>
        <method-name>selectAllProducts</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>ProductEJB</ejb-name>
        <method-intf>Home</method-intf>
        <method-name>selectProductsByPartNumber</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>ProductEJB</ejb-name>
        <method-intf>Local</method-intf>
        <method-name>setName</method-name>
        <method-params>
          <method-param>java.lang.String</method-param>
        </method-params>
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>ProductEJB</ejb-name>
        <method-intf>LocalHome</method-intf>
        <method-name>create</method-name>
        <method-params>
          <method-param>java.lang.String</method-param>
          <method-param>java.lang.String</method-param>
          <method-param>double</method-param>
          <method-param>int</method-param>
          <method-param>long</method-param>
        </method-params>
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>ProductEJB</ejb-name>
        <method-intf>Remote</method-intf>
        <method-name>setName</method-name>
        <method-params>
          <method-param>java.lang.String</method-param>
        </method-params>
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>ProductEJB</ejb-name>
        <method-intf>Home</method-intf>
        <method-name>create</method-name>
        <method-params>
          <method-param>java.lang.String</method-param>
          <method-param>java.lang.String</method-param>
          <method-param>double</method-param>
          <method-param>int</method-param>
          <method-param>long</method-param>
        </method-params>
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>ProductEJB</ejb-name>
        <method-intf>Local</method-intf>
        <method-name>getId</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>ProductEJB</ejb-name>
        <method-intf>Remote</method-intf>
        <method-name>getId</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>ProductEJB</ejb-name>
        <method-intf>Local</method-intf>
        <method-name>getName</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>ProductEJB</ejb-name>
        <method-intf>Remote</method-intf>
        <method-name>getName</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>ProductEJB</ejb-name>
        <method-intf>Home</method-intf>
        <method-name>remove</method-name>
        <method-params>
          <method-param>jakarta.ejb.Handle</method-param>
        </method-params>
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>ProductEJB</ejb-name>
        <method-intf>LocalHome</method-intf>
        <method-name>findByPrimaryKey</method-name>
        <method-params>
          <method-param>java.lang.String</method-param>
        </method-params>
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>ProductEJB</ejb-name>
        <method-intf>Home</method-intf>
        <method-name>findByPrimaryKey</method-name>
        <method-params>
          <method-param>java.lang.String</method-param>
        </method-params>
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>ProductEJB</ejb-name>
        <method-intf>Local</method-intf>
        <method-name>setQuantity</method-name>
        <method-params>
          <method-param>int</method-param>
        </method-params>
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>ProductEJB</ejb-name>
        <method-intf>Remote</method-intf>
        <method-name>setQuantity</method-name>
        <method-params>
          <method-param>int</method-param>
        </method-params>
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>ProductEJB</ejb-name>
        <method-intf>Home</method-intf>
        <method-name>selectProductByType</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>ProductEJB</ejb-name>
        <method-intf>Local</method-intf>
        <method-name>setPartNumber</method-name>
        <method-params>
          <method-param>long</method-param>
        </method-params>
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>ProductEJB</ejb-name>
        <method-intf>Local</method-intf>
        <method-name>getPartNumber</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>ProductEJB</ejb-name>
        <method-intf>Remote</method-intf>
        <method-name>setPartNumber</method-name>
        <method-params>
          <method-param>long</method-param>
        </method-params>
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>ProductEJB</ejb-name>
        <method-intf>Remote</method-intf>
        <method-name>getPartNumber</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>ProductEJB</ejb-name>
        <method-intf>Home</method-intf>
        <method-name>selectProductByName</method-name>
        <method-params>
          <method-param>java.lang.String</method-param>
        </method-params>
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>ProductEJB</ejb-name>
        <method-intf>Home</method-intf>
        <method-name>selectCountSingle</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>ProductEJB</ejb-name>
        <method-intf>Home</method-intf>
        <method-name>selectSumSingle</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>ProductEJB</ejb-name>
        <method-intf>Local</method-intf>
        <method-name>setPrice</method-name>
        <method-params>
          <method-param>double</method-param>
        </method-params>
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>ProductEJB</ejb-name>
        <method-intf>Remote</method-intf>
        <method-name>setPrice</method-name>
        <method-params>
          <method-param>double</method-param>
        </method-params>
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>ProductEJB</ejb-name>
        <method-intf>Local</method-intf>
        <method-name>remove</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>ProductEJB</ejb-name>
        <method-intf>Remote</method-intf>
        <method-name>remove</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>ProductEJB</ejb-name>
        <method-intf>Home</method-intf>
        <method-name>findAllProductsByQuantity</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>ProductEJB</ejb-name>
        <method-intf>Remote</method-intf>
        <method-name>initLogging</method-name>
        <method-params>
          <method-param>java.util.Properties</method-param>
        </method-params>
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>ProductEJB</ejb-name>
        <method-intf>Home</method-intf>
        <method-name>findAllProducts</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>ProductEJB</ejb-name>
        <method-intf>Local</method-intf>
        <method-name>getPrice</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>ProductEJB</ejb-name>
        <method-intf>Remote</method-intf>
        <method-name>getPrice</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>ProductEJB</ejb-name>
        <method-intf>Home</method-intf>
        <method-name>findProductByName</method-name>
        <method-params>
          <method-param>java.lang.String</method-param>
        </method-params>
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>    
        <ejb-name>ProductEJB</ejb-name>
        <method-intf>Home</method-intf>
        <method-name>findProductsByHighestQuantity</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>AliasEJB</ejb-name>
        <method-intf>LocalHome</method-intf>
        <method-name>remove</method-name>
        <method-params>
          <method-param>java.lang.Object</method-param>
        </method-params>
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>AliasEJB</ejb-name>
        <method-intf>Home</method-intf>
        <method-name>remove</method-name>
        <method-params>
          <method-param>java.lang.Object</method-param>
        </method-params>
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>AliasEJB</ejb-name>
        <method-intf>Local</method-intf>
        <method-name>getId</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>AliasEJB</ejb-name>
        <method-intf>Remote</method-intf>
        <method-name>getId</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>AliasEJB</ejb-name>
        <method-intf>Local</method-intf>
        <method-name>setCustomers</method-name>
        <method-params>
          <method-param>java.util.Collection</method-param>
        </method-params>
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>AliasEJB</ejb-name>
        <method-intf>Local</method-intf>
        <method-name>getCustomers</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>AliasEJB</ejb-name>
        <method-intf>Home</method-intf>
        <method-name>findAliasesByQuery7</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>AliasEJB</ejb-name>
        <method-intf>Home</method-intf>
        <method-name>findAliasesByQuery8</method-name>
         <method-params>
            <method-param>java.lang.String</method-param>
          </method-params>
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>AliasEJB</ejb-name>
        <method-intf>Home</method-intf>
        <method-name>findAliasesByQuery9</method-name>
         <method-params>
            <method-param>java.lang.String</method-param>
          </method-params>
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>AliasEJB</ejb-name>
        <method-intf>Home</method-intf>
        <method-name>findAliasesByQuery10</method-name>
         <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>AliasEJB</ejb-name>
        <method-intf>Home</method-intf>
        <method-name>findAliasesByQuery11</method-name>
         <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>AliasEJB</ejb-name>
        <method-intf>Home</method-intf>
        <method-name>findAliasesByQuery12</method-name>
         <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction> 
      <method> 
        <ejb-name>AliasEJB</ejb-name> 
        <method-intf>Home</method-intf> 
        <method-name>selectNullAlias</method-name> 
        <method-params>
            <method-param>java.lang.String</method-param>
          </method-params>
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>AliasEJB</ejb-name>
        <method-intf>Home</method-intf>
        <method-name>remove</method-name>
        <method-params>
          <method-param>jakarta.ejb.Handle</method-param>
        </method-params>
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>AliasEJB</ejb-name>
        <method-intf>LocalHome</method-intf>
        <method-name>findByPrimaryKey</method-name>
        <method-params>
          <method-param>java.lang.String</method-param>
        </method-params>
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>AliasEJB</ejb-name>
        <method-intf>Home</method-intf>
        <method-name>findAliasesByQuery6</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>AliasEJB</ejb-name>
        <method-intf>Home</method-intf>
        <method-name>findByPrimaryKey</method-name>
        <method-params>
          <method-param>java.lang.String</method-param>
        </method-params>
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>AliasEJB</ejb-name>
        <method-intf>Home</method-intf>
        <method-name>findAliasesByQuery5</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>AliasEJB</ejb-name>
        <method-intf>Home</method-intf>
        <method-name>findAliasesByQuery4</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>AliasEJB</ejb-name>
        <method-intf>Home</method-intf>
        <method-name>findAliasesByQuery2</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>AliasEJB</ejb-name>
        <method-intf>Local</method-intf>
        <method-name>getCustomerNoop</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>AliasEJB</ejb-name>
        <method-intf>Home</method-intf>
        <method-name>findAllAliases</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>AliasEJB</ejb-name>
        <method-intf>Remote</method-intf>
        <method-name>getClientCustomers</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>AliasEJB</ejb-name>
        <method-intf>Local</method-intf>
        <method-name>setCustomersNoop</method-name>
        <method-params>
          <method-param>java.util.Collection</method-param>
        </method-params>
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>AliasEJB</ejb-name>
        <method-intf>Local</method-intf>
        <method-name>remove</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>AliasEJB</ejb-name>
        <method-intf>Remote</method-intf>
        <method-name>remove</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>AliasEJB</ejb-name>
        <method-intf>Home</method-intf>
        <method-name>findAliasesByQuery3</method-name>
        <method-params>
          <method-param>java.lang.String</method-param>
          <method-param>int</method-param>
          <method-param>int</method-param>
        </method-params>
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>AliasEJB</ejb-name>
        <method-intf>Remote</method-intf>
        <method-name>initLogging</method-name>
        <method-params>
          <method-param>java.util.Properties</method-param>
        </method-params>
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>AliasEJB</ejb-name>
        <method-intf>Local</method-intf>
        <method-name>getAlias</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>AliasEJB</ejb-name>
        <method-intf>Remote</method-intf>
        <method-name>getAlias</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>AliasEJB</ejb-name>
        <method-intf>LocalHome</method-intf>
        <method-name>create</method-name>
        <method-params>
          <method-param>java.lang.String</method-param>
          <method-param>java.lang.String</method-param>
        </method-params>
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>AliasEJB</ejb-name>
        <method-intf>Home</method-intf>
        <method-name>create</method-name>
        <method-params>
          <method-param>java.lang.String</method-param>
          <method-param>java.lang.String</method-param>
        </method-params>
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>AliasEJB</ejb-name>
        <method-intf>Local</method-intf>
        <method-name>getCustomersNoop</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>AliasEJB</ejb-name>
        <method-intf>Local</method-intf>
        <method-name>setCustomerNoop</method-name>
        <method-params>
          <method-param>com.sun.ts.tests.ejb.ee.pm.ejbql.schema.CustomerLocal</method-param>
        </method-params>
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>AliasEJB</ejb-name>
        <method-intf>Local</method-intf>
        <method-name>setAlias</method-name>
        <method-params>
          <method-param>java.lang.String</method-param>
        </method-params>
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>AliasEJB</ejb-name>
        <method-intf>Remote</method-intf>
        <method-name>setAlias</method-name>
        <method-params>
          <method-param>java.lang.String</method-param>
        </method-params>
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>AliasEJB</ejb-name>
        <method-intf>Home</method-intf>
        <method-name>findCustomerAliasesByOrder</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>LineItemEJB</ejb-name>
        <method-intf>Local</method-intf>
        <method-name>setOrder</method-name>
        <method-params>
          <method-param>com.sun.ts.tests.ejb.ee.pm.ejbql.schema.OrderLocal</method-param>
        </method-params>
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>LineItemEJB</ejb-name>
        <method-intf>LocalHome</method-intf>
        <method-name>remove</method-name>
        <method-params>
          <method-param>java.lang.Object</method-param>
        </method-params>
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>LineItemEJB</ejb-name>
        <method-intf>Local</method-intf>
        <method-name>setQuantity</method-name>
        <method-params>
          <method-param>int</method-param>
        </method-params>
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>LineItemEJB</ejb-name>
        <method-intf>Local</method-intf>
        <method-name>getQuantity</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>LineItemEJB</ejb-name>
        <method-intf>Local</method-intf>
        <method-name>getProduct</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>LineItemEJB</ejb-name>
        <method-intf>Local</method-intf>
        <method-name>getOrder</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>LineItemEJB</ejb-name>
        <method-intf>LocalHome</method-intf>
        <method-name>findByPrimaryKey</method-name>
        <method-params>
          <method-param>java.lang.String</method-param>
        </method-params>
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>LineItemEJB</ejb-name>
        <method-intf>Local</method-intf>
        <method-name>getId</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>LineItemEJB</ejb-name>
        <method-intf>LocalHome</method-intf>
        <method-name>create</method-name>
        <method-params>
          <method-param>java.lang.String</method-param>
          <method-param>int</method-param>
          <method-param>com.sun.ts.tests.ejb.ee.pm.ejbql.schema.OrderLocal</method-param>
          <method-param>com.sun.ts.tests.ejb.ee.pm.ejbql.schema.ProductLocal</method-param>
        </method-params>
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>LineItemEJB</ejb-name>
        <method-intf>Local</method-intf>
        <method-name>setProduct</method-name>
        <method-params>
          <method-param>com.sun.ts.tests.ejb.ee.pm.ejbql.schema.ProductLocal</method-param>
        </method-params>
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>LineItemEJB</ejb-name>
        <method-intf>Local</method-intf>
        <method-name>remove</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>OrderEJB</ejb-name>
        <method-intf>Local</method-intf>
        <method-name>remove</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>OrderEJB</ejb-name>
        <method-intf>Remote</method-intf>
        <method-name>remove</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>OrderEJB</ejb-name>
        <method-intf>Home</method-intf>
        <method-name>findOrdersByQuery9</method-name>
        <method-params>
          <method-param>java.lang.String</method-param>
        </method-params>
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>OrderEJB</ejb-name>
        <method-intf>Home</method-intf>
        <method-name>remove</method-name>
        <method-params>
          <method-param>jakarta.ejb.Handle</method-param>
        </method-params>
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>OrderEJB</ejb-name>
        <method-intf>Home</method-intf>
        <method-name>selectAllExpiredCreditCards</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>OrderEJB</ejb-name>
        <method-intf>Home</method-intf>
        <method-name>selectCreditCardBalances</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>OrderEJB</ejb-name>
        <method-intf>Home</method-intf>
        <method-name>selectAllCreditCardBalances</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>OrderEJB</ejb-name>
        <method-intf>Home</method-intf>
        <method-name>selectCreditCardBalances</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>OrderEJB</ejb-name>
        <method-intf>Home</method-intf>
        <method-name>selectMinSingle</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>OrderEJB</ejb-name>
        <method-intf>Home</method-intf>
        <method-name>selectMaxSingle</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>OrderEJB</ejb-name>
        <method-intf>Home</method-intf>
        <method-name>selectAvgSingle</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>OrderEJB</ejb-name>
        <method-intf>Home</method-intf>
        <method-name>findAllOrdersByCustomerName</method-name>
        <method-params>
          <method-param>java.lang.String</method-param>
        </method-params>
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>OrderEJB</ejb-name>
        <method-intf>Remote</method-intf>
        <method-name>addLineItem</method-name>
        <method-params>
          <method-param>com.sun.ts.tests.ejb.ee.pm.ejbql.schema.LineItemDVC</method-param>
        </method-params>
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>OrderEJB</ejb-name>
        <method-intf>Home</method-intf>
        <method-name>findAllOrders</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>OrderEJB</ejb-name>
        <method-intf>LocalHome</method-intf>
        <method-name>create</method-name>
        <method-params>
          <method-param>java.lang.String</method-param>
          <method-param>com.sun.ts.tests.ejb.ee.pm.ejbql.schema.Customer</method-param>
        </method-params>
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>OrderEJB</ejb-name>
        <method-intf>Home</method-intf>
        <method-name>create</method-name>
        <method-params>
          <method-param>java.lang.String</method-param>
          <method-param>com.sun.ts.tests.ejb.ee.pm.ejbql.schema.Customer</method-param>
        </method-params>
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>OrderEJB</ejb-name>
        <method-intf>Home</method-intf>
        <method-name>selectAllLineItems</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>OrderEJB</ejb-name>
        <method-intf>Home</method-intf>
        <method-name>selectSampleLineItems</method-name>
        <method-params>
          <method-param>com.sun.ts.tests.ejb.ee.pm.ejbql.schema.LineItemDVC</method-param>
        </method-params>
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>OrderEJB</ejb-name>
        <method-intf>Home</method-intf>
        <method-name>findByPrimaryKey</method-name>
        <method-params>
          <method-param>java.lang.String</method-param>
        </method-params>
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>OrderEJB</ejb-name>
        <method-intf>LocalHome</method-intf>
        <method-name>findByPrimaryKey</method-name>
        <method-params>
          <method-param>java.lang.String</method-param>
        </method-params>
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>OrderEJB</ejb-name>
        <method-intf>Home</method-intf>
        <method-name>findOrdersByQuery6</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>OrderEJB</ejb-name>
        <method-intf>Local</method-intf>
        <method-name>setTotalPrice</method-name>
        <method-params>
          <method-param>double</method-param>
        </method-params>
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>OrderEJB</ejb-name>
        <method-intf>Home</method-intf>
        <method-name>findOrdersByQuery5</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>OrderEJB</ejb-name>
        <method-intf>Remote</method-intf>
        <method-name>setTotalPrice</method-name>
        <method-params>
          <method-param>double</method-param>
        </method-params>
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>OrderEJB</ejb-name>
        <method-intf>Local</method-intf>
        <method-name>getId</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>OrderEJB</ejb-name>
        <method-intf>Home</method-intf>
        <method-name>findOrdersByQuery4</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>OrderEJB</ejb-name>
        <method-intf>Remote</method-intf>
        <method-name>getId</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>OrderEJB</ejb-name>
        <method-intf>Remote</method-intf>
        <method-name>getClientCreditCard</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>OrderEJB</ejb-name>
        <method-intf>Home</method-intf>
        <method-name>findOrdersByQuery3</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>OrderEJB</ejb-name>
        <method-intf>Home</method-intf>
        <method-name>findOrdersByQuery2</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>OrderEJB</ejb-name>
        <method-intf>Home</method-intf>
        <method-name>findOrdersByQuery1</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>OrderEJB</ejb-name>
        <method-intf>Home</method-intf>
        <method-name>findAllOrdersWithGreaterPrice</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>OrderEJB</ejb-name>
        <method-intf>Home</method-intf>
        <method-name>findOrdersByQuery18</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>OrderEJB</ejb-name>
        <method-intf>Home</method-intf>
        <method-name>findOrdersByQuery19</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>OrderEJB</ejb-name>
        <method-intf>Home</method-intf>
        <method-name>findOrdersByQuery20</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>OrderEJB</ejb-name>
        <method-intf>Home</method-intf>
        <method-name>findOrdersByQuery21</method-name>
         <method-params>
            <method-param>java.lang.String</method-param>
          </method-params>
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>OrderEJB</ejb-name>
        <method-intf>Home</method-intf>
        <method-name>findOrdersByQuery21</method-name>
         <method-params>
            <method-param>java.lang.String</method-param>
            <method-param>double</method-param>
          </method-params>
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>OrderEJB</ejb-name>
        <method-intf>Home</method-intf>
        <method-name>findOrdersByQuery22</method-name>
         <method-params>
            <method-param>double</method-param>
          </method-params>
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>OrderEJB</ejb-name>
        <method-intf>Home</method-intf>
        <method-name>findOrdersByPrice</method-name>
         <method-params>
            <method-param>java.lang.String</method-param>
          </method-params>
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>OrderEJB</ejb-name>
        <method-intf>Home</method-intf>
        <method-name>findOrdersByQuery17</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>OrderEJB</ejb-name>
        <method-intf>Home</method-intf>
        <method-name>findOrdersByQuery14</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>OrderEJB</ejb-name>
        <method-intf>Home</method-intf>
        <method-name>findOrdersByQuery13</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>OrderEJB</ejb-name>
        <method-intf>Local</method-intf>
        <method-name>setCustomer</method-name>
        <method-params>
          <method-param>com.sun.ts.tests.ejb.ee.pm.ejbql.schema.CustomerLocal</method-param>
        </method-params>
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>OrderEJB</ejb-name>
        <method-intf>Home</method-intf>
        <method-name>findOrdersByQuery12</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>OrderEJB</ejb-name>
        <method-intf>Home</method-intf>
        <method-name>remove</method-name>
        <method-params>
          <method-param>java.lang.Object</method-param>
        </method-params>
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>OrderEJB</ejb-name>
        <method-intf>LocalHome</method-intf>
        <method-name>remove</method-name>
        <method-params>
          <method-param>java.lang.Object</method-param>
        </method-params>
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>OrderEJB</ejb-name>
        <method-intf>Home</method-intf>
        <method-name>findOrdersByQuery16</method-name>
        <method-params>
          <method-param>double</method-param>
        </method-params>
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>OrderEJB</ejb-name>
        <method-intf>Remote</method-intf>
        <method-name>getClientLineItems</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>OrderEJB</ejb-name>
        <method-intf>Remote</method-intf>
        <method-name>addSampleLineItem</method-name>
        <method-params>
          <method-param>com.sun.ts.tests.ejb.ee.pm.ejbql.schema.LineItemDVC</method-param>
        </method-params>
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>OrderEJB</ejb-name>
        <method-intf>Remote</method-intf>
        <method-name>initLogging</method-name>
        <method-params>
          <method-param>java.util.Properties</method-param>
        </method-params>
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>OrderEJB</ejb-name>
        <method-intf>Local</method-intf>
        <method-name>getCustomer</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>OrderEJB</ejb-name>
        <method-intf>Home</method-intf>
        <method-name>findApprovedCreditCards</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>OrderEJB</ejb-name>
        <method-intf>Local</method-intf>
        <method-name>getTotalPrice</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>OrderEJB</ejb-name>
        <method-intf>Remote</method-intf>
        <method-name>getTotalPrice</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>SpouseEJB</ejb-name>
        <method-intf>Local</method-intf>
        <method-name>setLastName</method-name>
        <method-params>
          <method-param>java.lang.String</method-param>
        </method-params>
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>SpouseEJB</ejb-name>
        <method-intf>LocalHome</method-intf>
        <method-name>remove</method-name>
        <method-params>
          <method-param>java.lang.Object</method-param>
        </method-params>
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>SpouseEJB</ejb-name>
        <method-intf>Local</method-intf>
        <method-name>getSocialSecurityNumber</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>SpouseEJB</ejb-name>
        <method-intf>Local</method-intf>
        <method-name>getCustomer</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>SpouseEJB</ejb-name>
        <method-intf>LocalHome</method-intf>
        <method-name>findByPrimaryKey</method-name>
        <method-params>
          <method-param>java.lang.String</method-param>
        </method-params>
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>SpouseEJB</ejb-name>
        <method-intf>Local</method-intf>
        <method-name>getId</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>SpouseEJB</ejb-name>
        <method-intf>Local</method-intf>
        <method-name>getInfo</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>SpouseEJB</ejb-name>
        <method-intf>Local</method-intf>
        <method-name>setInfo</method-name>
        <method-params>
          <method-param>com.sun.ts.tests.ejb.ee.pm.ejbql.schema.InfoLocal</method-param>
        </method-params>
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>SpouseEJB</ejb-name>
        <method-intf>Local</method-intf>
        <method-name>getLastName</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>SpouseEJB</ejb-name>
        <method-intf>Local</method-intf>
        <method-name>getFirstName</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>SpouseEJB</ejb-name>
        <method-intf>Local</method-intf>
        <method-name>remove</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>SpouseEJB</ejb-name>
        <method-intf>LocalHome</method-intf>
        <method-name>create</method-name>
        <method-params>
          <method-param>java.lang.String</method-param>
          <method-param>java.lang.String</method-param>
          <method-param>java.lang.String</method-param>
          <method-param>java.lang.String</method-param>
          <method-param>java.lang.String</method-param>
          <method-param>com.sun.ts.tests.ejb.ee.pm.ejbql.schema.InfoLocal</method-param>
        </method-params>
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>SpouseEJB</ejb-name>
        <method-intf>Local</method-intf>
        <method-name>setCustomer</method-name>
        <method-params>
          <method-param>com.sun.ts.tests.ejb.ee.pm.ejbql.schema.CustomerLocal</method-param>
        </method-params>
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>SpouseEJB</ejb-name>
        <method-intf>Local</method-intf>
        <method-name>setMaidenName</method-name>
        <method-params>
          <method-param>java.lang.String</method-param>
        </method-params>
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>SpouseEJB</ejb-name>
        <method-intf>Local</method-intf>
        <method-name>getMaidenName</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>SpouseEJB</ejb-name>
        <method-intf>Local</method-intf>
        <method-name>setSocialSecurityNumber</method-name>
        <method-params>
          <method-param>java.lang.String</method-param>
        </method-params>
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>SpouseEJB</ejb-name>
        <method-intf>Local</method-intf>
        <method-name>setFirstName</method-name>
        <method-params>
          <method-param>java.lang.String</method-param>
        </method-params>
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>SpouseEJB</ejb-name>
        <method-intf>LocalHome</method-intf>
        <method-name>selectSpouseInfo</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>InfoEJB</ejb-name>
        <method-intf>Local</method-intf>
        <method-name>getZip</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>InfoEJB</ejb-name>
        <method-intf>LocalHome</method-intf>
        <method-name>remove</method-name>
        <method-params>
          <method-param>java.lang.Object</method-param>
        </method-params>
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>    
        <ejb-name>InfoEJB</ejb-name>
        <method-intf>LocalHome</method-intf>
        <method-name>create</method-name>
        <method-params>
          <method-param>java.lang.String</method-param>
          <method-param>java.lang.String</method-param>
          <method-param>java.lang.String</method-param>
          <method-param>java.lang.String</method-param>
          <method-param>java.lang.String</method-param>
        </method-params>
      </method>   
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>InfoEJB</ejb-name>
        <method-intf>Local</method-intf>
        <method-name>getStreet</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>InfoEJB</ejb-name>
        <method-intf>LocalHome</method-intf>
        <method-name>findByPrimaryKey</method-name>
        <method-params>
          <method-param>java.lang.String</method-param>
        </method-params>
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>InfoEJB</ejb-name>
        <method-intf>Local</method-intf>
        <method-name>setSpouse</method-name>
        <method-params>
          <method-param>com.sun.ts.tests.ejb.ee.pm.ejbql.schema.SpouseLocal</method-param>
        </method-params>
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>InfoEJB</ejb-name>
        <method-intf>Local</method-intf>
        <method-name>getSpouse</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>InfoEJB</ejb-name>
        <method-intf>Local</method-intf>
        <method-name>setZip</method-name>
        <method-params>
          <method-param>java.lang.String</method-param>
        </method-params>
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>InfoEJB</ejb-name>
        <method-intf>Local</method-intf>
        <method-name>getId</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>InfoEJB</ejb-name>
        <method-intf>Local</method-intf>
        <method-name>setState</method-name>
        <method-params>
          <method-param>java.lang.String</method-param>
        </method-params>
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>InfoEJB</ejb-name>
        <method-intf>Local</method-intf>
        <method-name>getCity</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>InfoEJB</ejb-name>
        <method-intf>Local</method-intf>
        <method-name>remove</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>InfoEJB</ejb-name>
        <method-intf>Local</method-intf>
        <method-name>setStreet</method-name>
        <method-params>
          <method-param>java.lang.String</method-param>
        </method-params>
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>InfoEJB</ejb-name>
        <method-intf>Local</method-intf>
        <method-name>getState</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>InfoEJB</ejb-name>
        <method-intf>Local</method-intf>
        <method-name>setCity</method-name>
        <method-params>
          <method-param>java.lang.String</method-param>
        </method-params>
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>InfoEJB</ejb-name>
        <method-intf>LocalHome</method-intf>
        <method-name>create</method-name>
        <method-params>
          <method-param>java.lang.String</method-param>
          <method-param>java.lang.String</method-param>
          <method-param>java.lang.String</method-param>
          <method-param>java.lang.String</method-param>
          <method-param>java.lang.String</method-param>
          <method-param>com.sun.ts.tests.ejb.ee.pm.ejbql.schema.SpouseLocal</method-param>
        </method-params>
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
  </assembly-descriptor>
</ejb-jar>

