<?xml version="1.0"?>
<!--

    Copyright (c) 2018 Oracle and/or its affiliates. All rights reserved.

    This program and the accompanying materials are made available under the
    terms of the Eclipse Public License v. 2.0, which is available at
    http://www.eclipse.org/legal/epl-2.0.

    This Source Code may also be made available under the following Secondary
    Licenses when the conditions for such availability set forth in the
    Eclipse Public License v. 2.0 are satisfied: GNU General Public License,
    version 2 with the GNU Classpath Exception, which is available at
    https://www.gnu.org/software/classpath/license.html.

    SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0

-->

    <!-- ############################################################## -->
    <!-- This build file should be used to record package signatures.   -->
    <!-- ############################################################## -->

    <!-- ############################################################## -->
    <!-- This build file must NOT be included in the TCK distribution.  -->
    <!-- ############################################################## -->

<project name="API Check Tool Record Only" default="usage" basedir=".">

    <import file="../../../../../../bin/xml/ts.common.props.xml"/> 
  
    <property environment="env"/>
    <property name="null" value="null"/>
    <property name="recorder.class"
              value="com.sun.ts.tests.signaturetest.RecorderFactory"/>
    <property name="tsharness" value="${ts.home}/lib/tsharness.jar"/>
    <property name="sigtestdev" value="${ts.home}/lib/sigtestdev.jar"/>
    <property name="recordapicheck" value="${ts.home}/lib/recordApiCheck.jar"/>
    <property name="apicheck" value="${ts.home}/lib/apiCheck.jar"/>
    <property name="pkg.list.file"
              value="${bin.dir}/sig-test-pkg-list.txt"/>
    <property name="sig.repository"
              value="${ts.home}/src/com/sun/ts/tests/signaturetest/signature-repository"/>
    <path id="cpath">
        <pathelement location="${apicheck}"/>
        <pathelement location="${recordapicheck}"/>
        <pathelement location="${sigtestdev}"/>
        <pathelement location="${tsharness}"/>
        <pathelement location="${ts.home}/classes"/>
        <pathelement location="${ts.classpath}"/>
    </path>

    <!-- ############################################################# -->
    <!-- usage target, this is the default target                      -->
    <!-- ############################################################# -->

    <target name="usage">
        <echo message=""/>
        <echo message="Usage: ant -Dsig.source=&lt;location.of.APIs&gt; \"/>
        <echo message="             -Dmap.file=&lt;map.file.path&gt; \"/>
        <echo message="             [-Drecorder.type=[apicheck|sigtest]] \"/>
        <echo message="             record.sig.batch"/>
        <echo message=""/>
        <echo message="&lt;location.of.apis&gt;      One or many jar files containing"/>
        <echo message="                        the target package API, separate"/>
        <echo message="                        jar files with &quot;:&quot; on Windows"/>
        <echo message="                        and &quot;;&quot; on other platforms"/>
        <echo message="&lt;map.file&gt;              The name and path to the map file"/>
        <echo message="                        that specifies which packages to record"/>
        <echo message="&lt;recroder.type&gt; Specifies which framework to use to record"/>
        <echo message="                      the API signatures.  'apicheck' is the default"/>
        <echo message=""/>
        <echo message="Usage: ant version"/>
        <echo message="  prints the version of API Check being used."/>
        <echo message=""/>
    </target>


    <!-- ############################################################# -->
    <!-- record.sig target, records the specified package's signatures -->
    <!-- ############################################################# -->

    <property name="sig.source" value="${null}"/>
    <property name="map.file" value="${null}"/>
    <property name="recorder.type" value="sigtest"/>

    <target name="set.props">
        <condition property="sig.source.null">
            <equals arg1="${sig.source}" arg2="${null}"/>
        </condition>
        <condition property="map.file.null">
            <equals arg1="${map.file}" arg2="${null}"/>
        </condition>
    </target>

    <target name="check.sig.source" if="sig.source.null">
        <fail message="Please set the &quot;sig.source&quot; property to an appropriate value."/>
    </target>

    <target name="check.map.file" if="map.file.null">
        <fail message="Please set the &quot;map.file&quot; property to an appropriate value."/>
    </target>

    <target name="check.props.batch"
            depends="set.props,check.sig.source,check.map.file"/>

    <target name="record.sig">
        <echo message="This target has been deprecated and no longer functions."/>
        <echo message="Use the 'record.sig.batch' target instead."/>
    </target>

    <target name="record.sig.batch" depends="check.props.batch">
        <echo message="record-build.xml: Running BatchSetup Class - Recording Signatures..."/>
        <echo message="record-build.xml:   sig source - ${sig.source}"/>
        <echo message="record-build.xml:   map file   - ${map.file}"/>
        <echo message="record-build.xml:   pkg file   - ${pkg.list.file}"/>
        <javac
            classpath="${sigtestdev}:${apicheck}:${recordapicheck}"
            srcdir="${ts.home}/src"
            includes="**/*Recorder*.java,**/PackageList.java"
            destdir="${ts.home}/classes"/>
        <java classname="${recorder.class}"
              fork="yes">
            <classpath refid="cpath"/>
            <classpath path="${ts.classpath}"/>
            <sysproperty key="recorder.type" value="${recorder.type}"/>
            <arg line="-classpath ${sig.source}"/>
            <arg line="-packagelist ${pkg.list.file}"/>
            <arg line="-sigmap ${map.file}"/>
            <arg line="-repository ${sig.repository}"/>
        </java>
    </target>

</project>
