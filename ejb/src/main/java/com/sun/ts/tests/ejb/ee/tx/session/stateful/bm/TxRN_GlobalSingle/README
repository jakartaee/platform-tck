#
# Copyright (c) 1995, 2020 Oracle and/or its affiliates. All rights reserved.
#
# This program and the accompanying materials are made available under the
# terms of the Eclipse Public License v. 2.0, which is available at
# http://www.eclipse.org/legal/epl-2.0.
#
# This Source Code may also be made available under the following Secondary
# Licenses when the conditions for such availability set forth in the
# Eclipse Public License v. 2.0 are satisfied: GNU General Public License,
# version 2 with the GNU Classpath Exception, which is available at
# https://www.gnu.org/software/classpath/license.html.
#
# SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
#

README file for globalTxSingle
------------------------------

Bean Managed Global Transaction tests for a single table.

Specification assertion under test: 
	17.3.2	 Local vs. global transaction 
        17.6.2.4 Container Managed Transactions - RequiresNew

17.3.2 An enterprise bean using bean-managed transaction demarcates global
transactions by using the jakarta.transaction.UserTransaction
interface. 

All updates to the resource managers between the
UserTransaction.begin() and UserTransaction.commit() methods are
performed in a global transaction.

17.6.2.4 If a client calls with a transaction contect, the Container
suspends the association of the transaction context with the current
thread, before starting the new transaction and invoking the business
method.  The Container resumes the suspended transaction association
after the business method and the new transaction has been completed.

Test Case(s):
Test that a TX_BEAN_MANAGED session stateful bean can
perform global transactions via the UserTransaction interface:
which include the following APIs:
        getUserTransaction() 
        begin()
        commit()
        rollback()
        getStatus()

Single table/single connection cases include:
o       Single table inserts and deletes followed by commit.
o       Single table inserts and deletes followed by rollback.
o       Tests which check the transaction status.

The test itself is made up of:
1 Client
1 TestTean, this bean:
        o       drives the tests and is TX_BEAN_MANAGED 
                (gets the UserTransaction) interface.
        o       acts as a client to the JDBC transactional bean (TxBean).
1 TxBean, this bean:
        o       is the JDBC transactional bean and is called by TestBean.

