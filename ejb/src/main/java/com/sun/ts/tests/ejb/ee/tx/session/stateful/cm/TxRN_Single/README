#
# Copyright (c) 1995, 2018 Oracle and/or its affiliates. All rights reserved.
#
# This program and the accompanying materials are made available under the
# terms of the Eclipse Public License v. 2.0, which is available at
# http://www.eclipse.org/legal/epl-2.0.
#
# This Source Code may also be made available under the following Secondary
# Licenses when the conditions for such availability set forth in the
# Eclipse Public License v. 2.0 are satisfied: GNU General Public License,
# version 2 with the GNU Classpath Exception, which is available at
# https://www.gnu.org/software/classpath/license.html.
#
# SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
#

README file for TxRN_Single
--------------------------

Container Managed Transaction tests for a single table.

Specification assertion under test: 
	17.6.2.4 Container Managed Transactions - RequiresNew 

The assertion:
The Container invokes an EJB method whose transaction attribute is set
to RequiresNew as follows:

	If a client invokes the EJB's method while the client is not
	associated with a transaction context, the Container
	automatically starts a new global transaction before
	delegating a method call to the EJB business method.  
	
	The Container automatically enlists all the resources accessed
	by the business method with the global transaction.  
	If the business method involves other EJBs, the Container
	passes the transaction context with the invocation.

	The Container attempts to commit the transaction when the business
	method has completed.  The Container performs the commit protocol
	before the method result is sent to the client.

Test Case(s):
These tests ensure that the Container provides the transaction
demarcation for the EJBs which are declared as using container
managed demarcation. The responsibilities for the Container are
described in section 17.6.2 of the Moscone specification.

Single table/single connection cases include:
        Perform Insert/Delete operations to a single table and ensure
        that these operations are commited automatically after each
        method completes.

The test itself is made up of:
1 Client
1 TestTean, this bean:
	o	drives the tests and is TX_BEAN_MANAGED 
	o	acts as a client to the JDBC transactional bean (TxBean).
1 TxBean, this bean:
	o	is the JDBC transactional bean and is called by TestBean.

