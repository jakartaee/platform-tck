#
# Copyright (c) 1995, 2020 Oracle and/or its affiliates. All rights reserved.
#
# This program and the accompanying materials are made available under the
# terms of the Eclipse Public License v. 2.0, which is available at
# http://www.eclipse.org/legal/epl-2.0.
#
# This Source Code may also be made available under the following Secondary
# Licenses when the conditions for such availability set forth in the
# Eclipse Public License v. 2.0 are satisfied: GNU General Public License,
# version 2 with the GNU Classpath Exception, which is available at
# https://www.gnu.org/software/classpath/license.html.
#
# SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
#

README file for TxM_Single
--------------------------

Container Managed Transaction tests for a single table.

Specification assertion under test: 
	Section 17.3.4 Enterprise beans using bean-managed transactions
	Section 17.6.1 Bean-managed transactions
        Section 17.6.2.5 Container Managed Transactions - Mandatory

The assertion:
The Container invokes an EJB method whose transaction attribute is set
to Supports as follows:

	A stateless session instance must commit all transactions,
	local and global, before a business method returns

	If a statless session instance starts a transaction in a business
	method, it must commit the transaction before the business method
	returns (this applies to both global and local transactions).

	If the client calls without a transaction context, the 
        Container throws the jakarta.transaction.TransactionRequiredException
        exception.

Test Case(s):
These tests ensure that the Container provides the transaction
demarcation for the EJBs which are declared as using container
managed demarcation.

Single table/single connection cases include:
        Access a TX_MANDATORY EJB without a global transaction context
        and ensure that this operation throws the
        jakarta.transaction.TransactionRequiredException exception.

The test itself is made up of:
1 Client
1 TestTean, this bean:
	o	drives the tests and is TX_BEAN_MANAGED 
	o	acts as a client to the JDBC transactional bean (TxBean).
1 TxBean, this bean:
	o	is the JDBC transactional bean and is called by TestBean.

