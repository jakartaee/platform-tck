<!--

    Copyright (c) 2018, 2019 Oracle and/or its affiliates. All rights reserved.

    This program and the accompanying materials are made available under the
    terms of the Eclipse Public License v. 2.0, which is available at
    http://www.eclipse.org/legal/epl-2.0.

    This Source Code may also be made available under the following Secondary
    Licenses when the conditions for such availability set forth in the
    Eclipse Public License v. 2.0 are satisfied: GNU General Public License,
    version 2 with the GNU Classpath Exception, which is available at
    https://www.gnu.org/software/classpath/license.html.

    SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0

-->

<project name="JSTL" basedir="." default="build">

	<!-- IMPORTS -->
	<import file="../../bin/xml/ts.common.props.xml" />

	<property name="deliverable.version" value="1.2" />
        <property name="deliverable.tck.version" value="1.2.0" />


	<target name="init">
		<mkdir dir="${deliverable.bundle.dir}/bin" />
		<mkdir dir="${deliverable.bundle.dir}/bin/xml/impl/none" />
		<mkdir dir="${deliverable.bundle.dir}/bin/xml/impl/glassfish" />
		<mkdir dir="${deliverable.bundle.dir}/classes" />
		<mkdir dir="${deliverable.bundle.dir}/dist" />
		<mkdir dir="${deliverable.bundle.dir}/weblib" />
		<mkdir dir="${deliverable.bundle.dir}/sql" />
		<mkdir dir="${deliverable.bundle.dir}/src" />
		<mkdir dir="${deliverable.bundle.dir}/docs"/>
		<mkdir dir="${deliverable.bundle.dir}/src/com/sun/ts/lib/porting" />

	</target>

	<target name="copyinstall">
		<copy tofile="${deliverable.bundle.dir}/bin/tssql.stmt" file="${ts.home}/install/${deliverable.name.lower}/bin/jstl-sql.properties" />
		<copy todir="${deliverable.bundle.dir}/weblib" includeEmptyDirs="no">
			<fileset dir="${lib.dir}" includes="jstltck-common.jar" />
		</copy>

		<copy todir="${deliverable.bundle.dir}/bin/xml/impl/none" overwrite="true">
			<fileset dir="${common.bin.dir}/xml/impl/none" includes="*.xml" />
		</copy>

		<copy todir="${deliverable.bundle.dir}/bin/xml/impl/glassfish" overwrite="true">
			<fileset dir="${common.bin.dir}/xml/impl/glassfish" includes="*.xml" />
		</copy>

		<copy todir="${deliverable.bundle.dir}/bin" includeEmptyDirs="no">
			<fileset dir="${ts.home}/install/${deliverable.name.lower}/bin" includes="**/*" excludes="**/workspace.xml" />
		</copy>

		<copy todir="${deliverable.bundle.dir}/sql" includeEmptyDirs="no">
			<fileset dir="${ts.home}/sql" includes="**/*jstl*" />
		</copy>

		<copy todir="${deliverable.bundle.dir}/src">
			<fileset dir="${ts.home}/install/${deliverable.name.lower}/other" includes="testsuite.jtt" />
		</copy>
		<copy todir="${deliverable.bundle.dir}/docs" includeEmptyDirs="no">
              <fileset dir="${ts.home}/install/jstl/docs" excludes="**svn**" />
	   </copy>
           <!-- NOTICE will be EPL or EFTL specific: TBD-->
           <!--copy todir="${deliverable.bundle.dir}" includeEmptyDirs="no">
              <fileset dir="${ts.home}" includes="NOTICE" />
           </copy-->

	   <copy tofile="${deliverable.bundle.dir}/LICENSE.md" file="${ts.home}/${licensefile}">
	  </copy>
	</target>

	<target name="jte.cleanup">
		<props.sanitizer file="${basedir}/${deliverable.bundle.dir}/bin/ts.jte" quiet="true">
			<property name="webServerHost" value="" />
			<property name="webServerPort" value="" />
			<property name="webServerHome" value="" />
			<property name="impl.vi" value="" />
			<property name="impl.vi.deploy.dir" value="" />
			<property name="impl.deploy.timeout.multiplier" value="" />
			<property name="jstl.db.name" value="" />
			<property name="jstl.db.server" value="" />
			<property name="jstl.db.port=" value="" />
			<property name="jstl.db.url=" value="" />
			<property name="jstl.db.driver=" value="" />
			<property name="jstl.db.user=" value="" />
			<property name="jstl.db.password=" value="" />
			<property name="jdbc.classes=" value="" />
			<property name="jspservlet.classes=" value="" />
			<property name="jstl.classes=" value="" />
			<property name="sigTestClasspath=" value="" />
		</props.sanitizer>
	</target>

	<target name="build" depends="init">
		<antcall target="copyinstall" />
		<antcall target="jte.cleanup" />

		<!-- the classes directory -->
		<copy todir="${deliverable.bundle.dir}/classes" includeEmptyDirs="no">
			<fileset dir="${ts.home}/classes" includes="com/sun/ts/tests/jstl/**/*.class,
                     com/sun/ts/tests/common/webclient/**/*.class,
                     com/sun/ts/tests/common/vehicle/**/*.class,
                     com/sun/ts/tests/signaturetest/*.class,
            com/sun/ts/tests/signaturetest/jstl/*.class" />
		</copy>

		<!-- the lib directory -->
		<copy todir="${deliverable.bundle.dir}/lib" includeEmptyDirs="no">
			<fileset dir="${ts.home}/lib" includes="commons*jar,jstltck.jar" />
		</copy>

		<!-- copy relevant DTDs -->
		<copy todir="${deliverable.bundle.dir}/lib/dtds" includeEmptyDirs="no">
			<fileset dir="${ts.home}/lib/dtds" includes="web-app*,web-jsptaglibrary*" />
		</copy>

		<!-- copy relevant Schemas -->
		<copy todir="${deliverable.bundle.dir}/lib/schemas" includeEmptyDirs="no">
			<fileset dir="${ts.home}/lib/schemas" includes="web-app*xsd,web-jsptaglibrary*xsd,
                     XMLSchema.xsd,
                     xml.xsd,
                     j2ee_1_4.xsd,
                     javaee*xsd,
                     jsp*xsd,
                     j2ee_web_services_client_1_1.xsd,
            j2ee_web_services_client*xsd" />
		</copy>

		<!-- the war files in the dist directory
        <copy todir="${deliverable.bundle.dir}/dist" includeEmptyDirs="no">
            <fileset dir="${ts.home}/dist" includes="**/*.war"/>
        </copy> -->

		<!-- the specific deliverable source directories -->
		<copy todir="${deliverable.bundle.dir}/src" includeEmptyDirs="no">
			<fileset dir="${ts.home}/src" includes="com/sun/ts/tests/jstl/**/*,
                     com/sun/ts/tests/signaturetest/*,
                     com/sun/ts/tests/signaturetest/jstl/**/*,
                     com/sun/ts/tests/signaturetest/signature-repository/jakarta.servlet.jsp.jstl.*,
                     com/sun/ts/tests/common/webclient/**/*,
                     web/jstl/**/*" excludes="com/sun/ts/tests/signaturetest/*Record*,
            com/sun/ts/tests/signaturetest/*record*" />
		</copy>

		<!-- the com/sun/ts/lib file -->
		<copy file="${ts.home}/src/com/sun/ts/lib/build.xml" todir="${deliverable.bundle.dir}/src/com/sun/ts/lib" />

		<!-- the com/sun/ts/lib/porting directory -->
		<copy todir="${deliverable.bundle.dir}/src/com/sun/ts/lib/porting" includeEmptyDirs="no">
			<fileset dir="${ts.home}/src/com/sun/ts/lib/porting" includes="TSURLInterface.java, TSURL.java" />
		</copy>
		<antcall target="mvn"/>
        <!--
            <antcall target="create.doc.bundle" />
        -->
		<!-- copy the commons HttpClient and dependent as well as TCK specific JAR files -->
		<copy todir="${deliverable.bundle.dir}/lib">
			<fileset dir="${ts.home}/lib" includes="commons-*.jar,jstltck*.jar" />
		</copy>
		<!-- delete uneeded JAR files from the deliverable lib directory -->
		<delete quiet="true">
			<fileset dir="${deliverable.bundle.dir}/lib" includes="*jaxb*,apiCheck.jar" />
		</delete>

	</target>
	<target name="mvn">
         <exec dir="${ts.home}/user_guides/${deliverable.dir}" executable="mvn"/>
         <copy toDir="${deliverable.bundle.dir}/docs/">
         <fileset dir="${ts.home}/user_guides/${deliverable.dir}/target"
                 includes="staging/*.html,
                generated-docs/*.pdf"/>
         </copy>
	</target>

	<target name="create.doc.bundle">
              <delete file="${deliverable.bundle.dir}/../${deliverable.name}tck-doc*.zip"/>
              <zip zipfile="${deliverable.bundle.dir}/../${deliverable.name}tck-doc-${deliverable.version}_${time.stamp.bundle.string}.zip">
                <zipfileset dir="${ts.home}/install/${deliverable.dir}/docs"
                        includes="**/*.html, **/*.gif, **/*.css"
                        excludes="*ReleaseNotes*.html"/>
              </zip>
        </target>
</project>
