<!--

    Copyright (c) 2018, 2019 Oracle and/or its affiliates. All rights reserved.

    This program and the accompanying materials are made available under the
    terms of the Eclipse Public License v. 2.0, which is available at
    http://www.eclipse.org/legal/epl-2.0.

    This Source Code may also be made available under the following Secondary
    Licenses when the conditions for such availability set forth in the
    Eclipse Public License v. 2.0 are satisfied: GNU General Public License,
    version 2 with the GNU Classpath Exception, which is available at
    https://www.gnu.org/software/classpath/license.html.

    SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0

-->

<project name="CONCURRENCY" basedir="." default="build">

    <!-- IMPORTS -->
    <import file="../../bin/xml/ts.common.props.xml"/>
    
    <property name="deliverable.version"           value="1.0"/>
    <property name="deliverable.tck.version"           value="1.0.0"/>

	<target name="init">
		<mkdir dir="${deliverable.bundle.dir}/bin"/>
		<mkdir dir="${deliverable.bundle.dir}/bin/xml"/>
		<mkdir dir="${deliverable.bundle.dir}/bin/xml/impl/glassfish"/>
		<mkdir dir="${deliverable.bundle.dir}/bin/xml/impl/glassfish/templates"/>
		<mkdir dir="${deliverable.bundle.dir}/classes"/>
		<mkdir dir="${deliverable.bundle.dir}/dist"/>
		<mkdir dir="${deliverable.bundle.dir}/lib"/>
		<mkdir dir="${deliverable.bundle.dir}/src"/>
		<mkdir dir="${deliverable.bundle.dir}/docs"/>
		<mkdir dir="${deliverable.bundle.dir}/tmp"/>
	</target>

	<target name="copyinstall">
          <copy todir="${deliverable.bundle.dir}/bin" includeEmptyDirs="no">
               <fileset dir="${ts.home}/install/${deliverable.name.lower}/bin"
                    includes="**/*"
                    excludes="**/*log, **/workspace.xml"/>
          </copy>

	  <copy todir="${deliverable.bundle.dir}/docs" includeEmptyDirs="no">
		<fileset dir="${ts.home}/install/${deliverable.name.lower}/docs" includes="ReleaseNotes.html"/>
	  </copy>

          <copy todir="${deliverable.bundle.dir}/lib" includeEmptyDirs="no">
            <fileset dir="${ts.home}/lib"
                    includes="dtds/"/>
          </copy>

          <copy todir="${deliverable.bundle.dir}/bin/xml/impl/tomcat" includeEmptyDirs="no">
            <fileset dir="${common.bin.dir}/xml/impl/tomcat"
                    includes="**/*"/>
          </copy>

          <copy todir="${deliverable.bundle.dir}/bin/xml/impl/glassfish/templates" includeEmptyDirs="no">
            <fileset dir="${common.bin.dir}/xml/impl/glassfish/templates"
                    includes="password.template"/>
          </copy>

          <copy todir="${deliverable.bundle.dir}/lib" includeEmptyDirs="no">
            <fileset dir="${ts.home}/lib" 
                    includes="schemas/"/>
          </copy>        

          <copy todir="${deliverable.bundle.dir}/lib">
            <fileset dir="${ts.home}/lib"
                includes="jaxb-*.jar,
                          ${deliverable.name.lower}tck.jar,
                          sigtest.jar"/>
          </copy>

	  <copy todir="${deliverable.bundle.dir}/src">
		<fileset dir="${ts.home}/install/${deliverable.name.lower}/other" 
			includes="testsuite.jtt, vehicle.properties"/>
	  </copy>
          <!-- NOTICE will be EPL or EFTL specific: TBD-->
          <!--copy todir="${deliverable.bundle.dir}" includeEmptyDirs="no">
                <fileset dir="${ts.home}" includes="NOTICE" />
          </copy-->

          <copy tofile="${deliverable.bundle.dir}/LICENSE.md" file="${ts.home}/${licensefile}">
	  </copy>
	</target>

	<target name="jte.cleanup">
            <props.sanitizer file="${basedir}/${deliverable.bundle.dir}/bin/ts.jte" quiet="true">
                <property name="webServerHost" value="localhost" />
                <property name="webServerPort" value="8080" />
                <property name="webcontainer.home" value="" />
                <property name="concurrency.classes" value="" />
                <property name="impl.vi" value="glassfish" />
                <property name="impl.vi.deploy.dir" value="$${webcontainer.home}/domains/domain1/autodeploy" />
            </props.sanitizer>
        </target>

	<target name="build" depends="init">
		<antcall target="copyinstall"/>
        	<antcall target="jte.cleanup"/>

		<!-- the classes directory -->
		<!-- ********************* -->
		<!-- Also include any handler.xml files found since -->
		<!-- these are to configure the handlers -->
		<!-- ********************* -->
		<copy todir="${deliverable.bundle.dir}/classes" includeEmptyDirs="no">
                     <fileset dir="${ts.home}/classes"
			includes="
		          com/sun/ts/tests/common/vehicle/*.class,
		          com/sun/ts/tests/common/vehicle/standalone/*.class,
		          com/sun/ts/tests/common/vehicle/servlet/*.class,
		          com/sun/ts/tests/common/vehicle/web/*.class,
		          com/sun/ts/tests/concurrency/**/*.class,
		          com/sun/ts/tests/signaturetest/*.class,
		          com/sun/ts/tests/signaturetest/concurrency/*.class,
		          com/sun/ts/lib/porting/**/*TSURL*.class,
		          com/sun/ts/lib/implementation/sun/common/**/SunRIURL.class"
			excludes="
                    com/sun/ts/tests/signaturetest/*Record*,
                    com/sun/ts/tests/signaturetest/*record*,
			     **/generated_classes/**"/>
		</copy>

		<!-- maintain dist class hierarchy of test directory wars -->
		<copy todir="${deliverable.bundle.dir}/dist" includeEmptyDirs="yes">
			<fileset dir="${ts.home}/dist" includes="com/sun/ts/tests/concurrency/**/*.war"/>
		</copy>

		<!-- the specific deliverable source directories -->
		<copy todir="${deliverable.bundle.dir}/src" includeEmptyDirs="no">
			<fileset dir="${ts.home}/src"
			includes="
                   com/sun/ts/tests/concurrency/build.xml,
                   com/sun/ts/tests/concurrency/api/**/*,
                   com/sun/ts/tests/concurrency/common/**/*,
		   com/sun/ts/tests/concurrency/spec/build.xml,
		   com/sun/ts/tests/concurrency/spec/ContextService/build.xml,
		   com/sun/ts/tests/concurrency/spec/ContextService/contextPropagate_servlet/*,
		   com/sun/ts/tests/concurrency/spec/ManagedExecutorService/build.xml,
		   com/sun/ts/tests/concurrency/spec/ManagedExecutorService/inheritedapi/*,
		   com/sun/ts/tests/concurrency/spec/ManagedExecutorService/managed_servlet/**/*,
		   com/sun/ts/tests/concurrency/spec/ManagedScheduledExecutorService/build.xml,
		   com/sun/ts/tests/concurrency/spec/ManagedScheduledExecutorService/inheritedapi_servlet/*,
		   com/sun/ts/tests/concurrency/spec/ManagedScheduledExecutorService/managed/build.xml,
		   com/sun/ts/tests/concurrency/spec/ManagedScheduledExecutorService/managed/forbiddenapi_servlet/*,
		   com/sun/ts/tests/concurrency/spec/ManagedThreadFactory/build.xml,
		   com/sun/ts/tests/concurrency/spec/ManagedThreadFactory/apitests/*,
		   com/sun/ts/tests/concurrency/spec/ManagedThreadFactory/context_servlet/*,
                   com/sun/ts/tests/signaturetest/signature-repository/jakarta.enterprise.concurrent.*,
                   com/sun/ts/tests/signaturetest/*,
                   com/sun/ts/tests/signaturetest/concurrency/*,
                   com/sun/ts/tests/common/vehicle/*,
                   com/sun/ts/tests/common/vehicle/standalone/*,
                   ${lib.pkg.dir}/deliverable/concurrency/*,
                   com/sun/ts/lib/porting/**/*TSURL*,
                   com/sun/ts/lib/implementation/sun/common/**/SunRIURL*"
			excludes="
                   **/*log,
                   **/*wsappclient*,
                   **/*wsejb*,
                   **/*wsservlet*,
                   **/*ear*,
                   **/*war*,
                   **/javaEE*,
		   **/jsp_vehicle_web.xml,
		   **/ejb_vehicle_web.xml,
                   com/sun/ts/tests/signaturetest/*Record*,
                   com/sun/ts/tests/signaturetest/*record*,
                   com/sun/ts/tests/signaturetest/concurrency/*record*"/>
		</copy>
		<antcall target="mvn"/>
        <!--
		  <antcall target="create.doc.bundle"/>
        -->
	</target>
        <target name="mvn">
         <exec dir="${ts.home}/user_guides/${deliverable.dir}" executable="mvn"/>
         <copy toDir="${deliverable.bundle.dir}/docs/">
         <fileset dir="${ts.home}/user_guides/${deliverable.dir}/target"
                 includes="staging/*.html,
                	generated-docs/*.pdf"/>
         </copy>
	</target>
        <target name="create.doc.bundle">
              <delete file="${deliverable.bundle.dir}/../${deliverable.name}tck-doc*.zip"/>
              <zip zipfile="${deliverable.bundle.dir}/../${deliverable.name}tck-doc-${deliverable.version}_${time.stamp.bundle.string}.zip">
                <zipfileset dir="${ts.home}/install/${deliverable.dir}/docs"
                        includes="**/*.html, **/*.gif, **/*.css"
                        excludes="*ReleaseNotes*.html"/>
              </zip>
        </target>
</project>
