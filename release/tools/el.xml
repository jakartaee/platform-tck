<!--

    Copyright (c) 2018, 2021 Oracle and/or its affiliates and others.
    All rights reserved.

    This program and the accompanying materials are made available under the
    terms of the Eclipse Public License v. 2.0, which is available at
    http://www.eclipse.org/legal/epl-2.0.

    This Source Code may also be made available under the following Secondary
    Licenses when the conditions for such availability set forth in the
    Eclipse Public License v. 2.0 are satisfied: GNU General Public License,
    version 2 with the GNU Classpath Exception, which is available at
    https://www.gnu.org/software/classpath/license.html.

    SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0

-->

<project name="EL" basedir="." default="build">
    
    <!-- IMPORTS -->
    <import file="../../bin/xml/ts.common.props.xml"/>
    
    <property name="deliverable.version" value="4.0"/>
    <property name="deliverable.tck.version" value="4.0.1"/>

    <target name="init">
        <mkdir dir="${deliverable.bundle.dir}/bin"/>
        <mkdir dir="${deliverable.bundle.dir}/classes"/>
        <mkdir dir="${deliverable.bundle.dir}/src"/>
        <mkdir dir="${deliverable.bundle.dir}/src/com/sun/ts/lib/porting"/>
    </target>
    
    <target name="copyinstall">
        <copy todir="${deliverable.bundle.dir}/bin" includeEmptyDirs="no">
            <fileset dir="${ts.home}/install/${deliverable.name.lower}/bin"
                     includes="**/*"
                     excludes="**/workspace.xml"/>
        </copy>
        
        <copy todir="${deliverable.bundle.dir}/src">
            <fileset dir="${ts.home}/install/${deliverable.name.lower}/other"
                     includes="testsuite.jtt, vehicle.properties"/>
        </copy>
	<copy todir="${deliverable.bundle.dir}/docs" includeEmptyDirs="no">
              <fileset dir="${ts.home}/internal/docs/el" excludes="**svn**" />
        </copy>
        <!-- NOTICE will be EPL or EFTL specific: TBD-->
        <!--copy todir="${deliverable.bundle.dir}" includeEmptyDirs="no">
            <fileset dir="${ts.home}" includes="NOTICE" />
        </copy-->
	<copy tofile="${deliverable.bundle.dir}/LICENSE.md" file="${ts.home}/${licensefile}">
	</copy>
    </target>
	
	<target name="jte.cleanup">
			<props.sanitizer file="${basedir}/${deliverable.bundle.dir}/bin/ts.jte" quiet="true">
				<property name="el.classes" value="" />
			</props.sanitizer>
		</target>
    
    <target name="build" depends="init">
        <antcall target="copyinstall"/>
    	<antcall target="jte.cleanup"/>
        
        <!-- the classes directory -->
        <copy todir="${deliverable.bundle.dir}/classes" includeEmptyDirs="no">
            <fileset dir="${ts.home}/classes"
                     includes="com/sun/ts/tests/el/**/*.class,
                     com/sun/ts/tests/common/el/**/*.class,
                     com/sun/ts/tests/common/vehicle/**/*.class,
                     com/sun/ts/lib/porting/TSURL.class,
                     com/sun/ts/lib/porting/TSURLInterface.class,
                     com/sun/ts/tests/signaturetest/*.class,
                     com/sun/ts/tests/signaturetest/el/**/*"
                     excludes="com/sun/ts/tests/signaturetest/**/*EE*"/>
        </copy>
        
        <!-- the lib directory -->
        <copy todir="${deliverable.bundle.dir}/lib" includeEmptyDirs="no">
            <fileset dir="${ts.home}/lib"
	             excludes="dtds/*, schemas/*"/>
        </copy>

        <!-- the specific deliverable source directories -->
        <copy todir="${deliverable.bundle.dir}/src" includeEmptyDirs="no">
            <fileset dir="${ts.home}/src"
                     includes="com/sun/ts/tests/el/**/*,
                     com/sun/ts/tests/common/el/**/*,
                     com/sun/ts/tests/signaturetest/signature-repository/jakarta.el.*,
                     com/sun/ts/tests/signaturetest/*,
                     com/sun/ts/tests/signaturetest/el/**/*,
                     ${lib.pkg.dir}/deliverable/el/*"
                     excludes= "**/harness/**,
                     com/sun/ts/tests/signaturetest/*Record*,
            com/sun/ts/tests/signaturetest/*record*"/>
        </copy>
        
        <!-- the com/sun/ts/lib file -->
        <copy file="${ts.home}/src/com/sun/ts/lib/build.xml" 
              todir="${deliverable.bundle.dir}/src/com/sun/ts/lib"/>
        
        <!-- the com/sun/ts/lib/porting directory -->
        <copy todir="${deliverable.bundle.dir}/src/com/sun/ts/lib/porting" 
              includeEmptyDirs="no">
            <fileset dir="${ts.home}/src/com/sun/ts/lib/porting" 
                     includes="TSURLInterface.java,TSURL.java"/>
        </copy>
        
        <!-- the com/sun/ts/lib/implementation/sun/common file -->
        <copy file="${ts.home}/src/com/sun/ts/lib/implementation/sun/common/SunRIURL.java" 
              todir="${deliverable.bundle.dir}/src/com/sun/ts/lib/implementation/sun/common"/>
        
        <!-- delete uneeded files from the deliverable lib directory -->
        <delete quiet="false">
            <fileset dir="${deliverable.bundle.dir}/lib" 
                     includes="dtds, schemas, apiCheck.jar,recordApiCheck.jar,*jax*,
                     sigtestdev.jar, saxpath.jar"/>
        </delete>
        <antcall target="mvn"/>
        <!--
		  <antcall target="create.doc.bundle"/>
        -->
    </target>
        <target name="mvn">
         <exec dir="${ts.home}/user_guides/${deliverable.dir}" executable="mvn">
         	<arg line="-B -Dmaven.repo.local=${ts.home}/.m2/repository"/>
     	 </exec>
         <copy toDir="${deliverable.bundle.dir}/docs/">
         <fileset dir="${ts.home}/user_guides/${deliverable.dir}/target"
                         includes="staging/*.html,staging/css/*,staging/img/*,
                        generated-docs/*.pdf"/>
                </copy>
                <move todir="${deliverable.bundle.dir}/docs/pdf-usersguide">
                    <fileset dir="${deliverable.bundle.dir}/docs/generated-docs"/>
                </move>
                <move todir="${deliverable.bundle.dir}/docs/html-usersguide">
                    <fileset dir="${deliverable.bundle.dir}/docs/staging"/>
                </move>
        </target>

	<target name="create.doc.bundle">
              <delete file="${deliverable.bundle.dir}/../${deliverable.name}tck-doc*.zip"/>
              <zip zipfile="${deliverable.bundle.dir}/../${deliverable.name}tck-doc-${deliverable.version}_${time.stamp.bundle.string}.zip">
                <zipfileset dir="${ts.home}/internal/docs/${deliverable.dir}"
                        includes="**/*.html, **/*.gif, **/*.css"
                        excludes="*ReleaseNotes*.html"/>
              </zip>
        </target>
</project>
