<!--

    Copyright (c) 2018, 2019 Oracle and/or its affiliates. All rights reserved.

    This program and the accompanying materials are made available under the
    terms of the Eclipse Public License v. 2.0, which is available at
    http://www.eclipse.org/legal/epl-2.0.

    This Source Code may also be made available under the following Secondary
    Licenses when the conditions for such availability set forth in the
    Eclipse Public License v. 2.0 are satisfied: GNU General Public License,
    version 2 with the GNU Classpath Exception, which is available at
    https://www.gnu.org/software/classpath/license.html.

    SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0

-->

<project name="JASPIC" basedir="." default="build">
    
    <!-- IMPORTS -->
    <import file="../../bin/xml/ts.common.props.xml"/>
    
    <ts.taskdef name="getportingclasses" 
                classname="com.sun.ant.taskdefs.common.GetPortingClasses"/>

    <property name="deliverable.version" value="1.1"/>
    <property name="deliverable.tck.version" value="1.1.1"/>
    
    <target name="init">
        <mkdir dir="${deliverable.bundle.dir}/bin"/>
        <mkdir dir="${deliverable.bundle.dir}/classes"/>
        <mkdir dir="${deliverable.bundle.dir}/dist"/>
        <mkdir dir="${deliverable.bundle.dir}/lib/dtds"/>
        <mkdir dir="${deliverable.bundle.dir}/src"/>
	<mkdir dir="${deliverable.bundle.dir}/docs"/>
        <mkdir dir="${deliverable.bundle.dir}/src/com/sun/ts/lib/porting"/>
    </target>
    
    <target name="copyinstall">
        <copy todir="${deliverable.bundle.dir}/bin" includeEmptyDirs="no">
            <fileset dir="${ts.home}/install/${deliverable.name.lower}/bin"
                     includes="**/*"/>
        </copy>


        <!-- copy ts_home/bin/xml/impl/glassfish over -->
        <copy todir="${deliverable.bundle.dir}/bin/xml/impl/glassfish" overwrite="true">
            <fileset dir="${common.bin.dir}/xml/impl/glassfish" includes="**/*"/>
        </copy>

        <!-- copy ts_home/install/jaspic/bin/xml/impl/glassfish over -->

        <copy todir="${deliverable.bundle.dir}/src">
            <fileset dir="${ts.home}/install/${deliverable.name.lower}/other" 
                     includes="testsuite.jtt"/>
        </copy>

        <copy todir="${deliverable.bundle.dir}/src/com/sun/ts/tests/jaxws/common/xml">
            <fileset dir="${ts.home}/src/com/sun/ts/tests/jaxws/common/xml" 
                     includes="*"/>
        </copy>

        <copy todir="${deliverable.bundle.dir}/src">
            <fileset dir="${ts.home}/install/${deliverable.name.lower}/other" 
                     includes="testsuite.jtt, vehicle.properties"/>
        </copy>
        <copy todir="${deliverable.bundle.dir}/docs" includeEmptyDirs="no">
              <fileset dir="${ts.home}/install/jaspic/docs" excludes="**svn**" />
	</copy>
        <!-- NOTICE will be EPL or EFTL specific: TBD-->
        <!--copy todir="${deliverable.bundle.dir}" includeEmptyDirs="no">
              <fileset dir="${ts.home}" includes="NOTICE" />
        </copy-->
	<copy tofile="${deliverable.bundle.dir}/LICENSE.md" file="${ts.home}/${licensefile}">
	</copy>
    </target>


    <!--  
          reset any properties in our ts.jte.  this is needed because when building 
          a bundle, we have to set ts.jte to accomodate our local environment but we
          don't want our local settings being bundled up for the final binaries so 
          this will sanitize the ts.jte to ensure a clean ts.jte in our bundle.
     -->
    <target name="jte.cleanup">
        <props.sanitizer file="${basedir}/${deliverable.bundle.dir}/bin/ts.jte" quiet="true">
             <property name="jaspic.home" value="/glassfish4/glassfish" />
             <property name="orb.host" value="localhost" />
             <property name="harness.log.traceflag" value="false" />
        </props.sanitizer>
    </target>

    
    <target name="build" depends="init">
        <antcall target="copyinstall"/>
        <antcall target="jte.cleanup"/>

        <!-- the classes directory -->
        <copy todir="${deliverable.bundle.dir}/classes" includeEmptyDirs="no">
            <fileset dir="${ts.home}/classes"
                     includes="com/sun/ts/tests/jaspic/spi/core/*.class,
                     com/sun/ts/tests/jaspic/spi/authstatus/**/*.class,
                     com/sun/ts/tests/jaspic/spi/soap/*.class,
                     com/sun/ts/tests/jaspic/spi/soap/**/*.class,
                     com/sun/ts/tests/jaspic/spi/servlet/*.class,
                     com/sun/ts/tests/jaspic/spi/soapuptoken/*.class,
                     com/sun/ts/tests/jaspic/spi/soapuptoken/**/*.class,
                     com/sun/ts/tests/jaspic/spi/**/*.class,
                     com/sun/ts/tests/jaspic/util/*.class,
                     com/sun/ts/tests/jaspic/tssv/**/*.class,
                     com/sun/ts/tests/common/vehicle/**/*.class,
                     com/sun/ts/lib/porting/TSURL.class,
                     com/sun/ts/lib/porting/TSURLInterface.class,
                     com/sun/ts/lib/deliverable/*.class,
                     com/sun/ts/lib/deliverable/cts/*.class,
                     com/sun/ts/lib/deliverable/cts/deploy/*.class,
                     com/sun/ts/lib/deliverable/jaspic/*.class,
                     com/sun/ts/lib/implementation/sun/common/glassfish/*.class,
                     com/sun/ts/lib/implementation/sun/javaee/**/*.class,
                     com/sun/ts/tests/signaturetest/*.class,
                     com/sun/ts/tests/signaturetest/jaspic/**/*"

                     excludes="com/sun/ts/tests/signaturetest/*.txt,
                         com/sun/ts/tests/signaturetest/*.sh,
                         com/sun/ts/tests/signaturetest/README" />
            
        </copy>
        
        <!-- the lib directory -->
        <copy todir="${deliverable.bundle.dir}/lib" includeEmptyDirs="no">
            <fileset dir="${ts.home}/lib" includes="tssv.jar,jaspic.jar,jaxb-api.jar,jaxb-impl.jar,jaxb-xjc.jar,gf-196-hookv3.jar"/>
        </copy>
        
        <!-- copy relevant DTDs -->
        <copy todir="${deliverable.bundle.dir}/lib/dtds" includeEmptyDirs="no">
            <fileset dir="${ts.home}/lib/dtds" 
                     includes="*"/>
        </copy>
        
        <!-- copy relevant Schemas -->
        <copy todir="${deliverable.bundle.dir}/lib/schemas" 
              includeEmptyDirs="no">
            <fileset dir="${ts.home}/lib/schemas"
                     includes="*"/>
        </copy>
        
        <!-- copy the ReleaseNotes to TOP level -->
        <copy todir="${deliverable.bundle.dir}/..">
            <fileset dir="${ts.home}/install/${deliverable.dir}/docs"
                     includes="ReleaseNotes*.html"/>
        </copy>

        <!-- copy over the jaspictck/docs directory content -->
        <copy todir="${deliverable.bundle.dir}/docs">
            <fileset dir="${ts.home}/install/${deliverable.dir}/docs"
                     includes="**/**"
                     excludes="old_releasenotes"/>
        </copy>

        <!-- the war files in the dist directory -->
        <copy todir="${deliverable.bundle.dir}/dist" includeEmptyDirs="no">
            <fileset dir="${ts.home}/dist"
                     includes="com/sun/ts/tests/jaspic/**/*.war,
                               com/sun/ts/tests/jaspic/**/*.xml,
                               com/sun/ts/tests/jaspic/**/*.ear" 
                     excludes="com/sun/ts/tests/jaspic/spi/baseline/*.ear"/>
        </copy>
        
        <!-- the specific deliverable source directories -->
        <copy todir="${deliverable.bundle.dir}/src" includeEmptyDirs="no">
            <fileset dir="${ts.home}/src"
                     includes="com/sun/ts/tests/jaspic/**/*,
                         com/sun/ts/tests/common/vehicle/**/*, 
                         com/sun/ts/lib/deliverable/*, 
                         com/sun/ts/lib/deliverable/cts/*, 
                         com/sun/ts/lib/deliverable/cts/deploy/**/*,
                         com/sun/ts/lib/porting/**/*,
                         com/sun/ts/lib/deliverable/jaspic/*, 
                         com/sun/ts/lib/implementation/javaee/**/*, 
                         com/sun/ts/tests/build.xml,
                         com/sun/ts/tests/signaturetest/*,
                         com/sun/ts/tests/signaturetest/jaspic/**/*,
                         com/sun/ts/tests/signaturetest/signature-repository/jakarta.security.auth*"
                     excludes="**/.svn/*,
                         com/sun/ts/tests/signaturetest/*Record*,
                         com/sun/ts/tests/signaturetest/*record*"/>
        </copy>
        
        <!-- the com/sun/ts/lib file -->
        <copy file="${ts.home}/src/com/sun/ts/lib/build.xml" 
              todir="${deliverable.bundle.dir}/src/com/sun/ts/lib"/>

        <!-- the com/sun/ts/lib/porting directory -->
        <copy todir="${deliverable.bundle.dir}/src/com/sun/ts/lib/porting" 
              includeEmptyDirs="no">
            <fileset dir="${ts.home}/src/com/sun/ts/lib/porting" 
                     includes="TSDeploymentInterface2.java,
                               DeploymentInfo.java,
                               TSDeploymentException.java,
                               TSURL.java,
                               TSURLInterface.java"/>
        </copy>
        
        <!-- the com/sun/ts/lib/implementation/sun/common file -->
        <copy file="${ts.home}/src/com/sun/ts/lib/implementation/sun/common/SunRIURL.java" 
              todir="${deliverable.bundle.dir}/src/com/sun/ts/lib/implementation/sun/common"/>
        
        <!-- the com/sun/ts/lib/implementation/sun/javaee/runtime dir -->
        <copy todir="${deliverable.bundle.dir}/src/com/sun/ts/lib/implementation/sun/javaee/runtime" 
              includeEmptyDirs="no">
            <fileset dir="${ts.home}/src/com/sun/ts/lib/implementation/sun/javaee/runtime" 
                     includes="**/**"/>
        </copy>

        <antcall target="mvn"/>

        <!--antcall target="javadoc"/-->
        <!--
		  <antcall target="create.doc.bundle"/>
        -->
        <!-- delete JAR files that are not relevant for jaspic -->
        <delete quiet="true">
            <fileset dir="${deliverable.bundle.dir}/lib"
                     includes="*jaxb*,apiCheck.jar"/>
        </delete>
    </target>
    <target name="mvn">
        <exec dir="${ts.home}/user_guides/${deliverable.dir}" executable="mvn"/>
        <copy toDir="${deliverable.bundle.dir}/docs/">
        <fileset dir="${ts.home}/user_guides/${deliverable.dir}/target"
                 includes="staging/*.html,
                generated-docs/*.pdf"/>
        </copy>
    </target>
    <target name="create.doc.bundle">
              <delete file="${deliverable.bundle.dir}/../${deliverable.name}tck-doc*.zip"/>
              <zip zipfile="${deliverable.bundle.dir}/../${deliverable.name}tck-doc-${deliverable.version}_${time.stamp.bundle.string}.zip">
                <zipfileset dir="${ts.home}/install/${deliverable.dir}/docs"
                        includes="**/*.html, **/*.gif, **/*.css"
                        excludes="*ReleaseNotes*.html"/>
              </zip>
        </target>
 
</project>
