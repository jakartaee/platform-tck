<!--

    Copyright (c) 2018 Oracle and/or its affiliates. All rights reserved.

    This program and the accompanying materials are made available under the
    terms of the Eclipse Public License v. 2.0, which is available at
    http://www.eclipse.org/legal/epl-2.0.

    This Source Code may also be made available under the following Secondary
    Licenses when the conditions for such availability set forth in the
    Eclipse Public License v. 2.0 are satisfied: GNU General Public License,
    version 2 with the GNU Classpath Exception, which is available at
    https://www.gnu.org/software/classpath/license.html.

    SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0

-->

<project name="CONNECTOR" basedir="." default="build">
    
    <!-- IMPORTS -->
    <import file="../../bin/xml/ts.common.props.xml"/>
    
    <property name="deliverable.version" value="1.7"/>
    <property name="deliverable.tck.version" value="1.7.1"/>

    <ts.taskdef name="getportingclasses" 
                classname="com.sun.ant.taskdefs.common.GetPortingClasses"/>
    
    <target name="init">
        <mkdir dir="${deliverable.bundle.dir}/bin"/>
        <mkdir dir="${deliverable.bundle.dir}/classes"/>
        <mkdir dir="${deliverable.bundle.dir}/dist"/>
        <mkdir dir="${deliverable.bundle.dir}/lib/dtds"/>
        <mkdir dir="${deliverable.bundle.dir}/src"/>
        <mkdir dir="${deliverable.bundle.dir}/src/com/sun/ts/lib/porting"/>
    </target>
    
    <target name="copyinstall">
        <copy todir="${deliverable.bundle.dir}/bin" includeEmptyDirs="no">
            <fileset dir="${ts.home}/install/${deliverable.name.lower}/bin"
                     includes="**/*"
                     excludes="**/workspace.xml"/>
        </copy>

        <copy file="${common.bin.dir}/xml/impl/glassfish/deploy.xml" todir="${deliverable.bundle.dir}/bin/xml/impl/glassfish"/>
        <copy file="${common.bin.dir}/xml/impl/glassfish/s1as.xml" todir="${deliverable.bundle.dir}/bin/xml/impl/glassfish"/>
        <copy file="${common.bin.dir}/xml/impl/glassfish/common.xml" todir="${deliverable.bundle.dir}/bin/xml/impl/glassfish"/>
        <copy file="${common.bin.dir}/xml/impl/glassfish/connector.xml" todir="${deliverable.bundle.dir}/bin/xml/impl/glassfish"/>

        <copy todir="${deliverable.bundle.dir}/bin/xml/impl/glassfish" includeEmptyDirs="no">
            <fileset dir="${common.bin.dir}/xml/impl/glassfish"
                     includes="**/*"/>
        </copy>

        <copy todir="${deliverable.bundle.dir}/src">
            <fileset dir="${ts.home}/install/${deliverable.name.lower}/other" 
                     includes="testsuite.jtt, vehicle.properties"/>
        </copy>

        <copy todir="${deliverable.bundle.dir}/src/com/sun/ts/tests/jaxws/common/xml">
            <fileset dir="${ts.home}/src/com/sun/ts/tests/jaxws/common/xml" 
                     includes="*"/>
        </copy>

        <copy todir="${deliverable.bundle.dir}/lib">
            <fileset dir="${ts.home}/lib" 
                     includes="connector.jar,jaxb*" />
        </copy>

        <!-- NOTICE will be EPL or EFTL specific: TBD-->
        <!--copy todir="${deliverable.bundle.dir}" includeEmptyDirs="no">
            <fileset dir="${ts.home}" includes="NOTICE" />
        </copy-->

        <copy tofile="${deliverable.bundle.dir}/LICENSE.md" file="${ts.home}/${licensefile}">
	  </copy>
    </target>

    <target name="jte.cleanup">
        <props.sanitizer file="${basedir}/${deliverable.bundle.dir}/bin/ts.jte" quiet="true">
            <property name="connector.home" value="" />
            <property name="orb.host" value="localhost" />
        </props.sanitizer>
    </target>
    

    <target name="build" depends="init">
        <antcall target="copyinstall"/>
    	<antcall target="jte.cleanup"/>
        
        <!-- the classes directory -->
        <copy todir="${deliverable.bundle.dir}/classes" includeEmptyDirs="no">
            <fileset dir="${ts.home}/classes"
                     includes="com/sun/ts/tests/common/connector/**/*.class,
                               com/sun/ts/tests/common/taglibsig/**/*.class,
                               com/sun/ts/tests/common/vehicle/**/*.class,
                               com/sun/ts/lib/**,
                               com/sun/ts/tests/signaturetest/*.class,
                               com/sun/ts/tests/signaturetest/connector/**/*,
                               com/sun/ts/tests/connector/**/*.class"
                     excludes="**/.svn/*,
                               com/sun/ts/lib/tests/**,
                               com/sun/ts/tests/connector/deployment/**,
                               com/sun/ts/tests/connector/resourceDefs/**,
                               com/sun/ts/tests/connector/localTx/msginflow/**,
                               com/sun/ts/tests/connector/localTx/transaction/**,
                               com/sun/ts/tests/connector/xa/transaction/**,
                               com/sun/ts/tests/connector/mdb/**,
                               com/sun/ts/tests/common/connector/embedded/**,
                               com/sun/ts/tests/signaturetest/*.txt,
                               com/sun/ts/tests/signaturetest/README
                               "/>
        </copy>

        <!-- copy relevant DTDs -->
        <copy todir="${deliverable.bundle.dir}/lib/dtds" includeEmptyDirs="no">
            <fileset dir="${ts.home}/lib/dtds" 
                     includes="*"/>
        </copy>
        
        <!-- copy relevant Schemas -->
        <copy todir="${deliverable.bundle.dir}/lib/schemas" 
              includeEmptyDirs="no">
            <fileset dir="${ts.home}/lib/schemas"
                     includes="*"/>
        </copy>
        
        <!-- the war files in the dist directory -->
        <copy todir="${deliverable.bundle.dir}/dist" includeEmptyDirs="no">
            <fileset dir="${ts.home}/dist"
                     includes="com/sun/ts/tests/connector/**/*.jar,
                               com/sun/ts/tests/connector/**/*.war,
                               com/sun/ts/tests/connector/**/*.xml,
                               com/sun/ts/tests/connector/**/*.ear
                               com/sun/ts/tests/common/connector/**"
                     excludes="com/sun/ts/tests/connector/deployment/**,
                               com/sun/ts/tests/connector/localTx/msginflow/**,
                               com/sun/ts/tests/connector/localTx/transaction/**,
                               com/sun/ts/tests/connector/xa/transaction/**,
                               com/sun/ts/tests/connector/resourceDefs/**,
                               com/sun/ts/tests/common/connector/embedded/**,
                               com/sun/ts/tests/connector/mdb/**,
                               com/sun/ts/tests/signaturetest/*.txt,
                     "/>
        </copy>
        
        <!-- the specific deliverable source directories -->
        <copy todir="${deliverable.bundle.dir}/src" includeEmptyDirs="no">
            <fileset dir="${ts.home}/src"
                     includes="com/sun/ts/tests/connector/**/*,
                               com/sun/ts/tests/common/connector/**/*, 
                               com/sun/ts/tests/common/sunxml/**/*, 
                               com/sun/ts/tests/common/taglibsig/**/*, 
                               com/sun/ts/tests/common/vehicle/**/*, 
                               com/sun/ts/lib/**/*,
                               com/sun/ts/tests/build.xml,
                               com/sun/ts/tests/signaturetest/*,
                               com/sun/ts/tests/signaturetest/connector/**/*,
                               com/sun/ts/tests/signaturetest/signature-repository/jakarta.resource*"
                     excludes="**/.svn/*,
                               com/sun/ts/lib/tests,
                               com/sun/ts/tests/connector/deployment/**,
                               com/sun/ts/tests/connector/localTx/msginflow/**,
                               com/sun/ts/tests/connector/localTx/transaction/**,
                               com/sun/ts/tests/connector/xa/transaction/**,
                               com/sun/ts/tests/connector/resourceDefs/**,
                               com/sun/ts/tests/common/connector/whitebox/ibanno/README.txt,
                               com/sun/ts/tests/connector/mdb/**,
                               com/sun/ts/tests/common/connector/embedded/**,
                               com/sun/ts/tests/signaturetest/*.txt,
                               com/sun/ts/tests/signaturetest/README
                               "/>
        </copy>
        
        <!-- the com/sun/ts/lib file -->
        <copy file="${ts.home}/src/com/sun/ts/lib/build.xml" 
              todir="${deliverable.bundle.dir}/src/com/sun/ts/lib"/>

        <!-- the com/sun/ts/lib/porting directory -->
        <copy todir="${deliverable.bundle.dir}/src/com/sun/ts/lib/porting" 
              includeEmptyDirs="no">
            <fileset dir="${ts.home}/src/com/sun/ts/lib/porting" 
                     includes="TSDeploymentInterface2.java,
                               DeploymentInfo.java,
                               TSDeploymentException.java,
                               TSURL.java,
                               TSURLInterface.java"/>
        </copy>
        
        <!-- the com/sun/ts/lib/implementation/sun/common file -->
        <copy file="${ts.home}/src/com/sun/ts/lib/implementation/sun/common/SunRIURL.java" 
              todir="${deliverable.bundle.dir}/src/com/sun/ts/lib/implementation/sun/common"/>
        
        <!-- the com/sun/ts/lib/implementation/sun/javaee/runtime dir -->
        <copy todir="${deliverable.bundle.dir}/src/com/sun/ts/lib/implementation/sun/javaee/runtime" 
              includeEmptyDirs="no">
            <fileset dir="${ts.home}/src/com/sun/ts/lib/implementation/sun/javaee/runtime" 
                     includes="**/**"/>
        </copy>


        <!-- copy the ReleaseNotes to TOP level -->
        <copy todir="${deliverable.bundle.dir}/..">
            <fileset dir="${ts.home}/install/${deliverable.dir}/docs"
                     includes="ReleaseNotes*.html"/>
        </copy>

        <!-- copy over the jacctck/docs directory content -->
        <copy todir="${deliverable.bundle.dir}/docs">
            <fileset dir="${ts.home}/install/${deliverable.dir}/docs"
                     includes="**/**"/>
        </copy>
	<antcall target="mvn"/>
        <!--antcall target="javadoc"/-->
        <!--
		  <antcall target="create.doc.bundle"/>
        -->        
    </target>

    <target name="mvn">
        <exec dir="${ts.home}/user_guides/${deliverable.dir}" executable="mvn"/>
        <copy toDir="${deliverable.bundle.dir}/docs/">
        <fileset dir="${ts.home}/user_guides/${deliverable.dir}/target"
                 includes="staging/*.html,
                generated-docs/*.pdf"/>
        </copy>
    </target>

    <target name="create.doc.bundle">
        <delete file="${deliverable.bundle.dir}/../${deliverable.name}tck-doc*.zip"/>
        <zip zipfile="${deliverable.bundle.dir}/../${deliverable.name}tck-doc-${deliverable.version}_${time.stamp.bundle.string}.zip">
            <zipfileset dir="${ts.home}/install/${deliverable.dir}/docs"
                    includes="**/*.html, **/*.gif, **/*.css"
                    excludes="*ReleaseNotes*.html"/>
        </zip>
    </target>
 
</project>
