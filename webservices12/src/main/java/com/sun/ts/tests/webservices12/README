(1) The webservices12/ejb directory tree of tests all deal with ejb based
    webservice endpoints. Below describes what is tested.

    The annotations directory of tests verify the use of the @WebServiceRef annotation 
    in the webservice Client. Here is what is tested:

    1) Multiple client WebServiceRef injection (clients in single client ear) is tested
    2) Multiple client WebServiceRef injection (clients in multiple client ear's) is tested
    3) Port Field WebServiceRef injection is tested
    4) Port Method WebServiceRef injection is tested
    5) WebServiceRef and HandlerChain injection is tested using SOAPHandlers
    6) WebServiceRef with no attributes is tested
    7) WebServiceRef with name attribute is tested
    8) WebServiceRef with name and value attribute is tested
    9) WebServiceRef with name, value, and type attribute is tested
    10) WebServiceRef with WebServiceProvider based endpoint is tested
    11) WebServiceRef with WebService based endpoint is tested
    12) WebServiceRef with no deployment descriptors is tested

    The descriptors directory tests the use of full DD's to override the @WebServiceRef 
    annotation and the @HandlerChain annotation in the webservice Client file.

(2) The webservices12/servlet directory tree of tests all deal with servlet 
    based webservice endpoints. Below describes what is tested.

    The WSMTOMSBFullDDsTest directory tests the enabling of MTOM and SOAP Protocol
    Binding via the deployment descriptors. Basically it verifies the deployment
    tags:

    <enable-mtom>true</enable-mtom>
    <protocol-binding>##SOAP11_HTTP</protocol-binding>
    <protocol-binding>##SOAP12_HTTP</protocol-binding>

    The WSMTOMSBAnnotationsTest directory tests the enabling of MTOM and SOAP 
    Protocol Binding using annotations. It verifies the following annotations 
    on the implementation class:

    @BindingType(SOAPBinding.SOAP11HTTP_MTOM_BINDING)
    @BindingType(SOAPBinding.SOAP12HTTP_MTOM_BINDING)

    The WebServiceRefsTest directory tests the @WebServiceRefs annotation which
    is a class level annotation that handles and processes multiple @WebServiceRef 
    annotations.

    The HandlerTest directory tests both LogicalHandler and SOAPHandler type
    handlers.

(3) The webservices12/specialcases directory tree of tests are special test cases 
    where the webservices are prebuilt and the clients are not prebuilt. When the 
    CTS harness runs these tests it will first deploy the prebuilt webservices then 
    it will build and package the clients by importing the wsdl's from the deployed 
    webservices via the wsimport command. The harness then deploys the clients and 
    runs them against the deployed webservices. This verifies whether importing the 
    wsdl from a deployed webservices endpoint works properly. The step to build the
    clients is as follows:

    1) Install the CTS
    2) Configure the CTS
	% cd $TS_HOME/bin
  	% ant config.vi

    3) Build the special webservices clients
	% cd $TS_HOME/bin
  	% ant build.special.webservices.clients

(4) The webservices12/narrow directory tests the use of PortableRemoteObject.narrow to
    get the appropriate SEI for a given port.

(5) The webservices12/sec/descriptors directory tests the use of certificate and
    basic authentication security features for both ejb based and servlet based 
    endpoints. Username and passord info is passed via runtime DD's. Final
    wsdl is published and looked up via runtime DD's. Authentication type,
    roles, and method permissions are set via DD's and runtime DD's. 

    The webservices12/sec/annotations directory tests the use of certificate and
    basic authentication security features for both ejb based and servlet based
    endpoints. All secuity features are driven by annotations. Username and
    password info is set via the BindingProvider. Authentication type is set
    via runtime DD's. Roles and method permissions are set via annotations on
    the implementation bean class.

(6) The webservices1/wsdlImport directory tests the importing of wsdl's and schema's
    from various directory levels for both ejb based and servlet based endpoints.

(7) The webservices12/deploy directory tests the various deployment features for
    JavaEE based web services for both ejb based and servlet based endpoints.
